// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;
using HexaEngine.D3DCommon;
using System.Numerics;

namespace HexaEngine.DXGI
{
	public static unsafe class Extensions
	{
		public static HResult SetPrivateData(this ComPtr<IDXGIObject> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIObject> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIObject> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIObject> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIObject> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIObject* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIObject> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIObject> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIObject> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIObject> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIObject> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIObject> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIObject* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIObject> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIObject> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIObject> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIObject* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIObject*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDeviceSubObject> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDeviceSubObject> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDeviceSubObject> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDeviceSubObject> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDeviceSubObject> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDeviceSubObject> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDeviceSubObject> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDeviceSubObject> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDeviceSubObject> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDeviceSubObject> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDeviceSubObject> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDeviceSubObject> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIDeviceSubObject> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIDeviceSubObject> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGIDeviceSubObject> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGIDeviceSubObject> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGIDeviceSubObject* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDeviceSubObject*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIResource> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIResource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIResource> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIResource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIResource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIResource> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIResource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIResource> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIResource> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIResource> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIResource> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIResource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIResource> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGIResource> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGIResource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGIResource> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult GetSharedHandle(this ComPtr<IDXGIResource> comObj, nint* pSharedHandle) 
		{
			IDXGIResource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, nint*, HResult>)(handle->LpVtbl[5]))(handle, pSharedHandle);
			return ret;
		}

		public static HResult GetSharedHandle(this ComPtr<IDXGIResource> comObj, ref nint pSharedHandle) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (nint* ppSharedHandle = &pSharedHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, nint*, HResult>)(handle->LpVtbl[5]))(handle, (nint*)ppSharedHandle);
				return ret;
			}
		}

		public static HResult GetUsage(this ComPtr<IDXGIResource> comObj, uint* pUsage) 
		{
			IDXGIResource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, HResult>)(handle->LpVtbl[6]))(handle, pUsage);
			return ret;
		}

		public static HResult GetUsage(this ComPtr<IDXGIResource> comObj, ref uint pUsage) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (uint* ppUsage = &pUsage)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, HResult>)(handle->LpVtbl[6]))(handle, (uint*)ppUsage);
				return ret;
			}
		}

		public static HResult SetEvictionPriority(this ComPtr<IDXGIResource> comObj, uint evictionPriority) 
		{
			IDXGIResource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint, HResult>)(handle->LpVtbl[7]))(handle, evictionPriority);
			return ret;
		}

		public static HResult GetEvictionPriority(this ComPtr<IDXGIResource> comObj, uint* pEvictionPriority) 
		{
			IDXGIResource* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, HResult>)(handle->LpVtbl[8]))(handle, pEvictionPriority);
			return ret;
		}

		public static HResult GetEvictionPriority(this ComPtr<IDXGIResource> comObj, ref uint pEvictionPriority) 
		{
			IDXGIResource* handle = comObj.Handle;
			fixed (uint* ppEvictionPriority = &pEvictionPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource*, uint*, HResult>)(handle->LpVtbl[8]))(handle, (uint*)ppEvictionPriority);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIKeyedMutex> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIKeyedMutex> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIKeyedMutex> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIKeyedMutex> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIKeyedMutex> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIKeyedMutex> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIKeyedMutex> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIKeyedMutex> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIKeyedMutex> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIKeyedMutex> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIKeyedMutex> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIKeyedMutex> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIKeyedMutex> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIKeyedMutex> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGIKeyedMutex> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGIKeyedMutex> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult AcquireSync(this ComPtr<IDXGIKeyedMutex> comObj, ulong key, uint dwMilliseconds) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, ulong, uint, HResult>)(handle->LpVtbl[5]))(handle, key, dwMilliseconds);
			return ret;
		}

		public static HResult ReleaseSync(this ComPtr<IDXGIKeyedMutex> comObj, ulong key) 
		{
			IDXGIKeyedMutex* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIKeyedMutex*, ulong, HResult>)(handle->LpVtbl[6]))(handle, key);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISurface> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGISurface* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISurface> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGISurface* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISurface* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGISurface> comObj, Guid* riid, void** ppParent) 
		{
			IDXGISurface* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGISurface> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGISurface> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGISurface* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGISurface> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGISurface> comObj, DxgiSurfaceDesc* pDesc) 
		{
			IDXGISurface* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiSurfaceDesc*, HResult>)(handle->LpVtbl[5]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGISurface> comObj, ref DxgiSurfaceDesc pDesc) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiSurfaceDesc*, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult Map(this ComPtr<IDXGISurface> comObj, DxgiMappedRect* pLockedRect, uint mapFlags) 
		{
			IDXGISurface* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiMappedRect*, uint, HResult>)(handle->LpVtbl[6]))(handle, pLockedRect, mapFlags);
			return ret;
		}

		public static HResult Map(this ComPtr<IDXGISurface> comObj, ref DxgiMappedRect pLockedRect, uint mapFlags) 
		{
			IDXGISurface* handle = comObj.Handle;
			fixed (DxgiMappedRect* ppLockedRect = &pLockedRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, DxgiMappedRect*, uint, HResult>)(handle->LpVtbl[6]))(handle, (DxgiMappedRect*)ppLockedRect, mapFlags);
				return ret;
			}
		}

		public static HResult Unmap(this ComPtr<IDXGISurface> comObj) 
		{
			IDXGISurface* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface*, HResult>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISurface1> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISurface1> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface1> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface1> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface1> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface1> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface1> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface1> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface1> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface1> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface1> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface1> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGISurface1> comObj, Guid* riid, void** ppParent) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGISurface1> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGISurface1> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGISurface1> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGISurface1> comObj, DxgiSurfaceDesc* pDesc) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiSurfaceDesc*, HResult>)(handle->LpVtbl[5]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGISurface1> comObj, ref DxgiSurfaceDesc pDesc) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiSurfaceDesc*, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult Map(this ComPtr<IDXGISurface1> comObj, DxgiMappedRect* pLockedRect, uint mapFlags) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiMappedRect*, uint, HResult>)(handle->LpVtbl[6]))(handle, pLockedRect, mapFlags);
			return ret;
		}

		public static HResult Map(this ComPtr<IDXGISurface1> comObj, ref DxgiMappedRect pLockedRect, uint mapFlags) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (DxgiMappedRect* ppLockedRect = &pLockedRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, DxgiMappedRect*, uint, HResult>)(handle->LpVtbl[6]))(handle, (DxgiMappedRect*)ppLockedRect, mapFlags);
				return ret;
			}
		}

		public static HResult Unmap(this ComPtr<IDXGISurface1> comObj) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, HResult>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		public static HResult GetDc(this ComPtr<IDXGISurface1> comObj, Bool32 discard, nint* phdc) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Bool32, nint*, HResult>)(handle->LpVtbl[8]))(handle, discard, phdc);
			return ret;
		}

		public static HResult GetDc(this ComPtr<IDXGISurface1> comObj, Bool32 discard, ref nint phdc) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (nint* pphdc = &phdc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Bool32, nint*, HResult>)(handle->LpVtbl[8]))(handle, discard, (nint*)pphdc);
				return ret;
			}
		}

		public static HResult ReleaseDc(this ComPtr<IDXGISurface1> comObj, Rect32* pDirtyRect) 
		{
			IDXGISurface1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Rect32*, HResult>)(handle->LpVtbl[9]))(handle, pDirtyRect);
			return ret;
		}

		public static HResult ReleaseDc(this ComPtr<IDXGISurface1> comObj, ref Rect32 pDirtyRect) 
		{
			IDXGISurface1* handle = comObj.Handle;
			fixed (Rect32* ppDirtyRect = &pDirtyRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface1*, Rect32*, HResult>)(handle->LpVtbl[9]))(handle, (Rect32*)ppDirtyRect);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIAdapter> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIAdapter> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIAdapter> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIAdapter> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter> comObj, uint output, IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, ppOutput);
			return ret;
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter> comObj, uint output, ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter> comObj, uint output, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIAdapter> comObj, DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, DxgiAdapterDesc*, HResult>)(handle->LpVtbl[5]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIAdapter> comObj, ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, DxgiAdapterDesc*, HResult>)(handle->LpVtbl[5]))(handle, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter> comObj, Guid* interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, interfaceName, pUMDVersion);
			return ret;
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter> comObj, ref Guid interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter> comObj, Guid* interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter> comObj, ref Guid interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter* handle = comObj.Handle;
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput> comObj, DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput> comObj, ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult WaitForVBlank(this ComPtr<IDXGIOutput> comObj) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput> comObj, IUnknown* pDevice, Bool32 exclusive) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput> comObj, ref IUnknown pDevice, Bool32 exclusive) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput> comObj, ComPtr<IUnknown> pDevice, Bool32 exclusive) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static void ReleaseOwnership(this ComPtr<IDXGIOutput> comObj) 
		{
			IDXGIOutput* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIOutput*, void>)(handle->LpVtbl[9]))(handle);
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput> comObj, DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, pGammaCaps);
			return ret;
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput> comObj, ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, pArray);
			return ret;
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, pArray);
			return ret;
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput> comObj, IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput> comObj, ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput> comObj, ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput> comObj, IDXGISurface* pDestination) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput> comObj, ref IDXGISurface pDestination) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput> comObj, ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISwapChain> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISwapChain> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGISwapChain> comObj, Guid* riid, void** ppParent) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGISwapChain> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGISwapChain> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGISwapChain> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult Present(this ComPtr<IDXGISwapChain> comObj, uint syncInterval, uint flags) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint, uint, HResult>)(handle->LpVtbl[5]))(handle, syncInterval, flags);
			return ret;
		}

		public static HResult GetBuffer(this ComPtr<IDXGISwapChain> comObj, uint buffer, Guid* riid, void** ppSurface) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint, Guid*, void**, HResult>)(handle->LpVtbl[6]))(handle, buffer, riid, ppSurface);
			return ret;
		}

		public static HResult GetBuffer(this ComPtr<IDXGISwapChain> comObj, uint buffer, ref Guid riid, void** ppSurface) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint, Guid*, void**, HResult>)(handle->LpVtbl[6]))(handle, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain> comObj, Bool32 fullscreen, IDXGIOutput* pTarget) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, pTarget);
			return ret;
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain> comObj, Bool32 fullscreen, ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain> comObj, Bool32 fullscreen, ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, pTarget);
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain> comObj, Bool32* pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, ppTarget);
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain> comObj, ref Bool32 pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain> comObj, Bool32* pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain> comObj, Bool32* pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			ppTarget = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain> comObj, ref Bool32 pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain> comObj, ref Bool32 pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGISwapChain> comObj, DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiSwapChainDesc*, HResult>)(handle->LpVtbl[9]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGISwapChain> comObj, ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiSwapChainDesc*, HResult>)(handle->LpVtbl[9]))(handle, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult ResizeBuffers(this ComPtr<IDXGISwapChain> comObj, uint bufferCount, uint width, uint height, DxgiFormat newFormat, uint swapChainFlags) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint, uint, uint, DxgiFormat, uint, HResult>)(handle->LpVtbl[10]))(handle, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		public static HResult ResizeTarget(this ComPtr<IDXGISwapChain> comObj, DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiModeDesc*, HResult>)(handle->LpVtbl[11]))(handle, pNewTargetParameters);
			return ret;
		}

		public static HResult ResizeTarget(this ComPtr<IDXGISwapChain> comObj, ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiModeDesc*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain> comObj, IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, ppOutput);
			return ret;
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain> comObj, ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain> comObj, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGISwapChain> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[13]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGISwapChain> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[13]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetLastPresentCount(this ComPtr<IDXGISwapChain> comObj, uint* pLastPresentCount) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint*, HResult>)(handle->LpVtbl[14]))(handle, pLastPresentCount);
			return ret;
		}

		public static HResult GetLastPresentCount(this ComPtr<IDXGISwapChain> comObj, ref uint pLastPresentCount) 
		{
			IDXGISwapChain* handle = comObj.Handle;
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain*, uint*, HResult>)(handle->LpVtbl[14]))(handle, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory> comObj, uint adapter, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory> comObj, uint adapter, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory> comObj, uint adapter, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult MakeWindowAssociation(this ComPtr<IDXGIFactory> comObj, nint windowHandle, uint flags) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint, uint, HResult>)(handle->LpVtbl[5]))(handle, windowHandle, flags);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory> comObj, nint* pWindowHandle) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint*, HResult>)(handle->LpVtbl[6]))(handle, pWindowHandle);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory> comObj, ref nint pWindowHandle) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint*, HResult>)(handle->LpVtbl[6]))(handle, (nint*)ppWindowHandle);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory> comObj, nint module, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, ppAdapter);
			return ret;
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory> comObj, nint module, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory> comObj, nint module, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDevice> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDevice> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIDevice> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIDevice> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice> comObj, IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, pAdapter);
			return ret;
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice> comObj, ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice> comObj, out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice* handle = comObj.Handle;
			pAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice> comObj, IUnknown*** ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice> comObj, ref IUnknown* ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (IUnknown** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, (IUnknown***)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice> comObj, ComPtr<IUnknown> ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice> comObj, IUnknown*** ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice> comObj, ref IUnknown* ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, (IUnknown***)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice> comObj, ComPtr<IUnknown> ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult SetGpuThreadPriority(this ComPtr<IDXGIDevice> comObj, int priority) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, int, HResult>)(handle->LpVtbl[7]))(handle, priority);
			return ret;
		}

		public static HResult GetGpuThreadPriority(this ComPtr<IDXGIDevice> comObj, int* pPriority) 
		{
			IDXGIDevice* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, int*, HResult>)(handle->LpVtbl[8]))(handle, pPriority);
			return ret;
		}

		public static HResult GetGpuThreadPriority(this ComPtr<IDXGIDevice> comObj, ref int pPriority) 
		{
			IDXGIDevice* handle = comObj.Handle;
			fixed (int* ppPriority = &pPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice*, int*, HResult>)(handle->LpVtbl[8]))(handle, (int*)ppPriority);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory1> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory1> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory1> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory1> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory1> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory1> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory1> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory1> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory1> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory1> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory1> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory1> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory1> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory1> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory1> comObj, uint adapter, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory1> comObj, uint adapter, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory1> comObj, uint adapter, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult MakeWindowAssociation(this ComPtr<IDXGIFactory1> comObj, nint windowHandle, uint flags) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint, uint, HResult>)(handle->LpVtbl[5]))(handle, windowHandle, flags);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory1> comObj, nint* pWindowHandle) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint*, HResult>)(handle->LpVtbl[6]))(handle, pWindowHandle);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory1> comObj, ref nint pWindowHandle) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint*, HResult>)(handle->LpVtbl[6]))(handle, (nint*)ppWindowHandle);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory1> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory1> comObj, nint module, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, ppAdapter);
			return ret;
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory1> comObj, nint module, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory1> comObj, nint module, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory1> comObj, uint adapter, IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory1> comObj, uint adapter, ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory1> comObj, uint adapter, out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static Bool32 IsCurrent(this ComPtr<IDXGIFactory1> comObj) 
		{
			IDXGIFactory1* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory1*, Bool32>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIAdapter1> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIAdapter1> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter1> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter1> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter1> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter1> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter1> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter1> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter1> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter1> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter1> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter1> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIAdapter1> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIAdapter1> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter1> comObj, uint output, IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, ppOutput);
			return ret;
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter1> comObj, uint output, ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter1> comObj, uint output, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIAdapter1> comObj, DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, DxgiAdapterDesc*, HResult>)(handle->LpVtbl[5]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIAdapter1> comObj, ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, DxgiAdapterDesc*, HResult>)(handle->LpVtbl[5]))(handle, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter1> comObj, Guid* interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, interfaceName, pUMDVersion);
			return ret;
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter1> comObj, ref Guid interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter1> comObj, Guid* interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter1> comObj, ref Guid interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		public static HResult GetDesc1(this ComPtr<IDXGIAdapter1> comObj, DxgiAdapterDesc1* pDesc) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, DxgiAdapterDesc1*, HResult>)(handle->LpVtbl[7]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc1(this ComPtr<IDXGIAdapter1> comObj, ref DxgiAdapterDesc1 pDesc) 
		{
			IDXGIAdapter1* handle = comObj.Handle;
			fixed (DxgiAdapterDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter1*, DxgiAdapterDesc1*, HResult>)(handle->LpVtbl[7]))(handle, (DxgiAdapterDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDevice1> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDevice1> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice1> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice1> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice1> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice1> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice1> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice1> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice1> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice1> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice1> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice1> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIDevice1> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIDevice1> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice1> comObj, IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, pAdapter);
			return ret;
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice1> comObj, ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice1> comObj, out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			pAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice1> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice1> comObj, IUnknown*** ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice1> comObj, ref IUnknown* ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (IUnknown** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, (IUnknown***)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice1> comObj, ComPtr<IUnknown> ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice1> comObj, IUnknown*** ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice1> comObj, ref IUnknown* ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, (IUnknown***)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice1> comObj, ComPtr<IUnknown> ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult SetGpuThreadPriority(this ComPtr<IDXGIDevice1> comObj, int priority) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, int, HResult>)(handle->LpVtbl[7]))(handle, priority);
			return ret;
		}

		public static HResult GetGpuThreadPriority(this ComPtr<IDXGIDevice1> comObj, int* pPriority) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, int*, HResult>)(handle->LpVtbl[8]))(handle, pPriority);
			return ret;
		}

		public static HResult GetGpuThreadPriority(this ComPtr<IDXGIDevice1> comObj, ref int pPriority) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (int* ppPriority = &pPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, int*, HResult>)(handle->LpVtbl[8]))(handle, (int*)ppPriority);
				return ret;
			}
		}

		public static HResult SetMaximumFrameLatency(this ComPtr<IDXGIDevice1> comObj, uint maxLatency) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, uint, HResult>)(handle->LpVtbl[9]))(handle, maxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGIDevice1> comObj, uint* pMaxLatency) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, uint*, HResult>)(handle->LpVtbl[10]))(handle, pMaxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGIDevice1> comObj, ref uint pMaxLatency) 
		{
			IDXGIDevice1* handle = comObj.Handle;
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice1*, uint*, HResult>)(handle->LpVtbl[10]))(handle, (uint*)ppMaxLatency);
				return ret;
			}
		}

		public static Bool32 IsStereoEnabled(this ComPtr<IDXGIDisplayControl> comObj) 
		{
			IDXGIDisplayControl* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIDisplayControl*, Bool32>)(*handle->LpVtbl))(handle);
			return ret;
		}

		public static void SetStereoEnabled(this ComPtr<IDXGIDisplayControl> comObj, Bool32 enabled) 
		{
			IDXGIDisplayControl* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIDisplayControl*, Bool32, void>)(handle->LpVtbl[1]))(handle, enabled);
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutputDuplication> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutputDuplication> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutputDuplication> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutputDuplication> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutputDuplication> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutputDuplication> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutputDuplication> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutputDuplication> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutputDuplication> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutputDuplication> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutputDuplication> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutputDuplication> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIOutputDuplication> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIOutputDuplication> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static void GetDesc(this ComPtr<IDXGIOutputDuplication> comObj, DxgiOutduplDesc* pDesc) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, DxgiOutduplDesc*, void>)(handle->LpVtbl[4]))(handle, pDesc);
		}

		public static void GetDesc(this ComPtr<IDXGIOutputDuplication> comObj, ref DxgiOutduplDesc pDesc) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (DxgiOutduplDesc* ppDesc = &pDesc)
			{
				((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, DxgiOutduplDesc*, void>)(handle->LpVtbl[4]))(handle, (DxgiOutduplDesc*)ppDesc);
			}
		}

		public static HResult AcquireNextFrame(this ComPtr<IDXGIOutputDuplication> comObj, uint timeoutInMilliseconds, DxgiOutduplFrameInfo* pFrameInfo, IDXGIResource** ppDesktopResource) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(handle->LpVtbl[5]))(handle, timeoutInMilliseconds, pFrameInfo, ppDesktopResource);
			return ret;
		}

		public static HResult AcquireNextFrame(this ComPtr<IDXGIOutputDuplication> comObj, uint timeoutInMilliseconds, ref DxgiOutduplFrameInfo pFrameInfo, IDXGIResource** ppDesktopResource) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (DxgiOutduplFrameInfo* ppFrameInfo = &pFrameInfo)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(handle->LpVtbl[5]))(handle, timeoutInMilliseconds, (DxgiOutduplFrameInfo*)ppFrameInfo, ppDesktopResource);
				return ret;
			}
		}

		public static HResult AcquireNextFrame(this ComPtr<IDXGIOutputDuplication> comObj, uint timeoutInMilliseconds, DxgiOutduplFrameInfo* pFrameInfo, ref IDXGIResource* ppDesktopResource) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (IDXGIResource** pppDesktopResource = &ppDesktopResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(handle->LpVtbl[5]))(handle, timeoutInMilliseconds, pFrameInfo, (IDXGIResource**)pppDesktopResource);
				return ret;
			}
		}

		public static HResult AcquireNextFrame(this ComPtr<IDXGIOutputDuplication> comObj, uint timeoutInMilliseconds, DxgiOutduplFrameInfo* pFrameInfo, out ComPtr<IDXGIResource> ppDesktopResource) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			ppDesktopResource = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(handle->LpVtbl[5]))(handle, timeoutInMilliseconds, pFrameInfo, (IDXGIResource**)ppDesktopResource.GetAddressOf());
			return ret;
		}

		public static HResult AcquireNextFrame(this ComPtr<IDXGIOutputDuplication> comObj, uint timeoutInMilliseconds, ref DxgiOutduplFrameInfo pFrameInfo, ref IDXGIResource* ppDesktopResource) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (DxgiOutduplFrameInfo* ppFrameInfo = &pFrameInfo)
			{
				fixed (IDXGIResource** pppDesktopResource = &ppDesktopResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(handle->LpVtbl[5]))(handle, timeoutInMilliseconds, (DxgiOutduplFrameInfo*)ppFrameInfo, (IDXGIResource**)pppDesktopResource);
					return ret;
				}
			}
		}

		public static HResult AcquireNextFrame(this ComPtr<IDXGIOutputDuplication> comObj, uint timeoutInMilliseconds, ref DxgiOutduplFrameInfo pFrameInfo, out ComPtr<IDXGIResource> ppDesktopResource) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (DxgiOutduplFrameInfo* ppFrameInfo = &pFrameInfo)
			{
				ppDesktopResource = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplFrameInfo*, IDXGIResource**, HResult>)(handle->LpVtbl[5]))(handle, timeoutInMilliseconds, (DxgiOutduplFrameInfo*)ppFrameInfo, (IDXGIResource**)ppDesktopResource.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetFrameDirtyRects(this ComPtr<IDXGIOutputDuplication> comObj, uint dirtyRectsBufferSize, Rect32* pDirtyRectsBuffer, uint* pDirtyRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, Rect32*, uint*, HResult>)(handle->LpVtbl[6]))(handle, dirtyRectsBufferSize, pDirtyRectsBuffer, pDirtyRectsBufferSizeRequired);
			return ret;
		}

		public static HResult GetFrameDirtyRects(this ComPtr<IDXGIOutputDuplication> comObj, uint dirtyRectsBufferSize, ref Rect32 pDirtyRectsBuffer, uint* pDirtyRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (Rect32* ppDirtyRectsBuffer = &pDirtyRectsBuffer)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, Rect32*, uint*, HResult>)(handle->LpVtbl[6]))(handle, dirtyRectsBufferSize, (Rect32*)ppDirtyRectsBuffer, pDirtyRectsBufferSizeRequired);
				return ret;
			}
		}

		public static HResult GetFrameDirtyRects(this ComPtr<IDXGIOutputDuplication> comObj, uint dirtyRectsBufferSize, Rect32* pDirtyRectsBuffer, ref uint pDirtyRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (uint* ppDirtyRectsBufferSizeRequired = &pDirtyRectsBufferSizeRequired)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, Rect32*, uint*, HResult>)(handle->LpVtbl[6]))(handle, dirtyRectsBufferSize, pDirtyRectsBuffer, (uint*)ppDirtyRectsBufferSizeRequired);
				return ret;
			}
		}

		public static HResult GetFrameDirtyRects(this ComPtr<IDXGIOutputDuplication> comObj, uint dirtyRectsBufferSize, ref Rect32 pDirtyRectsBuffer, ref uint pDirtyRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (Rect32* ppDirtyRectsBuffer = &pDirtyRectsBuffer)
			{
				fixed (uint* ppDirtyRectsBufferSizeRequired = &pDirtyRectsBufferSizeRequired)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, Rect32*, uint*, HResult>)(handle->LpVtbl[6]))(handle, dirtyRectsBufferSize, (Rect32*)ppDirtyRectsBuffer, (uint*)ppDirtyRectsBufferSizeRequired);
					return ret;
				}
			}
		}

		public static HResult GetFrameMoveRects(this ComPtr<IDXGIOutputDuplication> comObj, uint moveRectsBufferSize, DxgiOutduplMoveRect* pMoveRectBuffer, uint* pMoveRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplMoveRect*, uint*, HResult>)(handle->LpVtbl[7]))(handle, moveRectsBufferSize, pMoveRectBuffer, pMoveRectsBufferSizeRequired);
			return ret;
		}

		public static HResult GetFrameMoveRects(this ComPtr<IDXGIOutputDuplication> comObj, uint moveRectsBufferSize, ref DxgiOutduplMoveRect pMoveRectBuffer, uint* pMoveRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (DxgiOutduplMoveRect* ppMoveRectBuffer = &pMoveRectBuffer)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplMoveRect*, uint*, HResult>)(handle->LpVtbl[7]))(handle, moveRectsBufferSize, (DxgiOutduplMoveRect*)ppMoveRectBuffer, pMoveRectsBufferSizeRequired);
				return ret;
			}
		}

		public static HResult GetFrameMoveRects(this ComPtr<IDXGIOutputDuplication> comObj, uint moveRectsBufferSize, DxgiOutduplMoveRect* pMoveRectBuffer, ref uint pMoveRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (uint* ppMoveRectsBufferSizeRequired = &pMoveRectsBufferSizeRequired)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplMoveRect*, uint*, HResult>)(handle->LpVtbl[7]))(handle, moveRectsBufferSize, pMoveRectBuffer, (uint*)ppMoveRectsBufferSizeRequired);
				return ret;
			}
		}

		public static HResult GetFrameMoveRects(this ComPtr<IDXGIOutputDuplication> comObj, uint moveRectsBufferSize, ref DxgiOutduplMoveRect pMoveRectBuffer, ref uint pMoveRectsBufferSizeRequired) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (DxgiOutduplMoveRect* ppMoveRectBuffer = &pMoveRectBuffer)
			{
				fixed (uint* ppMoveRectsBufferSizeRequired = &pMoveRectsBufferSizeRequired)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, DxgiOutduplMoveRect*, uint*, HResult>)(handle->LpVtbl[7]))(handle, moveRectsBufferSize, (DxgiOutduplMoveRect*)ppMoveRectBuffer, (uint*)ppMoveRectsBufferSizeRequired);
					return ret;
				}
			}
		}

		public static HResult GetFramePointerShape(this ComPtr<IDXGIOutputDuplication> comObj, uint pointerShapeBufferSize, void* pPointerShapeBuffer, uint* pPointerShapeBufferSizeRequired, DxgiOutduplPointerShapeInfo* pPointerShapeInfo) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(handle->LpVtbl[8]))(handle, pointerShapeBufferSize, pPointerShapeBuffer, pPointerShapeBufferSizeRequired, pPointerShapeInfo);
			return ret;
		}

		public static HResult GetFramePointerShape(this ComPtr<IDXGIOutputDuplication> comObj, uint pointerShapeBufferSize, void* pPointerShapeBuffer, ref uint pPointerShapeBufferSizeRequired, DxgiOutduplPointerShapeInfo* pPointerShapeInfo) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (uint* ppPointerShapeBufferSizeRequired = &pPointerShapeBufferSizeRequired)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(handle->LpVtbl[8]))(handle, pointerShapeBufferSize, pPointerShapeBuffer, (uint*)ppPointerShapeBufferSizeRequired, pPointerShapeInfo);
				return ret;
			}
		}

		public static HResult GetFramePointerShape(this ComPtr<IDXGIOutputDuplication> comObj, uint pointerShapeBufferSize, void* pPointerShapeBuffer, uint* pPointerShapeBufferSizeRequired, ref DxgiOutduplPointerShapeInfo pPointerShapeInfo) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (DxgiOutduplPointerShapeInfo* ppPointerShapeInfo = &pPointerShapeInfo)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(handle->LpVtbl[8]))(handle, pointerShapeBufferSize, pPointerShapeBuffer, pPointerShapeBufferSizeRequired, (DxgiOutduplPointerShapeInfo*)ppPointerShapeInfo);
				return ret;
			}
		}

		public static HResult GetFramePointerShape(this ComPtr<IDXGIOutputDuplication> comObj, uint pointerShapeBufferSize, void* pPointerShapeBuffer, ref uint pPointerShapeBufferSizeRequired, ref DxgiOutduplPointerShapeInfo pPointerShapeInfo) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (uint* ppPointerShapeBufferSizeRequired = &pPointerShapeBufferSizeRequired)
			{
				fixed (DxgiOutduplPointerShapeInfo* ppPointerShapeInfo = &pPointerShapeInfo)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, uint, void*, uint*, DxgiOutduplPointerShapeInfo*, HResult>)(handle->LpVtbl[8]))(handle, pointerShapeBufferSize, pPointerShapeBuffer, (uint*)ppPointerShapeBufferSizeRequired, (DxgiOutduplPointerShapeInfo*)ppPointerShapeInfo);
					return ret;
				}
			}
		}

		public static HResult MapDesktopSurface(this ComPtr<IDXGIOutputDuplication> comObj, DxgiMappedRect* pLockedRect) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, DxgiMappedRect*, HResult>)(handle->LpVtbl[9]))(handle, pLockedRect);
			return ret;
		}

		public static HResult MapDesktopSurface(this ComPtr<IDXGIOutputDuplication> comObj, ref DxgiMappedRect pLockedRect) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			fixed (DxgiMappedRect* ppLockedRect = &pLockedRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, DxgiMappedRect*, HResult>)(handle->LpVtbl[9]))(handle, (DxgiMappedRect*)ppLockedRect);
				return ret;
			}
		}

		public static HResult UnMapDesktopSurface(this ComPtr<IDXGIOutputDuplication> comObj) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, HResult>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		public static HResult ReleaseFrame(this ComPtr<IDXGIOutputDuplication> comObj) 
		{
			IDXGIOutputDuplication* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutputDuplication*, HResult>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISurface2> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISurface2> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface2> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface2> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface2> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface2> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface2> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISurface2> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface2> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface2> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface2> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISurface2> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGISurface2> comObj, Guid* riid, void** ppParent) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGISurface2> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGISurface2> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGISurface2> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGISurface2> comObj, DxgiSurfaceDesc* pDesc) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, DxgiSurfaceDesc*, HResult>)(handle->LpVtbl[5]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGISurface2> comObj, ref DxgiSurfaceDesc pDesc) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, DxgiSurfaceDesc*, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult Map(this ComPtr<IDXGISurface2> comObj, DxgiMappedRect* pLockedRect, uint mapFlags) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, DxgiMappedRect*, uint, HResult>)(handle->LpVtbl[6]))(handle, pLockedRect, mapFlags);
			return ret;
		}

		public static HResult Map(this ComPtr<IDXGISurface2> comObj, ref DxgiMappedRect pLockedRect, uint mapFlags) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (DxgiMappedRect* ppLockedRect = &pLockedRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, DxgiMappedRect*, uint, HResult>)(handle->LpVtbl[6]))(handle, (DxgiMappedRect*)ppLockedRect, mapFlags);
				return ret;
			}
		}

		public static HResult Unmap(this ComPtr<IDXGISurface2> comObj) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, HResult>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		public static HResult GetDc(this ComPtr<IDXGISurface2> comObj, Bool32 discard, nint* phdc) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Bool32, nint*, HResult>)(handle->LpVtbl[8]))(handle, discard, phdc);
			return ret;
		}

		public static HResult GetDc(this ComPtr<IDXGISurface2> comObj, Bool32 discard, ref nint phdc) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (nint* pphdc = &phdc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Bool32, nint*, HResult>)(handle->LpVtbl[8]))(handle, discard, (nint*)pphdc);
				return ret;
			}
		}

		public static HResult ReleaseDc(this ComPtr<IDXGISurface2> comObj, Rect32* pDirtyRect) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Rect32*, HResult>)(handle->LpVtbl[9]))(handle, pDirtyRect);
			return ret;
		}

		public static HResult ReleaseDc(this ComPtr<IDXGISurface2> comObj, ref Rect32 pDirtyRect) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Rect32* ppDirtyRect = &pDirtyRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Rect32*, HResult>)(handle->LpVtbl[9]))(handle, (Rect32*)ppDirtyRect);
				return ret;
			}
		}

		public static HResult GetResource(this ComPtr<IDXGISurface2> comObj, Guid* riid, void** ppParentResource, uint* pSubresourceIndex) 
		{
			IDXGISurface2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(handle->LpVtbl[10]))(handle, riid, ppParentResource, pSubresourceIndex);
			return ret;
		}

		public static HResult GetResource(this ComPtr<IDXGISurface2> comObj, ref Guid riid, void** ppParentResource, uint* pSubresourceIndex) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(handle->LpVtbl[10]))(handle, (Guid*)priid, ppParentResource, pSubresourceIndex);
				return ret;
			}
		}

		public static HResult GetResource(this ComPtr<IDXGISurface2> comObj, Guid* riid, void** ppParentResource, ref uint pSubresourceIndex) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (uint* ppSubresourceIndex = &pSubresourceIndex)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(handle->LpVtbl[10]))(handle, riid, ppParentResource, (uint*)ppSubresourceIndex);
				return ret;
			}
		}

		public static HResult GetResource(this ComPtr<IDXGISurface2> comObj, ref Guid riid, void** ppParentResource, ref uint pSubresourceIndex) 
		{
			IDXGISurface2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				fixed (uint* ppSubresourceIndex = &pSubresourceIndex)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISurface2*, Guid*, void**, uint*, HResult>)(handle->LpVtbl[10]))(handle, (Guid*)priid, ppParentResource, (uint*)ppSubresourceIndex);
					return ret;
				}
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIResource1> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIResource1> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource1> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource1> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource1> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource1> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource1> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIResource1> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIResource1> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIResource1> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIResource1> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIResource1> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIResource1> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIResource1> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGIResource1> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGIResource1> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult GetSharedHandle(this ComPtr<IDXGIResource1> comObj, nint* pSharedHandle) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, nint*, HResult>)(handle->LpVtbl[5]))(handle, pSharedHandle);
			return ret;
		}

		public static HResult GetSharedHandle(this ComPtr<IDXGIResource1> comObj, ref nint pSharedHandle) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (nint* ppSharedHandle = &pSharedHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, nint*, HResult>)(handle->LpVtbl[5]))(handle, (nint*)ppSharedHandle);
				return ret;
			}
		}

		public static HResult GetUsage(this ComPtr<IDXGIResource1> comObj, uint* pUsage) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint*, HResult>)(handle->LpVtbl[6]))(handle, pUsage);
			return ret;
		}

		public static HResult GetUsage(this ComPtr<IDXGIResource1> comObj, ref uint pUsage) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (uint* ppUsage = &pUsage)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint*, HResult>)(handle->LpVtbl[6]))(handle, (uint*)ppUsage);
				return ret;
			}
		}

		public static HResult SetEvictionPriority(this ComPtr<IDXGIResource1> comObj, uint evictionPriority) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint, HResult>)(handle->LpVtbl[7]))(handle, evictionPriority);
			return ret;
		}

		public static HResult GetEvictionPriority(this ComPtr<IDXGIResource1> comObj, uint* pEvictionPriority) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint*, HResult>)(handle->LpVtbl[8]))(handle, pEvictionPriority);
			return ret;
		}

		public static HResult GetEvictionPriority(this ComPtr<IDXGIResource1> comObj, ref uint pEvictionPriority) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (uint* ppEvictionPriority = &pEvictionPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint*, HResult>)(handle->LpVtbl[8]))(handle, (uint*)ppEvictionPriority);
				return ret;
			}
		}

		public static HResult CreateSubresourceSurface(this ComPtr<IDXGIResource1> comObj, uint index, IDXGISurface2** ppSurface) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint, IDXGISurface2**, HResult>)(handle->LpVtbl[9]))(handle, index, ppSurface);
			return ret;
		}

		public static HResult CreateSubresourceSurface(this ComPtr<IDXGIResource1> comObj, uint index, ref IDXGISurface2* ppSurface) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (IDXGISurface2** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint, IDXGISurface2**, HResult>)(handle->LpVtbl[9]))(handle, index, (IDXGISurface2**)pppSurface);
				return ret;
			}
		}

		public static HResult CreateSubresourceSurface(this ComPtr<IDXGIResource1> comObj, uint index, out ComPtr<IDXGISurface2> ppSurface) 
		{
			IDXGIResource1* handle = comObj.Handle;
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, uint, IDXGISurface2**, HResult>)(handle->LpVtbl[9]))(handle, index, (IDXGISurface2**)ppSurface.GetAddressOf());
			return ret;
		}

		public static HResult CreateSharedHandle(this ComPtr<IDXGIResource1> comObj, SecurityAttributes* pAttributes, uint dwAccess, char* lpName, nint* pHandle) 
		{
			IDXGIResource1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, SecurityAttributes*, uint, char*, nint*, HResult>)(handle->LpVtbl[10]))(handle, pAttributes, dwAccess, lpName, pHandle);
			return ret;
		}

		public static HResult CreateSharedHandle(this ComPtr<IDXGIResource1> comObj, ref SecurityAttributes pAttributes, uint dwAccess, char* lpName, nint* pHandle) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, SecurityAttributes*, uint, char*, nint*, HResult>)(handle->LpVtbl[10]))(handle, (SecurityAttributes*)ppAttributes, dwAccess, lpName, pHandle);
				return ret;
			}
		}

		public static HResult CreateSharedHandle(this ComPtr<IDXGIResource1> comObj, SecurityAttributes* pAttributes, uint dwAccess, char* lpName, ref nint pHandle) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (nint* ppHandle = &pHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, SecurityAttributes*, uint, char*, nint*, HResult>)(handle->LpVtbl[10]))(handle, pAttributes, dwAccess, lpName, (nint*)ppHandle);
				return ret;
			}
		}

		public static HResult CreateSharedHandle(this ComPtr<IDXGIResource1> comObj, ref SecurityAttributes pAttributes, uint dwAccess, char* lpName, ref nint pHandle) 
		{
			IDXGIResource1* handle = comObj.Handle;
			fixed (SecurityAttributes* ppAttributes = &pAttributes)
			{
				fixed (nint* ppHandle = &pHandle)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIResource1*, SecurityAttributes*, uint, char*, nint*, HResult>)(handle->LpVtbl[10]))(handle, (SecurityAttributes*)ppAttributes, dwAccess, lpName, (nint*)ppHandle);
					return ret;
				}
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDevice2> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDevice2> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice2> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice2> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice2> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice2> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice2> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice2> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice2> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice2> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice2> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice2> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIDevice2> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIDevice2> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice2> comObj, IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, pAdapter);
			return ret;
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice2> comObj, ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice2> comObj, out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			pAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice2> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice2> comObj, IUnknown*** ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice2> comObj, ref IUnknown* ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (IUnknown** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, (IUnknown***)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice2> comObj, ComPtr<IUnknown> ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice2> comObj, IUnknown*** ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice2> comObj, ref IUnknown* ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, (IUnknown***)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice2> comObj, ComPtr<IUnknown> ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult SetGpuThreadPriority(this ComPtr<IDXGIDevice2> comObj, int priority) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, int, HResult>)(handle->LpVtbl[7]))(handle, priority);
			return ret;
		}

		public static HResult GetGpuThreadPriority(this ComPtr<IDXGIDevice2> comObj, int* pPriority) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, int*, HResult>)(handle->LpVtbl[8]))(handle, pPriority);
			return ret;
		}

		public static HResult GetGpuThreadPriority(this ComPtr<IDXGIDevice2> comObj, ref int pPriority) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (int* ppPriority = &pPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, int*, HResult>)(handle->LpVtbl[8]))(handle, (int*)ppPriority);
				return ret;
			}
		}

		public static HResult SetMaximumFrameLatency(this ComPtr<IDXGIDevice2> comObj, uint maxLatency) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, HResult>)(handle->LpVtbl[9]))(handle, maxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGIDevice2> comObj, uint* pMaxLatency) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint*, HResult>)(handle->LpVtbl[10]))(handle, pMaxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGIDevice2> comObj, ref uint pMaxLatency) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint*, HResult>)(handle->LpVtbl[10]))(handle, (uint*)ppMaxLatency);
				return ret;
			}
		}

		public static HResult OfferResources(this ComPtr<IDXGIDevice2> comObj, uint numResources, IDXGIResource*** ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource***, DxgiOfferResourcePriority, HResult>)(handle->LpVtbl[11]))(handle, numResources, ppResources, priority);
			return ret;
		}

		public static HResult OfferResources(this ComPtr<IDXGIDevice2> comObj, uint numResources, ref IDXGIResource* ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource***, DxgiOfferResourcePriority, HResult>)(handle->LpVtbl[11]))(handle, numResources, (IDXGIResource***)pppResources, priority);
				return ret;
			}
		}

		public static HResult OfferResources(this ComPtr<IDXGIDevice2> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource***, DxgiOfferResourcePriority, HResult>)(handle->LpVtbl[11]))(handle, numResources, ppResources, priority);
			return ret;
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice2> comObj, uint numResources, IDXGIResource*** ppResources, Bool32* pDiscarded) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, pDiscarded);
			return ret;
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice2> comObj, uint numResources, ref IDXGIResource* ppResources, Bool32* pDiscarded) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, (IDXGIResource***)pppResources, pDiscarded);
				return ret;
			}
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice2> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, Bool32* pDiscarded) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, pDiscarded);
			return ret;
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice2> comObj, uint numResources, IDXGIResource*** ppResources, ref Bool32 pDiscarded) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, (Bool32*)ppDiscarded);
				return ret;
			}
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice2> comObj, uint numResources, ref IDXGIResource* ppResources, ref Bool32 pDiscarded) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				fixed (Bool32* ppDiscarded = &pDiscarded)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, (IDXGIResource***)pppResources, (Bool32*)ppDiscarded);
					return ret;
				}
			}
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice2> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, ref Bool32 pDiscarded) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, (Bool32*)ppDiscarded);
				return ret;
			}
		}

		public static HResult EnqueueSetEvent(this ComPtr<IDXGIDevice2> comObj, nint hEvent) 
		{
			IDXGIDevice2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice2*, nint, HResult>)(handle->LpVtbl[13]))(handle, hEvent);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISwapChain1> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISwapChain1> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain1> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain1> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain1> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain1> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain1> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain1> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain1> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain1> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain1> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain1> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGISwapChain1> comObj, Guid* riid, void** ppParent) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGISwapChain1> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGISwapChain1> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGISwapChain1> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult Present(this ComPtr<IDXGISwapChain1> comObj, uint syncInterval, uint flags) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, uint, HResult>)(handle->LpVtbl[5]))(handle, syncInterval, flags);
			return ret;
		}

		public static HResult GetBuffer(this ComPtr<IDXGISwapChain1> comObj, uint buffer, Guid* riid, void** ppSurface) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, Guid*, void**, HResult>)(handle->LpVtbl[6]))(handle, buffer, riid, ppSurface);
			return ret;
		}

		public static HResult GetBuffer(this ComPtr<IDXGISwapChain1> comObj, uint buffer, ref Guid riid, void** ppSurface) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, Guid*, void**, HResult>)(handle->LpVtbl[6]))(handle, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain1> comObj, Bool32 fullscreen, IDXGIOutput* pTarget) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, pTarget);
			return ret;
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain1> comObj, Bool32 fullscreen, ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain1> comObj, Bool32 fullscreen, ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, pTarget);
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain1> comObj, Bool32* pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, ppTarget);
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain1> comObj, ref Bool32 pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain1> comObj, Bool32* pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain1> comObj, Bool32* pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			ppTarget = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain1> comObj, ref Bool32 pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain1> comObj, ref Bool32 pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGISwapChain1> comObj, DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainDesc*, HResult>)(handle->LpVtbl[9]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGISwapChain1> comObj, ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainDesc*, HResult>)(handle->LpVtbl[9]))(handle, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult ResizeBuffers(this ComPtr<IDXGISwapChain1> comObj, uint bufferCount, uint width, uint height, DxgiFormat newFormat, uint swapChainFlags) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, uint, uint, DxgiFormat, uint, HResult>)(handle->LpVtbl[10]))(handle, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		public static HResult ResizeTarget(this ComPtr<IDXGISwapChain1> comObj, DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiModeDesc*, HResult>)(handle->LpVtbl[11]))(handle, pNewTargetParameters);
			return ret;
		}

		public static HResult ResizeTarget(this ComPtr<IDXGISwapChain1> comObj, ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiModeDesc*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain1> comObj, IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, ppOutput);
			return ret;
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain1> comObj, ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain1> comObj, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGISwapChain1> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[13]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGISwapChain1> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[13]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetLastPresentCount(this ComPtr<IDXGISwapChain1> comObj, uint* pLastPresentCount) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint*, HResult>)(handle->LpVtbl[14]))(handle, pLastPresentCount);
			return ret;
		}

		public static HResult GetLastPresentCount(this ComPtr<IDXGISwapChain1> comObj, ref uint pLastPresentCount) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint*, HResult>)(handle->LpVtbl[14]))(handle, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		public static HResult GetDesc1(this ComPtr<IDXGISwapChain1> comObj, DxgiSwapChainDesc1* pDesc) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainDesc1*, HResult>)(handle->LpVtbl[15]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc1(this ComPtr<IDXGISwapChain1> comObj, ref DxgiSwapChainDesc1 pDesc) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainDesc1*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiSwapChainDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetFullscreenDesc(this ComPtr<IDXGISwapChain1> comObj, DxgiSwapChainFullscreenDesc* pDesc) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainFullscreenDesc*, HResult>)(handle->LpVtbl[16]))(handle, pDesc);
			return ret;
		}

		public static HResult GetFullscreenDesc(this ComPtr<IDXGISwapChain1> comObj, ref DxgiSwapChainFullscreenDesc pDesc) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiSwapChainFullscreenDesc*, HResult>)(handle->LpVtbl[16]))(handle, (DxgiSwapChainFullscreenDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetHwnd(this ComPtr<IDXGISwapChain1> comObj, nint* pHwnd) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, nint*, HResult>)(handle->LpVtbl[17]))(handle, pHwnd);
			return ret;
		}

		public static HResult GetHwnd(this ComPtr<IDXGISwapChain1> comObj, ref nint pHwnd) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (nint* ppHwnd = &pHwnd)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, nint*, HResult>)(handle->LpVtbl[17]))(handle, (nint*)ppHwnd);
				return ret;
			}
		}

		public static HResult GetCoreWindow(this ComPtr<IDXGISwapChain1> comObj, Guid* refiid, void** ppUnk) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(handle->LpVtbl[18]))(handle, refiid, ppUnk);
			return ret;
		}

		public static HResult GetCoreWindow(this ComPtr<IDXGISwapChain1> comObj, ref Guid refiid, void** ppUnk) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Guid* prefiid = &refiid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Guid*, void**, HResult>)(handle->LpVtbl[18]))(handle, (Guid*)prefiid, ppUnk);
				return ret;
			}
		}

		public static HResult Present1(this ComPtr<IDXGISwapChain1> comObj, uint syncInterval, uint presentFlags, DxgiPresentParameters* pPresentParameters) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, uint, DxgiPresentParameters*, HResult>)(handle->LpVtbl[19]))(handle, syncInterval, presentFlags, pPresentParameters);
			return ret;
		}

		public static HResult Present1(this ComPtr<IDXGISwapChain1> comObj, uint syncInterval, uint presentFlags, ref DxgiPresentParameters pPresentParameters) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (DxgiPresentParameters* ppPresentParameters = &pPresentParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, uint, uint, DxgiPresentParameters*, HResult>)(handle->LpVtbl[19]))(handle, syncInterval, presentFlags, (DxgiPresentParameters*)ppPresentParameters);
				return ret;
			}
		}

		public static Bool32 IsTemporaryMonoSupported(this ComPtr<IDXGISwapChain1> comObj) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Bool32>)(handle->LpVtbl[20]))(handle);
			return ret;
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain1> comObj, IDXGIOutput** ppRestrictToOutput) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, ppRestrictToOutput);
			return ret;
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain1> comObj, ref IDXGIOutput* ppRestrictToOutput) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (IDXGIOutput** pppRestrictToOutput = &ppRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, (IDXGIOutput**)pppRestrictToOutput);
				return ret;
			}
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain1> comObj, out ComPtr<IDXGIOutput> ppRestrictToOutput) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			ppRestrictToOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, (IDXGIOutput**)ppRestrictToOutput.GetAddressOf());
			return ret;
		}

		public static HResult SetBackgroundColor(this ComPtr<IDXGISwapChain1> comObj, Vector4* pColor) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Vector4*, HResult>)(handle->LpVtbl[22]))(handle, pColor);
			return ret;
		}

		public static HResult SetBackgroundColor(this ComPtr<IDXGISwapChain1> comObj, ref Vector4 pColor) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Vector4*, HResult>)(handle->LpVtbl[22]))(handle, (Vector4*)ppColor);
				return ret;
			}
		}

		public static HResult GetBackgroundColor(this ComPtr<IDXGISwapChain1> comObj, Vector4* pColor) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Vector4*, HResult>)(handle->LpVtbl[23]))(handle, pColor);
			return ret;
		}

		public static HResult GetBackgroundColor(this ComPtr<IDXGISwapChain1> comObj, ref Vector4 pColor) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, Vector4*, HResult>)(handle->LpVtbl[23]))(handle, (Vector4*)ppColor);
				return ret;
			}
		}

		public static HResult SetRotation(this ComPtr<IDXGISwapChain1> comObj, DxgiModeRotation rotation) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiModeRotation, HResult>)(handle->LpVtbl[24]))(handle, rotation);
			return ret;
		}

		public static HResult GetRotation(this ComPtr<IDXGISwapChain1> comObj, DxgiModeRotation* pRotation) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiModeRotation*, HResult>)(handle->LpVtbl[25]))(handle, pRotation);
			return ret;
		}

		public static HResult GetRotation(this ComPtr<IDXGISwapChain1> comObj, ref DxgiModeRotation pRotation) 
		{
			IDXGISwapChain1* handle = comObj.Handle;
			fixed (DxgiModeRotation* ppRotation = &pRotation)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain1*, DxgiModeRotation*, HResult>)(handle->LpVtbl[25]))(handle, (DxgiModeRotation*)ppRotation);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory2> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory2> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory2> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory2> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory2> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory2> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory2> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory2> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory2> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory2> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory2> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory2> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory2> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory2> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory2> comObj, uint adapter, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory2> comObj, uint adapter, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory2> comObj, uint adapter, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult MakeWindowAssociation(this ComPtr<IDXGIFactory2> comObj, nint windowHandle, uint flags) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint, HResult>)(handle->LpVtbl[5]))(handle, windowHandle, flags);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory2> comObj, nint* pWindowHandle) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint*, HResult>)(handle->LpVtbl[6]))(handle, pWindowHandle);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory2> comObj, ref nint pWindowHandle) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint*, HResult>)(handle->LpVtbl[6]))(handle, (nint*)ppWindowHandle);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory2> comObj, nint module, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, ppAdapter);
			return ret;
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory2> comObj, nint module, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory2> comObj, nint module, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory2> comObj, uint adapter, IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory2> comObj, uint adapter, ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory2> comObj, uint adapter, out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static Bool32 IsCurrent(this ComPtr<IDXGIFactory2> comObj) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Bool32>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		public static Bool32 IsWindowedStereoEnabled(this ComPtr<IDXGIFactory2> comObj) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, Bool32>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory2> comObj, nint hResource, Luid* pLuid) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, pLuid);
			return ret;
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory2> comObj, nint hResource, ref Luid pLuid) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory2> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory2> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory2> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory2> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterStereoStatus(this ComPtr<IDXGIFactory2> comObj, uint dwCookie) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, void>)(handle->LpVtbl[17]))(handle, dwCookie);
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory2> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory2> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory2> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory2> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterOcclusionStatus(this ComPtr<IDXGIFactory2> comObj, uint dwCookie) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory2*, uint, void>)(handle->LpVtbl[20]))(handle, dwCookie);
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory2> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory2*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIAdapter2> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIAdapter2> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter2> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter2> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter2> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter2> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter2> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter2> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter2> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter2> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter2> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter2> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIAdapter2> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIAdapter2> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter2> comObj, uint output, IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, ppOutput);
			return ret;
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter2> comObj, uint output, ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter2> comObj, uint output, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIAdapter2> comObj, DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc*, HResult>)(handle->LpVtbl[5]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIAdapter2> comObj, ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc*, HResult>)(handle->LpVtbl[5]))(handle, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter2> comObj, Guid* interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, interfaceName, pUMDVersion);
			return ret;
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter2> comObj, ref Guid interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter2> comObj, Guid* interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter2> comObj, ref Guid interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		public static HResult GetDesc1(this ComPtr<IDXGIAdapter2> comObj, DxgiAdapterDesc1* pDesc) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc1*, HResult>)(handle->LpVtbl[7]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc1(this ComPtr<IDXGIAdapter2> comObj, ref DxgiAdapterDesc1 pDesc) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (DxgiAdapterDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc1*, HResult>)(handle->LpVtbl[7]))(handle, (DxgiAdapterDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDesc2(this ComPtr<IDXGIAdapter2> comObj, DxgiAdapterDesc2* pDesc) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc2*, HResult>)(handle->LpVtbl[8]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc2(this ComPtr<IDXGIAdapter2> comObj, ref DxgiAdapterDesc2 pDesc) 
		{
			IDXGIAdapter2* handle = comObj.Handle;
			fixed (DxgiAdapterDesc2* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter2*, DxgiAdapterDesc2*, HResult>)(handle->LpVtbl[8]))(handle, (DxgiAdapterDesc2*)ppDesc);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput1> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput1> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput1> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput1> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput1> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput1> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput1> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput1> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput1> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput1> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput1> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput1> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput1> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput1> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput1> comObj, DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput1> comObj, ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput1> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput1> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput1> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput1> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult WaitForVBlank(this ComPtr<IDXGIOutput1> comObj) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, HResult>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput1> comObj, IUnknown* pDevice, Bool32 exclusive) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput1> comObj, ref IUnknown pDevice, Bool32 exclusive) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput1> comObj, ComPtr<IUnknown> pDevice, Bool32 exclusive) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static void ReleaseOwnership(this ComPtr<IDXGIOutput1> comObj) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIOutput1*, void>)(handle->LpVtbl[9]))(handle);
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput1> comObj, DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, pGammaCaps);
			return ret;
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput1> comObj, ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput1> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, pArray);
			return ret;
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput1> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput1> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, pArray);
			return ret;
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput1> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput1> comObj, IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput1> comObj, ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput1> comObj, ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput1> comObj, IDXGISurface* pDestination) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput1> comObj, ref IDXGISurface pDestination) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput1> comObj, ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput1> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput1> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput1> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput1> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput1> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput1> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput1> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput1> comObj, IDXGIResource* pDestination) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput1> comObj, ref IDXGIResource pDestination) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput1> comObj, ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput1> comObj, IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput1> comObj, ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput1> comObj, ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput1> comObj, IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput1> comObj, IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput1> comObj, ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput1> comObj, ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput1* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput1*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDevice3> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDevice3> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice3> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice3> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice3> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice3> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice3> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice3> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice3> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice3> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice3> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice3> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIDevice3> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIDevice3> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice3> comObj, IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, pAdapter);
			return ret;
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice3> comObj, ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice3> comObj, out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			pAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice3> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice3> comObj, IUnknown*** ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice3> comObj, ref IUnknown* ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (IUnknown** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, (IUnknown***)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice3> comObj, ComPtr<IUnknown> ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice3> comObj, IUnknown*** ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice3> comObj, ref IUnknown* ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, (IUnknown***)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice3> comObj, ComPtr<IUnknown> ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult SetGpuThreadPriority(this ComPtr<IDXGIDevice3> comObj, int priority) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, int, HResult>)(handle->LpVtbl[7]))(handle, priority);
			return ret;
		}

		public static HResult GetGpuThreadPriority(this ComPtr<IDXGIDevice3> comObj, int* pPriority) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, int*, HResult>)(handle->LpVtbl[8]))(handle, pPriority);
			return ret;
		}

		public static HResult GetGpuThreadPriority(this ComPtr<IDXGIDevice3> comObj, ref int pPriority) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (int* ppPriority = &pPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, int*, HResult>)(handle->LpVtbl[8]))(handle, (int*)ppPriority);
				return ret;
			}
		}

		public static HResult SetMaximumFrameLatency(this ComPtr<IDXGIDevice3> comObj, uint maxLatency) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, HResult>)(handle->LpVtbl[9]))(handle, maxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGIDevice3> comObj, uint* pMaxLatency) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint*, HResult>)(handle->LpVtbl[10]))(handle, pMaxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGIDevice3> comObj, ref uint pMaxLatency) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint*, HResult>)(handle->LpVtbl[10]))(handle, (uint*)ppMaxLatency);
				return ret;
			}
		}

		public static HResult OfferResources(this ComPtr<IDXGIDevice3> comObj, uint numResources, IDXGIResource*** ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource***, DxgiOfferResourcePriority, HResult>)(handle->LpVtbl[11]))(handle, numResources, ppResources, priority);
			return ret;
		}

		public static HResult OfferResources(this ComPtr<IDXGIDevice3> comObj, uint numResources, ref IDXGIResource* ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource***, DxgiOfferResourcePriority, HResult>)(handle->LpVtbl[11]))(handle, numResources, (IDXGIResource***)pppResources, priority);
				return ret;
			}
		}

		public static HResult OfferResources(this ComPtr<IDXGIDevice3> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource***, DxgiOfferResourcePriority, HResult>)(handle->LpVtbl[11]))(handle, numResources, ppResources, priority);
			return ret;
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice3> comObj, uint numResources, IDXGIResource*** ppResources, Bool32* pDiscarded) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, pDiscarded);
			return ret;
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice3> comObj, uint numResources, ref IDXGIResource* ppResources, Bool32* pDiscarded) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, (IDXGIResource***)pppResources, pDiscarded);
				return ret;
			}
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice3> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, Bool32* pDiscarded) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, pDiscarded);
			return ret;
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice3> comObj, uint numResources, IDXGIResource*** ppResources, ref Bool32 pDiscarded) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, (Bool32*)ppDiscarded);
				return ret;
			}
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice3> comObj, uint numResources, ref IDXGIResource* ppResources, ref Bool32 pDiscarded) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				fixed (Bool32* ppDiscarded = &pDiscarded)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, (IDXGIResource***)pppResources, (Bool32*)ppDiscarded);
					return ret;
				}
			}
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice3> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, ref Bool32 pDiscarded) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, (Bool32*)ppDiscarded);
				return ret;
			}
		}

		public static HResult EnqueueSetEvent(this ComPtr<IDXGIDevice3> comObj, nint hEvent) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice3*, nint, HResult>)(handle->LpVtbl[13]))(handle, hEvent);
			return ret;
		}

		public static void Trim(this ComPtr<IDXGIDevice3> comObj) 
		{
			IDXGIDevice3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIDevice3*, void>)(handle->LpVtbl[14]))(handle);
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISwapChain2> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISwapChain2> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain2> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain2> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain2> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain2> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain2> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain2> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain2> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain2> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain2> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain2> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGISwapChain2> comObj, Guid* riid, void** ppParent) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGISwapChain2> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGISwapChain2> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGISwapChain2> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult Present(this ComPtr<IDXGISwapChain2> comObj, uint syncInterval, uint flags) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, HResult>)(handle->LpVtbl[5]))(handle, syncInterval, flags);
			return ret;
		}

		public static HResult GetBuffer(this ComPtr<IDXGISwapChain2> comObj, uint buffer, Guid* riid, void** ppSurface) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, Guid*, void**, HResult>)(handle->LpVtbl[6]))(handle, buffer, riid, ppSurface);
			return ret;
		}

		public static HResult GetBuffer(this ComPtr<IDXGISwapChain2> comObj, uint buffer, ref Guid riid, void** ppSurface) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, Guid*, void**, HResult>)(handle->LpVtbl[6]))(handle, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain2> comObj, Bool32 fullscreen, IDXGIOutput* pTarget) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, pTarget);
			return ret;
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain2> comObj, Bool32 fullscreen, ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain2> comObj, Bool32 fullscreen, ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, pTarget);
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain2> comObj, Bool32* pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, ppTarget);
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain2> comObj, ref Bool32 pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain2> comObj, Bool32* pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain2> comObj, Bool32* pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			ppTarget = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain2> comObj, ref Bool32 pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain2> comObj, ref Bool32 pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGISwapChain2> comObj, DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc*, HResult>)(handle->LpVtbl[9]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGISwapChain2> comObj, ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc*, HResult>)(handle->LpVtbl[9]))(handle, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult ResizeBuffers(this ComPtr<IDXGISwapChain2> comObj, uint bufferCount, uint width, uint height, DxgiFormat newFormat, uint swapChainFlags) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, uint, DxgiFormat, uint, HResult>)(handle->LpVtbl[10]))(handle, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		public static HResult ResizeTarget(this ComPtr<IDXGISwapChain2> comObj, DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeDesc*, HResult>)(handle->LpVtbl[11]))(handle, pNewTargetParameters);
			return ret;
		}

		public static HResult ResizeTarget(this ComPtr<IDXGISwapChain2> comObj, ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeDesc*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain2> comObj, IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, ppOutput);
			return ret;
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain2> comObj, ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain2> comObj, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGISwapChain2> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[13]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGISwapChain2> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[13]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetLastPresentCount(this ComPtr<IDXGISwapChain2> comObj, uint* pLastPresentCount) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, HResult>)(handle->LpVtbl[14]))(handle, pLastPresentCount);
			return ret;
		}

		public static HResult GetLastPresentCount(this ComPtr<IDXGISwapChain2> comObj, ref uint pLastPresentCount) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, HResult>)(handle->LpVtbl[14]))(handle, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		public static HResult GetDesc1(this ComPtr<IDXGISwapChain2> comObj, DxgiSwapChainDesc1* pDesc) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc1*, HResult>)(handle->LpVtbl[15]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc1(this ComPtr<IDXGISwapChain2> comObj, ref DxgiSwapChainDesc1 pDesc) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainDesc1*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiSwapChainDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetFullscreenDesc(this ComPtr<IDXGISwapChain2> comObj, DxgiSwapChainFullscreenDesc* pDesc) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainFullscreenDesc*, HResult>)(handle->LpVtbl[16]))(handle, pDesc);
			return ret;
		}

		public static HResult GetFullscreenDesc(this ComPtr<IDXGISwapChain2> comObj, ref DxgiSwapChainFullscreenDesc pDesc) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiSwapChainFullscreenDesc*, HResult>)(handle->LpVtbl[16]))(handle, (DxgiSwapChainFullscreenDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetHwnd(this ComPtr<IDXGISwapChain2> comObj, nint* pHwnd) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, nint*, HResult>)(handle->LpVtbl[17]))(handle, pHwnd);
			return ret;
		}

		public static HResult GetHwnd(this ComPtr<IDXGISwapChain2> comObj, ref nint pHwnd) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (nint* ppHwnd = &pHwnd)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, nint*, HResult>)(handle->LpVtbl[17]))(handle, (nint*)ppHwnd);
				return ret;
			}
		}

		public static HResult GetCoreWindow(this ComPtr<IDXGISwapChain2> comObj, Guid* refiid, void** ppUnk) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(handle->LpVtbl[18]))(handle, refiid, ppUnk);
			return ret;
		}

		public static HResult GetCoreWindow(this ComPtr<IDXGISwapChain2> comObj, ref Guid refiid, void** ppUnk) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Guid* prefiid = &refiid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Guid*, void**, HResult>)(handle->LpVtbl[18]))(handle, (Guid*)prefiid, ppUnk);
				return ret;
			}
		}

		public static HResult Present1(this ComPtr<IDXGISwapChain2> comObj, uint syncInterval, uint presentFlags, DxgiPresentParameters* pPresentParameters) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, DxgiPresentParameters*, HResult>)(handle->LpVtbl[19]))(handle, syncInterval, presentFlags, pPresentParameters);
			return ret;
		}

		public static HResult Present1(this ComPtr<IDXGISwapChain2> comObj, uint syncInterval, uint presentFlags, ref DxgiPresentParameters pPresentParameters) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (DxgiPresentParameters* ppPresentParameters = &pPresentParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, DxgiPresentParameters*, HResult>)(handle->LpVtbl[19]))(handle, syncInterval, presentFlags, (DxgiPresentParameters*)ppPresentParameters);
				return ret;
			}
		}

		public static Bool32 IsTemporaryMonoSupported(this ComPtr<IDXGISwapChain2> comObj) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Bool32>)(handle->LpVtbl[20]))(handle);
			return ret;
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain2> comObj, IDXGIOutput** ppRestrictToOutput) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, ppRestrictToOutput);
			return ret;
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain2> comObj, ref IDXGIOutput* ppRestrictToOutput) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (IDXGIOutput** pppRestrictToOutput = &ppRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, (IDXGIOutput**)pppRestrictToOutput);
				return ret;
			}
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain2> comObj, out ComPtr<IDXGIOutput> ppRestrictToOutput) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			ppRestrictToOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, (IDXGIOutput**)ppRestrictToOutput.GetAddressOf());
			return ret;
		}

		public static HResult SetBackgroundColor(this ComPtr<IDXGISwapChain2> comObj, Vector4* pColor) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, HResult>)(handle->LpVtbl[22]))(handle, pColor);
			return ret;
		}

		public static HResult SetBackgroundColor(this ComPtr<IDXGISwapChain2> comObj, ref Vector4 pColor) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, HResult>)(handle->LpVtbl[22]))(handle, (Vector4*)ppColor);
				return ret;
			}
		}

		public static HResult GetBackgroundColor(this ComPtr<IDXGISwapChain2> comObj, Vector4* pColor) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, HResult>)(handle->LpVtbl[23]))(handle, pColor);
			return ret;
		}

		public static HResult GetBackgroundColor(this ComPtr<IDXGISwapChain2> comObj, ref Vector4 pColor) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, Vector4*, HResult>)(handle->LpVtbl[23]))(handle, (Vector4*)ppColor);
				return ret;
			}
		}

		public static HResult SetRotation(this ComPtr<IDXGISwapChain2> comObj, DxgiModeRotation rotation) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeRotation, HResult>)(handle->LpVtbl[24]))(handle, rotation);
			return ret;
		}

		public static HResult GetRotation(this ComPtr<IDXGISwapChain2> comObj, DxgiModeRotation* pRotation) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeRotation*, HResult>)(handle->LpVtbl[25]))(handle, pRotation);
			return ret;
		}

		public static HResult GetRotation(this ComPtr<IDXGISwapChain2> comObj, ref DxgiModeRotation pRotation) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (DxgiModeRotation* ppRotation = &pRotation)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiModeRotation*, HResult>)(handle->LpVtbl[25]))(handle, (DxgiModeRotation*)ppRotation);
				return ret;
			}
		}

		public static HResult SetSourceSize(this ComPtr<IDXGISwapChain2> comObj, uint width, uint height) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, uint, HResult>)(handle->LpVtbl[26]))(handle, width, height);
			return ret;
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain2> comObj, uint* pWidth, uint* pHeight) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, pWidth, pHeight);
			return ret;
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain2> comObj, ref uint pWidth, uint* pHeight) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (uint* ppWidth = &pWidth)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, (uint*)ppWidth, pHeight);
				return ret;
			}
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain2> comObj, uint* pWidth, ref uint pHeight) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (uint* ppHeight = &pHeight)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, pWidth, (uint*)ppHeight);
				return ret;
			}
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain2> comObj, ref uint pWidth, ref uint pHeight) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (uint* ppWidth = &pWidth)
			{
				fixed (uint* ppHeight = &pHeight)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, (uint*)ppWidth, (uint*)ppHeight);
					return ret;
				}
			}
		}

		public static HResult SetMaximumFrameLatency(this ComPtr<IDXGISwapChain2> comObj, uint maxLatency) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint, HResult>)(handle->LpVtbl[28]))(handle, maxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGISwapChain2> comObj, uint* pMaxLatency) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, HResult>)(handle->LpVtbl[29]))(handle, pMaxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGISwapChain2> comObj, ref uint pMaxLatency) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, uint*, HResult>)(handle->LpVtbl[29]))(handle, (uint*)ppMaxLatency);
				return ret;
			}
		}

		public static nint GetFrameLatencyWaitableObject(this ComPtr<IDXGISwapChain2> comObj) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			nint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, nint>)(handle->LpVtbl[30]))(handle);
			return ret;
		}

		public static HResult SetMatrixTransform(this ComPtr<IDXGISwapChain2> comObj, DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[31]))(handle, pMatrix);
			return ret;
		}

		public static HResult SetMatrixTransform(this ComPtr<IDXGISwapChain2> comObj, ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[31]))(handle, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		public static HResult GetMatrixTransform(this ComPtr<IDXGISwapChain2> comObj, DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[32]))(handle, pMatrix);
			return ret;
		}

		public static HResult GetMatrixTransform(this ComPtr<IDXGISwapChain2> comObj, ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain2* handle = comObj.Handle;
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain2*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[32]))(handle, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput2> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput2> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput2> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput2> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput2> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput2> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput2> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput2> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput2> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput2> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput2> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput2> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput2> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput2> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput2> comObj, DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput2> comObj, ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput2> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput2> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput2> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput2> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult WaitForVBlank(this ComPtr<IDXGIOutput2> comObj) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, HResult>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput2> comObj, IUnknown* pDevice, Bool32 exclusive) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput2> comObj, ref IUnknown pDevice, Bool32 exclusive) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput2> comObj, ComPtr<IUnknown> pDevice, Bool32 exclusive) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static void ReleaseOwnership(this ComPtr<IDXGIOutput2> comObj) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIOutput2*, void>)(handle->LpVtbl[9]))(handle);
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput2> comObj, DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, pGammaCaps);
			return ret;
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput2> comObj, ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput2> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, pArray);
			return ret;
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput2> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput2> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, pArray);
			return ret;
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput2> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput2> comObj, IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput2> comObj, ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput2> comObj, ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput2> comObj, IDXGISurface* pDestination) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput2> comObj, ref IDXGISurface pDestination) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput2> comObj, ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput2> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput2> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput2> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput2> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput2> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput2> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput2> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput2> comObj, IDXGIResource* pDestination) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput2> comObj, ref IDXGIResource pDestination) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput2> comObj, ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput2> comObj, IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput2> comObj, ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput2> comObj, ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput2> comObj, IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput2> comObj, IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput2> comObj, ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput2> comObj, ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static Bool32 SupportsOverlays(this ComPtr<IDXGIOutput2> comObj) 
		{
			IDXGIOutput2* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput2*, Bool32>)(handle->LpVtbl[20]))(handle);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory3> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory3> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory3> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory3> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory3> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory3> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory3> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory3> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory3> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory3> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory3> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory3> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory3> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory3> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory3> comObj, uint adapter, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory3> comObj, uint adapter, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory3> comObj, uint adapter, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult MakeWindowAssociation(this ComPtr<IDXGIFactory3> comObj, nint windowHandle, uint flags) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, HResult>)(handle->LpVtbl[5]))(handle, windowHandle, flags);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory3> comObj, nint* pWindowHandle) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint*, HResult>)(handle->LpVtbl[6]))(handle, pWindowHandle);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory3> comObj, ref nint pWindowHandle) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint*, HResult>)(handle->LpVtbl[6]))(handle, (nint*)ppWindowHandle);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory3> comObj, nint module, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, ppAdapter);
			return ret;
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory3> comObj, nint module, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory3> comObj, nint module, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory3> comObj, uint adapter, IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory3> comObj, uint adapter, ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory3> comObj, uint adapter, out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static Bool32 IsCurrent(this ComPtr<IDXGIFactory3> comObj) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Bool32>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		public static Bool32 IsWindowedStereoEnabled(this ComPtr<IDXGIFactory3> comObj) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, Bool32>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory3> comObj, nint hResource, Luid* pLuid) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, pLuid);
			return ret;
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory3> comObj, nint hResource, ref Luid pLuid) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory3> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory3> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory3> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory3> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterStereoStatus(this ComPtr<IDXGIFactory3> comObj, uint dwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, void>)(handle->LpVtbl[17]))(handle, dwCookie);
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory3> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory3> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory3> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory3> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterOcclusionStatus(this ComPtr<IDXGIFactory3> comObj, uint dwCookie) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint, void>)(handle->LpVtbl[20]))(handle, dwCookie);
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory3> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static uint GetCreationFlags(this ComPtr<IDXGIFactory3> comObj) 
		{
			IDXGIFactory3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory3*, uint>)(handle->LpVtbl[22]))(handle);
			return ret;
		}

		public static HResult PresentBuffer(this ComPtr<IDXGIDecodeSwapChain> comObj, uint bufferToPresent, uint syncInterval, uint flags) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint, uint, uint, HResult>)(*handle->LpVtbl))(handle, bufferToPresent, syncInterval, flags);
			return ret;
		}

		public static HResult SetSourceRect(this ComPtr<IDXGIDecodeSwapChain> comObj, Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(handle->LpVtbl[1]))(handle, pRect);
			return ret;
		}

		public static HResult SetSourceRect(this ComPtr<IDXGIDecodeSwapChain> comObj, ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(handle->LpVtbl[1]))(handle, (Rect32*)ppRect);
				return ret;
			}
		}

		public static HResult SetTargetRect(this ComPtr<IDXGIDecodeSwapChain> comObj, Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(handle->LpVtbl[2]))(handle, pRect);
			return ret;
		}

		public static HResult SetTargetRect(this ComPtr<IDXGIDecodeSwapChain> comObj, ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(handle->LpVtbl[2]))(handle, (Rect32*)ppRect);
				return ret;
			}
		}

		public static HResult SetDestSize(this ComPtr<IDXGIDecodeSwapChain> comObj, uint width, uint height) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint, uint, HResult>)(handle->LpVtbl[3]))(handle, width, height);
			return ret;
		}

		public static HResult GetSourceRect(this ComPtr<IDXGIDecodeSwapChain> comObj, Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(handle->LpVtbl[4]))(handle, pRect);
			return ret;
		}

		public static HResult GetSourceRect(this ComPtr<IDXGIDecodeSwapChain> comObj, ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(handle->LpVtbl[4]))(handle, (Rect32*)ppRect);
				return ret;
			}
		}

		public static HResult GetTargetRect(this ComPtr<IDXGIDecodeSwapChain> comObj, Rect32* pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(handle->LpVtbl[5]))(handle, pRect);
			return ret;
		}

		public static HResult GetTargetRect(this ComPtr<IDXGIDecodeSwapChain> comObj, ref Rect32 pRect) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (Rect32* ppRect = &pRect)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, Rect32*, HResult>)(handle->LpVtbl[5]))(handle, (Rect32*)ppRect);
				return ret;
			}
		}

		public static HResult GetDestSize(this ComPtr<IDXGIDecodeSwapChain> comObj, uint* pWidth, uint* pHeight) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, HResult>)(handle->LpVtbl[6]))(handle, pWidth, pHeight);
			return ret;
		}

		public static HResult GetDestSize(this ComPtr<IDXGIDecodeSwapChain> comObj, ref uint pWidth, uint* pHeight) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (uint* ppWidth = &pWidth)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, HResult>)(handle->LpVtbl[6]))(handle, (uint*)ppWidth, pHeight);
				return ret;
			}
		}

		public static HResult GetDestSize(this ComPtr<IDXGIDecodeSwapChain> comObj, uint* pWidth, ref uint pHeight) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (uint* ppHeight = &pHeight)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, HResult>)(handle->LpVtbl[6]))(handle, pWidth, (uint*)ppHeight);
				return ret;
			}
		}

		public static HResult GetDestSize(this ComPtr<IDXGIDecodeSwapChain> comObj, ref uint pWidth, ref uint pHeight) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			fixed (uint* ppWidth = &pWidth)
			{
				fixed (uint* ppHeight = &pHeight)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, uint*, uint*, HResult>)(handle->LpVtbl[6]))(handle, (uint*)ppWidth, (uint*)ppHeight);
					return ret;
				}
			}
		}

		public static HResult SetColorSpace(this ComPtr<IDXGIDecodeSwapChain> comObj, DXGIMULTIPLANEOVERLAYYCbCrFLAGS colorSpace) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, DXGIMULTIPLANEOVERLAYYCbCrFLAGS, HResult>)(handle->LpVtbl[7]))(handle, colorSpace);
			return ret;
		}

		public static DXGIMULTIPLANEOVERLAYYCbCrFLAGS GetColorSpace(this ComPtr<IDXGIDecodeSwapChain> comObj) 
		{
			IDXGIDecodeSwapChain* handle = comObj.Handle;
			DXGIMULTIPLANEOVERLAYYCbCrFLAGS ret = ((delegate* unmanaged[Stdcall]<IDXGIDecodeSwapChain*, DXGIMULTIPLANEOVERLAYYCbCrFLAGS>)(handle->LpVtbl[8]))(handle);
			return ret;
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, (IUnknown*)ppDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(*handle->LpVtbl))(handle, pDevice, hSurface, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, IDXGIResource* pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, pDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, DxgiDecodeSwapChainDesc* pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, pDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, IUnknown* pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ref IUnknown pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ref IDXGIResource pYuvDecodeBuffers, ref IDXGIOutput pRestrictToOutput, ref IDXGIDecodeSwapChain* ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGIResource* ppYuvDecodeBuffers = &pYuvDecodeBuffers)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGIDecodeSwapChain** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, (IUnknown*)ppDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, (IDXGIResource*)ppYuvDecodeBuffers, (IDXGIOutput*)ppRestrictToOutput, (IDXGIDecodeSwapChain**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateDecodeSwapChainForCompositionSurfaceHandle(this ComPtr<IDXGIFactoryMedia> comObj, ComPtr<IUnknown> pDevice, nint hSurface, ref DxgiDecodeSwapChainDesc pDesc, ComPtr<IDXGIResource> pYuvDecodeBuffers, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGIDecodeSwapChain> ppSwapChain) 
		{
			IDXGIFactoryMedia* handle = comObj.Handle;
			fixed (DxgiDecodeSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactoryMedia*, IUnknown*, nint, DxgiDecodeSwapChainDesc*, IDXGIResource*, IDXGIOutput*, IDXGIDecodeSwapChain**, HResult>)(handle->LpVtbl[1]))(handle, pDevice, hSurface, (DxgiDecodeSwapChainDesc*)ppDesc, pYuvDecodeBuffers, pRestrictToOutput, (IDXGIDecodeSwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetFrameStatisticsMedia(this ComPtr<IDXGISwapChainMedia> comObj, DxgiFrameStatisticsMedia* pStats) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, DxgiFrameStatisticsMedia*, HResult>)(*handle->LpVtbl))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatisticsMedia(this ComPtr<IDXGISwapChainMedia> comObj, ref DxgiFrameStatisticsMedia pStats) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			fixed (DxgiFrameStatisticsMedia* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, DxgiFrameStatisticsMedia*, HResult>)(*handle->LpVtbl))(handle, (DxgiFrameStatisticsMedia*)ppStats);
				return ret;
			}
		}

		public static HResult SetPresentDuration(this ComPtr<IDXGISwapChainMedia> comObj, uint duration) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, HResult>)(handle->LpVtbl[1]))(handle, duration);
			return ret;
		}

		public static HResult CheckPresentDurationSupport(this ComPtr<IDXGISwapChainMedia> comObj, uint desiredPresentDuration, uint* pClosestSmallerPresentDuration, uint* pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, HResult>)(handle->LpVtbl[2]))(handle, desiredPresentDuration, pClosestSmallerPresentDuration, pClosestLargerPresentDuration);
			return ret;
		}

		public static HResult CheckPresentDurationSupport(this ComPtr<IDXGISwapChainMedia> comObj, uint desiredPresentDuration, ref uint pClosestSmallerPresentDuration, uint* pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			fixed (uint* ppClosestSmallerPresentDuration = &pClosestSmallerPresentDuration)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, HResult>)(handle->LpVtbl[2]))(handle, desiredPresentDuration, (uint*)ppClosestSmallerPresentDuration, pClosestLargerPresentDuration);
				return ret;
			}
		}

		public static HResult CheckPresentDurationSupport(this ComPtr<IDXGISwapChainMedia> comObj, uint desiredPresentDuration, uint* pClosestSmallerPresentDuration, ref uint pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			fixed (uint* ppClosestLargerPresentDuration = &pClosestLargerPresentDuration)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, HResult>)(handle->LpVtbl[2]))(handle, desiredPresentDuration, pClosestSmallerPresentDuration, (uint*)ppClosestLargerPresentDuration);
				return ret;
			}
		}

		public static HResult CheckPresentDurationSupport(this ComPtr<IDXGISwapChainMedia> comObj, uint desiredPresentDuration, ref uint pClosestSmallerPresentDuration, ref uint pClosestLargerPresentDuration) 
		{
			IDXGISwapChainMedia* handle = comObj.Handle;
			fixed (uint* ppClosestSmallerPresentDuration = &pClosestSmallerPresentDuration)
			{
				fixed (uint* ppClosestLargerPresentDuration = &pClosestLargerPresentDuration)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChainMedia*, uint, uint*, uint*, HResult>)(handle->LpVtbl[2]))(handle, desiredPresentDuration, (uint*)ppClosestSmallerPresentDuration, (uint*)ppClosestLargerPresentDuration);
					return ret;
				}
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput3> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput3> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput3> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput3> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput3> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput3> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput3> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput3> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput3> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput3> comObj, DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput3> comObj, ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult WaitForVBlank(this ComPtr<IDXGIOutput3> comObj) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, HResult>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput3> comObj, IUnknown* pDevice, Bool32 exclusive) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput3> comObj, ref IUnknown pDevice, Bool32 exclusive) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput3> comObj, ComPtr<IUnknown> pDevice, Bool32 exclusive) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static void ReleaseOwnership(this ComPtr<IDXGIOutput3> comObj) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIOutput3*, void>)(handle->LpVtbl[9]))(handle);
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput3> comObj, DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, pGammaCaps);
			return ret;
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput3> comObj, ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput3> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, pArray);
			return ret;
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput3> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput3> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, pArray);
			return ret;
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput3> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput3> comObj, IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput3> comObj, ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput3> comObj, ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput3> comObj, IDXGISurface* pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput3> comObj, ref IDXGISurface pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput3> comObj, ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput3> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput3> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput3> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput3> comObj, IDXGIResource* pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput3> comObj, ref IDXGIResource pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput3> comObj, ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput3> comObj, ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static Bool32 SupportsOverlays(this ComPtr<IDXGIOutput3> comObj) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, Bool32>)(handle->LpVtbl[20]))(handle);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput3> comObj, DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput3* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput3*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISwapChain3> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain3> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain3> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain3> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGISwapChain3> comObj, Guid* riid, void** ppParent) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGISwapChain3> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGISwapChain3> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGISwapChain3> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult Present(this ComPtr<IDXGISwapChain3> comObj, uint syncInterval, uint flags) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, HResult>)(handle->LpVtbl[5]))(handle, syncInterval, flags);
			return ret;
		}

		public static HResult GetBuffer(this ComPtr<IDXGISwapChain3> comObj, uint buffer, Guid* riid, void** ppSurface) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, Guid*, void**, HResult>)(handle->LpVtbl[6]))(handle, buffer, riid, ppSurface);
			return ret;
		}

		public static HResult GetBuffer(this ComPtr<IDXGISwapChain3> comObj, uint buffer, ref Guid riid, void** ppSurface) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, Guid*, void**, HResult>)(handle->LpVtbl[6]))(handle, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain3> comObj, Bool32 fullscreen, IDXGIOutput* pTarget) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, pTarget);
			return ret;
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain3> comObj, Bool32 fullscreen, ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain3> comObj, Bool32 fullscreen, ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, pTarget);
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain3> comObj, Bool32* pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, ppTarget);
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain3> comObj, ref Bool32 pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain3> comObj, Bool32* pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain3> comObj, Bool32* pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			ppTarget = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain3> comObj, ref Bool32 pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain3> comObj, ref Bool32 pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGISwapChain3> comObj, DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainDesc*, HResult>)(handle->LpVtbl[9]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGISwapChain3> comObj, ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainDesc*, HResult>)(handle->LpVtbl[9]))(handle, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult ResizeBuffers(this ComPtr<IDXGISwapChain3> comObj, uint bufferCount, uint width, uint height, DxgiFormat newFormat, uint swapChainFlags) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, HResult>)(handle->LpVtbl[10]))(handle, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		public static HResult ResizeTarget(this ComPtr<IDXGISwapChain3> comObj, DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiModeDesc*, HResult>)(handle->LpVtbl[11]))(handle, pNewTargetParameters);
			return ret;
		}

		public static HResult ResizeTarget(this ComPtr<IDXGISwapChain3> comObj, ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiModeDesc*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain3> comObj, IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, ppOutput);
			return ret;
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain3> comObj, ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain3> comObj, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGISwapChain3> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[13]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGISwapChain3> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[13]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetLastPresentCount(this ComPtr<IDXGISwapChain3> comObj, uint* pLastPresentCount) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, HResult>)(handle->LpVtbl[14]))(handle, pLastPresentCount);
			return ret;
		}

		public static HResult GetLastPresentCount(this ComPtr<IDXGISwapChain3> comObj, ref uint pLastPresentCount) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, HResult>)(handle->LpVtbl[14]))(handle, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		public static HResult GetDesc1(this ComPtr<IDXGISwapChain3> comObj, DxgiSwapChainDesc1* pDesc) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainDesc1*, HResult>)(handle->LpVtbl[15]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc1(this ComPtr<IDXGISwapChain3> comObj, ref DxgiSwapChainDesc1 pDesc) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainDesc1*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiSwapChainDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetFullscreenDesc(this ComPtr<IDXGISwapChain3> comObj, DxgiSwapChainFullscreenDesc* pDesc) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainFullscreenDesc*, HResult>)(handle->LpVtbl[16]))(handle, pDesc);
			return ret;
		}

		public static HResult GetFullscreenDesc(this ComPtr<IDXGISwapChain3> comObj, ref DxgiSwapChainFullscreenDesc pDesc) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiSwapChainFullscreenDesc*, HResult>)(handle->LpVtbl[16]))(handle, (DxgiSwapChainFullscreenDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetHwnd(this ComPtr<IDXGISwapChain3> comObj, nint* pHwnd) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, nint*, HResult>)(handle->LpVtbl[17]))(handle, pHwnd);
			return ret;
		}

		public static HResult GetHwnd(this ComPtr<IDXGISwapChain3> comObj, ref nint pHwnd) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (nint* ppHwnd = &pHwnd)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, nint*, HResult>)(handle->LpVtbl[17]))(handle, (nint*)ppHwnd);
				return ret;
			}
		}

		public static HResult GetCoreWindow(this ComPtr<IDXGISwapChain3> comObj, Guid* refiid, void** ppUnk) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(handle->LpVtbl[18]))(handle, refiid, ppUnk);
			return ret;
		}

		public static HResult GetCoreWindow(this ComPtr<IDXGISwapChain3> comObj, ref Guid refiid, void** ppUnk) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Guid* prefiid = &refiid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Guid*, void**, HResult>)(handle->LpVtbl[18]))(handle, (Guid*)prefiid, ppUnk);
				return ret;
			}
		}

		public static HResult Present1(this ComPtr<IDXGISwapChain3> comObj, uint syncInterval, uint presentFlags, DxgiPresentParameters* pPresentParameters) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, DxgiPresentParameters*, HResult>)(handle->LpVtbl[19]))(handle, syncInterval, presentFlags, pPresentParameters);
			return ret;
		}

		public static HResult Present1(this ComPtr<IDXGISwapChain3> comObj, uint syncInterval, uint presentFlags, ref DxgiPresentParameters pPresentParameters) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (DxgiPresentParameters* ppPresentParameters = &pPresentParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, DxgiPresentParameters*, HResult>)(handle->LpVtbl[19]))(handle, syncInterval, presentFlags, (DxgiPresentParameters*)ppPresentParameters);
				return ret;
			}
		}

		public static Bool32 IsTemporaryMonoSupported(this ComPtr<IDXGISwapChain3> comObj) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Bool32>)(handle->LpVtbl[20]))(handle);
			return ret;
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain3> comObj, IDXGIOutput** ppRestrictToOutput) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, ppRestrictToOutput);
			return ret;
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain3> comObj, ref IDXGIOutput* ppRestrictToOutput) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (IDXGIOutput** pppRestrictToOutput = &ppRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, (IDXGIOutput**)pppRestrictToOutput);
				return ret;
			}
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain3> comObj, out ComPtr<IDXGIOutput> ppRestrictToOutput) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			ppRestrictToOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, (IDXGIOutput**)ppRestrictToOutput.GetAddressOf());
			return ret;
		}

		public static HResult SetBackgroundColor(this ComPtr<IDXGISwapChain3> comObj, Vector4* pColor) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Vector4*, HResult>)(handle->LpVtbl[22]))(handle, pColor);
			return ret;
		}

		public static HResult SetBackgroundColor(this ComPtr<IDXGISwapChain3> comObj, ref Vector4 pColor) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Vector4*, HResult>)(handle->LpVtbl[22]))(handle, (Vector4*)ppColor);
				return ret;
			}
		}

		public static HResult GetBackgroundColor(this ComPtr<IDXGISwapChain3> comObj, Vector4* pColor) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Vector4*, HResult>)(handle->LpVtbl[23]))(handle, pColor);
			return ret;
		}

		public static HResult GetBackgroundColor(this ComPtr<IDXGISwapChain3> comObj, ref Vector4 pColor) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, Vector4*, HResult>)(handle->LpVtbl[23]))(handle, (Vector4*)ppColor);
				return ret;
			}
		}

		public static HResult SetRotation(this ComPtr<IDXGISwapChain3> comObj, DxgiModeRotation rotation) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiModeRotation, HResult>)(handle->LpVtbl[24]))(handle, rotation);
			return ret;
		}

		public static HResult GetRotation(this ComPtr<IDXGISwapChain3> comObj, DxgiModeRotation* pRotation) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiModeRotation*, HResult>)(handle->LpVtbl[25]))(handle, pRotation);
			return ret;
		}

		public static HResult GetRotation(this ComPtr<IDXGISwapChain3> comObj, ref DxgiModeRotation pRotation) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (DxgiModeRotation* ppRotation = &pRotation)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiModeRotation*, HResult>)(handle->LpVtbl[25]))(handle, (DxgiModeRotation*)ppRotation);
				return ret;
			}
		}

		public static HResult SetSourceSize(this ComPtr<IDXGISwapChain3> comObj, uint width, uint height) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, HResult>)(handle->LpVtbl[26]))(handle, width, height);
			return ret;
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain3> comObj, uint* pWidth, uint* pHeight) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, pWidth, pHeight);
			return ret;
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain3> comObj, ref uint pWidth, uint* pHeight) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppWidth = &pWidth)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, (uint*)ppWidth, pHeight);
				return ret;
			}
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain3> comObj, uint* pWidth, ref uint pHeight) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppHeight = &pHeight)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, pWidth, (uint*)ppHeight);
				return ret;
			}
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain3> comObj, ref uint pWidth, ref uint pHeight) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppWidth = &pWidth)
			{
				fixed (uint* ppHeight = &pHeight)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, (uint*)ppWidth, (uint*)ppHeight);
					return ret;
				}
			}
		}

		public static HResult SetMaximumFrameLatency(this ComPtr<IDXGISwapChain3> comObj, uint maxLatency) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, HResult>)(handle->LpVtbl[28]))(handle, maxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGISwapChain3> comObj, uint* pMaxLatency) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, HResult>)(handle->LpVtbl[29]))(handle, pMaxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGISwapChain3> comObj, ref uint pMaxLatency) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint*, HResult>)(handle->LpVtbl[29]))(handle, (uint*)ppMaxLatency);
				return ret;
			}
		}

		public static nint GetFrameLatencyWaitableObject(this ComPtr<IDXGISwapChain3> comObj) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			nint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, nint>)(handle->LpVtbl[30]))(handle);
			return ret;
		}

		public static HResult SetMatrixTransform(this ComPtr<IDXGISwapChain3> comObj, DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[31]))(handle, pMatrix);
			return ret;
		}

		public static HResult SetMatrixTransform(this ComPtr<IDXGISwapChain3> comObj, ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[31]))(handle, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		public static HResult GetMatrixTransform(this ComPtr<IDXGISwapChain3> comObj, DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[32]))(handle, pMatrix);
			return ret;
		}

		public static HResult GetMatrixTransform(this ComPtr<IDXGISwapChain3> comObj, ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[32]))(handle, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		public static uint GetCurrentBackBufferIndex(this ComPtr<IDXGISwapChain3> comObj) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint>)(handle->LpVtbl[33]))(handle);
			return ret;
		}

		public static HResult CheckColorSpaceSupport(this ComPtr<IDXGISwapChain3> comObj, DxgiColorSpaceType colorSpace, uint* pColorSpaceSupport) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiColorSpaceType, uint*, HResult>)(handle->LpVtbl[34]))(handle, colorSpace, pColorSpaceSupport);
			return ret;
		}

		public static HResult CheckColorSpaceSupport(this ComPtr<IDXGISwapChain3> comObj, DxgiColorSpaceType colorSpace, ref uint pColorSpaceSupport) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppColorSpaceSupport = &pColorSpaceSupport)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiColorSpaceType, uint*, HResult>)(handle->LpVtbl[34]))(handle, colorSpace, (uint*)ppColorSpaceSupport);
				return ret;
			}
		}

		public static HResult SetColorSpace1(this ComPtr<IDXGISwapChain3> comObj, DxgiColorSpaceType colorSpace) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, DxgiColorSpaceType, HResult>)(handle->LpVtbl[35]))(handle, colorSpace);
			return ret;
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain3> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, uint* pCreationNodeMask, IUnknown*** ppPresentQueue) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, ppPresentQueue);
			return ret;
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain3> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, ref uint pCreationNodeMask, IUnknown*** ppPresentQueue) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, ppPresentQueue);
				return ret;
			}
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain3> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, uint* pCreationNodeMask, ref IUnknown* ppPresentQueue) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (IUnknown** pppPresentQueue = &ppPresentQueue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, (IUnknown***)pppPresentQueue);
				return ret;
			}
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain3> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, uint* pCreationNodeMask, ComPtr<IUnknown> ppPresentQueue) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, ppPresentQueue);
			return ret;
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain3> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, ref uint pCreationNodeMask, ref IUnknown* ppPresentQueue) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				fixed (IUnknown** pppPresentQueue = &ppPresentQueue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, (IUnknown***)pppPresentQueue);
					return ret;
				}
			}
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain3> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, ref uint pCreationNodeMask, ComPtr<IUnknown> ppPresentQueue) 
		{
			IDXGISwapChain3* handle = comObj.Handle;
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain3*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, ppPresentQueue);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput4> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput4> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput4> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput4> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput4> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput4> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput4> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput4> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput4> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput4> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput4> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput4> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput4> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput4> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput4> comObj, DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput4> comObj, ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult WaitForVBlank(this ComPtr<IDXGIOutput4> comObj) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, HResult>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput4> comObj, IUnknown* pDevice, Bool32 exclusive) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput4> comObj, ref IUnknown pDevice, Bool32 exclusive) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput4> comObj, ComPtr<IUnknown> pDevice, Bool32 exclusive) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static void ReleaseOwnership(this ComPtr<IDXGIOutput4> comObj) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIOutput4*, void>)(handle->LpVtbl[9]))(handle);
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput4> comObj, DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, pGammaCaps);
			return ret;
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput4> comObj, ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput4> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, pArray);
			return ret;
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput4> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput4> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, pArray);
			return ret;
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput4> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput4> comObj, IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput4> comObj, ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput4> comObj, ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput4> comObj, IDXGISurface* pDestination) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput4> comObj, ref IDXGISurface pDestination) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput4> comObj, ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput4> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput4> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput4> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput4> comObj, IDXGIResource* pDestination) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput4> comObj, ref IDXGIResource pDestination) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput4> comObj, ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput4> comObj, IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput4> comObj, ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput4> comObj, ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput4> comObj, IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput4> comObj, IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput4> comObj, ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput4> comObj, ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static Bool32 SupportsOverlays(this ComPtr<IDXGIOutput4> comObj) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, Bool32>)(handle->LpVtbl[20]))(handle);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput4> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput4* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput4*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory4> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory4> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory4> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory4> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory4> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory4> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory4> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory4> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory4> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory4> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory4> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory4> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory4> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory4> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory4> comObj, uint adapter, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory4> comObj, uint adapter, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory4> comObj, uint adapter, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult MakeWindowAssociation(this ComPtr<IDXGIFactory4> comObj, nint windowHandle, uint flags) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint, HResult>)(handle->LpVtbl[5]))(handle, windowHandle, flags);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory4> comObj, nint* pWindowHandle) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint*, HResult>)(handle->LpVtbl[6]))(handle, pWindowHandle);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory4> comObj, ref nint pWindowHandle) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint*, HResult>)(handle->LpVtbl[6]))(handle, (nint*)ppWindowHandle);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory4> comObj, nint module, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, ppAdapter);
			return ret;
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory4> comObj, nint module, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory4> comObj, nint module, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory4> comObj, uint adapter, IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory4> comObj, uint adapter, ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory4> comObj, uint adapter, out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static Bool32 IsCurrent(this ComPtr<IDXGIFactory4> comObj) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Bool32>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		public static Bool32 IsWindowedStereoEnabled(this ComPtr<IDXGIFactory4> comObj) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Bool32>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory4> comObj, nint hResource, Luid* pLuid) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, pLuid);
			return ret;
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory4> comObj, nint hResource, ref Luid pLuid) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory4> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory4> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory4> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory4> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterStereoStatus(this ComPtr<IDXGIFactory4> comObj, uint dwCookie) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, void>)(handle->LpVtbl[17]))(handle, dwCookie);
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory4> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory4> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory4> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory4> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterOcclusionStatus(this ComPtr<IDXGIFactory4> comObj, uint dwCookie) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint, void>)(handle->LpVtbl[20]))(handle, dwCookie);
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory4> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static uint GetCreationFlags(this ComPtr<IDXGIFactory4> comObj) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, uint>)(handle->LpVtbl[22]))(handle);
			return ret;
		}

		public static HResult EnumAdapterByLuid(this ComPtr<IDXGIFactory4> comObj, Luid adapterLuid, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Luid, Guid*, void**, HResult>)(handle->LpVtbl[23]))(handle, adapterLuid, riid, ppvAdapter);
			return ret;
		}

		public static HResult EnumAdapterByLuid(this ComPtr<IDXGIFactory4> comObj, Luid adapterLuid, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Luid, Guid*, void**, HResult>)(handle->LpVtbl[23]))(handle, adapterLuid, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		public static HResult EnumWarpAdapter(this ComPtr<IDXGIFactory4> comObj, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(handle->LpVtbl[24]))(handle, riid, ppvAdapter);
			return ret;
		}

		public static HResult EnumWarpAdapter(this ComPtr<IDXGIFactory4> comObj, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory4*, Guid*, void**, HResult>)(handle->LpVtbl[24]))(handle, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIAdapter3> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIAdapter3> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter3> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter3> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter3> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter3> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter3> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter3> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter3> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter3> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter3> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter3> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIAdapter3> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIAdapter3> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter3> comObj, uint output, IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, ppOutput);
			return ret;
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter3> comObj, uint output, ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter3> comObj, uint output, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIAdapter3> comObj, DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc*, HResult>)(handle->LpVtbl[5]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIAdapter3> comObj, ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc*, HResult>)(handle->LpVtbl[5]))(handle, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter3> comObj, Guid* interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, interfaceName, pUMDVersion);
			return ret;
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter3> comObj, ref Guid interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter3> comObj, Guid* interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter3> comObj, ref Guid interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		public static HResult GetDesc1(this ComPtr<IDXGIAdapter3> comObj, DxgiAdapterDesc1* pDesc) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc1*, HResult>)(handle->LpVtbl[7]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc1(this ComPtr<IDXGIAdapter3> comObj, ref DxgiAdapterDesc1 pDesc) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (DxgiAdapterDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc1*, HResult>)(handle->LpVtbl[7]))(handle, (DxgiAdapterDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDesc2(this ComPtr<IDXGIAdapter3> comObj, DxgiAdapterDesc2* pDesc) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc2*, HResult>)(handle->LpVtbl[8]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc2(this ComPtr<IDXGIAdapter3> comObj, ref DxgiAdapterDesc2 pDesc) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (DxgiAdapterDesc2* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, DxgiAdapterDesc2*, HResult>)(handle->LpVtbl[8]))(handle, (DxgiAdapterDesc2*)ppDesc);
				return ret;
			}
		}

		public static HResult RegisterHardwareContentProtectionTeardownStatusEvent(this ComPtr<IDXGIAdapter3> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, nint, uint*, HResult>)(handle->LpVtbl[9]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterHardwareContentProtectionTeardownStatusEvent(this ComPtr<IDXGIAdapter3> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, nint, uint*, HResult>)(handle->LpVtbl[9]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterHardwareContentProtectionTeardownStatus(this ComPtr<IDXGIAdapter3> comObj, uint dwCookie) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, void>)(handle->LpVtbl[10]))(handle, dwCookie);
		}

		public static HResult QueryVideoMemoryInfo(this ComPtr<IDXGIAdapter3> comObj, uint nodeIndex, DxgiMemorySegmentGroup memorySegmentGroup, DxgiQueryVideoMemoryInfo* pVideoMemoryInfo) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, DxgiMemorySegmentGroup, DxgiQueryVideoMemoryInfo*, HResult>)(handle->LpVtbl[11]))(handle, nodeIndex, memorySegmentGroup, pVideoMemoryInfo);
			return ret;
		}

		public static HResult QueryVideoMemoryInfo(this ComPtr<IDXGIAdapter3> comObj, uint nodeIndex, DxgiMemorySegmentGroup memorySegmentGroup, ref DxgiQueryVideoMemoryInfo pVideoMemoryInfo) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (DxgiQueryVideoMemoryInfo* ppVideoMemoryInfo = &pVideoMemoryInfo)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, DxgiMemorySegmentGroup, DxgiQueryVideoMemoryInfo*, HResult>)(handle->LpVtbl[11]))(handle, nodeIndex, memorySegmentGroup, (DxgiQueryVideoMemoryInfo*)ppVideoMemoryInfo);
				return ret;
			}
		}

		public static HResult SetVideoMemoryReservation(this ComPtr<IDXGIAdapter3> comObj, uint nodeIndex, DxgiMemorySegmentGroup memorySegmentGroup, ulong reservation) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, DxgiMemorySegmentGroup, ulong, HResult>)(handle->LpVtbl[12]))(handle, nodeIndex, memorySegmentGroup, reservation);
			return ret;
		}

		public static HResult RegisterVideoMemoryBudgetChangeNotificationEvent(this ComPtr<IDXGIAdapter3> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, nint, uint*, HResult>)(handle->LpVtbl[13]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterVideoMemoryBudgetChangeNotificationEvent(this ComPtr<IDXGIAdapter3> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, nint, uint*, HResult>)(handle->LpVtbl[13]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterVideoMemoryBudgetChangeNotification(this ComPtr<IDXGIAdapter3> comObj, uint dwCookie) 
		{
			IDXGIAdapter3* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIAdapter3*, uint, void>)(handle->LpVtbl[14]))(handle, dwCookie);
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput5> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput5> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput5> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput5> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput5> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput5> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput5> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput5> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput5> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput5> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput5> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput5> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput5> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput5> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput5> comObj, DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput5> comObj, ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult WaitForVBlank(this ComPtr<IDXGIOutput5> comObj) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, HResult>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput5> comObj, IUnknown* pDevice, Bool32 exclusive) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput5> comObj, ref IUnknown pDevice, Bool32 exclusive) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput5> comObj, ComPtr<IUnknown> pDevice, Bool32 exclusive) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static void ReleaseOwnership(this ComPtr<IDXGIOutput5> comObj) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIOutput5*, void>)(handle->LpVtbl[9]))(handle);
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput5> comObj, DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, pGammaCaps);
			return ret;
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput5> comObj, ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput5> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, pArray);
			return ret;
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput5> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput5> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, pArray);
			return ret;
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput5> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput5> comObj, IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput5> comObj, ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput5> comObj, ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput5> comObj, IDXGISurface* pDestination) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput5> comObj, ref IDXGISurface pDestination) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput5> comObj, ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput5> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput5> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput5> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput5> comObj, IDXGIResource* pDestination) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput5> comObj, ref IDXGIResource pDestination) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput5> comObj, ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput5> comObj, IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput5> comObj, ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput5> comObj, ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput5> comObj, IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput5> comObj, IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput5> comObj, ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput5> comObj, ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static Bool32 SupportsOverlays(this ComPtr<IDXGIOutput5> comObj) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, Bool32>)(handle->LpVtbl[20]))(handle);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput5> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, ref IUnknown pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, ref IUnknown pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, (IUnknown*)ppDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, ref IUnknown pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, ref IUnknown pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
				{
					fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, (IUnknown*)ppDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
						return ret;
					}
				}
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput5> comObj, ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput5* handle = comObj.Handle;
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput5*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISwapChain4> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGISwapChain4> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain4> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain4> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain4> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain4> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain4> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGISwapChain4> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain4> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain4> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain4> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGISwapChain4> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGISwapChain4> comObj, Guid* riid, void** ppParent) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGISwapChain4> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDevice(this ComPtr<IDXGISwapChain4> comObj, Guid* riid, void** ppDevice) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, riid, ppDevice);
			return ret;
		}

		public static HResult GetDevice(this ComPtr<IDXGISwapChain4> comObj, ref Guid riid, void** ppDevice) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(handle->LpVtbl[4]))(handle, (Guid*)priid, ppDevice);
				return ret;
			}
		}

		public static HResult Present(this ComPtr<IDXGISwapChain4> comObj, uint syncInterval, uint flags) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, HResult>)(handle->LpVtbl[5]))(handle, syncInterval, flags);
			return ret;
		}

		public static HResult GetBuffer(this ComPtr<IDXGISwapChain4> comObj, uint buffer, Guid* riid, void** ppSurface) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, Guid*, void**, HResult>)(handle->LpVtbl[6]))(handle, buffer, riid, ppSurface);
			return ret;
		}

		public static HResult GetBuffer(this ComPtr<IDXGISwapChain4> comObj, uint buffer, ref Guid riid, void** ppSurface) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, Guid*, void**, HResult>)(handle->LpVtbl[6]))(handle, buffer, (Guid*)priid, ppSurface);
				return ret;
			}
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain4> comObj, Bool32 fullscreen, IDXGIOutput* pTarget) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, pTarget);
			return ret;
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain4> comObj, Bool32 fullscreen, ref IDXGIOutput pTarget) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (IDXGIOutput* ppTarget = &pTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, (IDXGIOutput*)ppTarget);
				return ret;
			}
		}

		public static HResult SetFullscreenState(this ComPtr<IDXGISwapChain4> comObj, Bool32 fullscreen, ComPtr<IDXGIOutput> pTarget) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32, IDXGIOutput*, HResult>)(handle->LpVtbl[7]))(handle, fullscreen, pTarget);
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain4> comObj, Bool32* pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, ppTarget);
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain4> comObj, ref Bool32 pFullscreen, IDXGIOutput** ppTarget) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, ppTarget);
				return ret;
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain4> comObj, Bool32* pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (IDXGIOutput** pppTarget = &ppTarget)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, (IDXGIOutput**)pppTarget);
				return ret;
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain4> comObj, Bool32* pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			ppTarget = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, pFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
			return ret;
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain4> comObj, ref Bool32 pFullscreen, ref IDXGIOutput* ppTarget) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				fixed (IDXGIOutput** pppTarget = &ppTarget)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, (IDXGIOutput**)pppTarget);
					return ret;
				}
			}
		}

		public static HResult GetFullscreenState(this ComPtr<IDXGISwapChain4> comObj, ref Bool32 pFullscreen, out ComPtr<IDXGIOutput> ppTarget) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Bool32* ppFullscreen = &pFullscreen)
			{
				ppTarget = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32*, IDXGIOutput**, HResult>)(handle->LpVtbl[8]))(handle, (Bool32*)ppFullscreen, (IDXGIOutput**)ppTarget.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGISwapChain4> comObj, DxgiSwapChainDesc* pDesc) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainDesc*, HResult>)(handle->LpVtbl[9]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGISwapChain4> comObj, ref DxgiSwapChainDesc pDesc) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainDesc*, HResult>)(handle->LpVtbl[9]))(handle, (DxgiSwapChainDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult ResizeBuffers(this ComPtr<IDXGISwapChain4> comObj, uint bufferCount, uint width, uint height, DxgiFormat newFormat, uint swapChainFlags) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, HResult>)(handle->LpVtbl[10]))(handle, bufferCount, width, height, newFormat, swapChainFlags);
			return ret;
		}

		public static HResult ResizeTarget(this ComPtr<IDXGISwapChain4> comObj, DxgiModeDesc* pNewTargetParameters) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiModeDesc*, HResult>)(handle->LpVtbl[11]))(handle, pNewTargetParameters);
			return ret;
		}

		public static HResult ResizeTarget(this ComPtr<IDXGISwapChain4> comObj, ref DxgiModeDesc pNewTargetParameters) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppNewTargetParameters = &pNewTargetParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiModeDesc*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiModeDesc*)ppNewTargetParameters);
				return ret;
			}
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain4> comObj, IDXGIOutput** ppOutput) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, ppOutput);
			return ret;
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain4> comObj, ref IDXGIOutput* ppOutput) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		public static HResult GetContainingOutput(this ComPtr<IDXGISwapChain4> comObj, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(handle->LpVtbl[12]))(handle, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGISwapChain4> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[13]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGISwapChain4> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[13]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetLastPresentCount(this ComPtr<IDXGISwapChain4> comObj, uint* pLastPresentCount) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, HResult>)(handle->LpVtbl[14]))(handle, pLastPresentCount);
			return ret;
		}

		public static HResult GetLastPresentCount(this ComPtr<IDXGISwapChain4> comObj, ref uint pLastPresentCount) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (uint* ppLastPresentCount = &pLastPresentCount)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, HResult>)(handle->LpVtbl[14]))(handle, (uint*)ppLastPresentCount);
				return ret;
			}
		}

		public static HResult GetDesc1(this ComPtr<IDXGISwapChain4> comObj, DxgiSwapChainDesc1* pDesc) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainDesc1*, HResult>)(handle->LpVtbl[15]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc1(this ComPtr<IDXGISwapChain4> comObj, ref DxgiSwapChainDesc1 pDesc) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainDesc1*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiSwapChainDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetFullscreenDesc(this ComPtr<IDXGISwapChain4> comObj, DxgiSwapChainFullscreenDesc* pDesc) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainFullscreenDesc*, HResult>)(handle->LpVtbl[16]))(handle, pDesc);
			return ret;
		}

		public static HResult GetFullscreenDesc(this ComPtr<IDXGISwapChain4> comObj, ref DxgiSwapChainFullscreenDesc pDesc) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiSwapChainFullscreenDesc*, HResult>)(handle->LpVtbl[16]))(handle, (DxgiSwapChainFullscreenDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetHwnd(this ComPtr<IDXGISwapChain4> comObj, nint* pHwnd) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, nint*, HResult>)(handle->LpVtbl[17]))(handle, pHwnd);
			return ret;
		}

		public static HResult GetHwnd(this ComPtr<IDXGISwapChain4> comObj, ref nint pHwnd) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (nint* ppHwnd = &pHwnd)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, nint*, HResult>)(handle->LpVtbl[17]))(handle, (nint*)ppHwnd);
				return ret;
			}
		}

		public static HResult GetCoreWindow(this ComPtr<IDXGISwapChain4> comObj, Guid* refiid, void** ppUnk) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(handle->LpVtbl[18]))(handle, refiid, ppUnk);
			return ret;
		}

		public static HResult GetCoreWindow(this ComPtr<IDXGISwapChain4> comObj, ref Guid refiid, void** ppUnk) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Guid* prefiid = &refiid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Guid*, void**, HResult>)(handle->LpVtbl[18]))(handle, (Guid*)prefiid, ppUnk);
				return ret;
			}
		}

		public static HResult Present1(this ComPtr<IDXGISwapChain4> comObj, uint syncInterval, uint presentFlags, DxgiPresentParameters* pPresentParameters) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, DxgiPresentParameters*, HResult>)(handle->LpVtbl[19]))(handle, syncInterval, presentFlags, pPresentParameters);
			return ret;
		}

		public static HResult Present1(this ComPtr<IDXGISwapChain4> comObj, uint syncInterval, uint presentFlags, ref DxgiPresentParameters pPresentParameters) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (DxgiPresentParameters* ppPresentParameters = &pPresentParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, DxgiPresentParameters*, HResult>)(handle->LpVtbl[19]))(handle, syncInterval, presentFlags, (DxgiPresentParameters*)ppPresentParameters);
				return ret;
			}
		}

		public static Bool32 IsTemporaryMonoSupported(this ComPtr<IDXGISwapChain4> comObj) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Bool32>)(handle->LpVtbl[20]))(handle);
			return ret;
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain4> comObj, IDXGIOutput** ppRestrictToOutput) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, ppRestrictToOutput);
			return ret;
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain4> comObj, ref IDXGIOutput* ppRestrictToOutput) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (IDXGIOutput** pppRestrictToOutput = &ppRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, (IDXGIOutput**)pppRestrictToOutput);
				return ret;
			}
		}

		public static HResult GetRestrictToOutput(this ComPtr<IDXGISwapChain4> comObj, out ComPtr<IDXGIOutput> ppRestrictToOutput) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			ppRestrictToOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, IDXGIOutput**, HResult>)(handle->LpVtbl[21]))(handle, (IDXGIOutput**)ppRestrictToOutput.GetAddressOf());
			return ret;
		}

		public static HResult SetBackgroundColor(this ComPtr<IDXGISwapChain4> comObj, Vector4* pColor) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Vector4*, HResult>)(handle->LpVtbl[22]))(handle, pColor);
			return ret;
		}

		public static HResult SetBackgroundColor(this ComPtr<IDXGISwapChain4> comObj, ref Vector4 pColor) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Vector4*, HResult>)(handle->LpVtbl[22]))(handle, (Vector4*)ppColor);
				return ret;
			}
		}

		public static HResult GetBackgroundColor(this ComPtr<IDXGISwapChain4> comObj, Vector4* pColor) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Vector4*, HResult>)(handle->LpVtbl[23]))(handle, pColor);
			return ret;
		}

		public static HResult GetBackgroundColor(this ComPtr<IDXGISwapChain4> comObj, ref Vector4 pColor) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (Vector4* ppColor = &pColor)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, Vector4*, HResult>)(handle->LpVtbl[23]))(handle, (Vector4*)ppColor);
				return ret;
			}
		}

		public static HResult SetRotation(this ComPtr<IDXGISwapChain4> comObj, DxgiModeRotation rotation) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiModeRotation, HResult>)(handle->LpVtbl[24]))(handle, rotation);
			return ret;
		}

		public static HResult GetRotation(this ComPtr<IDXGISwapChain4> comObj, DxgiModeRotation* pRotation) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiModeRotation*, HResult>)(handle->LpVtbl[25]))(handle, pRotation);
			return ret;
		}

		public static HResult GetRotation(this ComPtr<IDXGISwapChain4> comObj, ref DxgiModeRotation pRotation) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (DxgiModeRotation* ppRotation = &pRotation)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiModeRotation*, HResult>)(handle->LpVtbl[25]))(handle, (DxgiModeRotation*)ppRotation);
				return ret;
			}
		}

		public static HResult SetSourceSize(this ComPtr<IDXGISwapChain4> comObj, uint width, uint height) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, HResult>)(handle->LpVtbl[26]))(handle, width, height);
			return ret;
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain4> comObj, uint* pWidth, uint* pHeight) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, pWidth, pHeight);
			return ret;
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain4> comObj, ref uint pWidth, uint* pHeight) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (uint* ppWidth = &pWidth)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, (uint*)ppWidth, pHeight);
				return ret;
			}
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain4> comObj, uint* pWidth, ref uint pHeight) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (uint* ppHeight = &pHeight)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, pWidth, (uint*)ppHeight);
				return ret;
			}
		}

		public static HResult GetSourceSize(this ComPtr<IDXGISwapChain4> comObj, ref uint pWidth, ref uint pHeight) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (uint* ppWidth = &pWidth)
			{
				fixed (uint* ppHeight = &pHeight)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, uint*, HResult>)(handle->LpVtbl[27]))(handle, (uint*)ppWidth, (uint*)ppHeight);
					return ret;
				}
			}
		}

		public static HResult SetMaximumFrameLatency(this ComPtr<IDXGISwapChain4> comObj, uint maxLatency) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, HResult>)(handle->LpVtbl[28]))(handle, maxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGISwapChain4> comObj, uint* pMaxLatency) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, HResult>)(handle->LpVtbl[29]))(handle, pMaxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGISwapChain4> comObj, ref uint pMaxLatency) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint*, HResult>)(handle->LpVtbl[29]))(handle, (uint*)ppMaxLatency);
				return ret;
			}
		}

		public static nint GetFrameLatencyWaitableObject(this ComPtr<IDXGISwapChain4> comObj) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			nint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, nint>)(handle->LpVtbl[30]))(handle);
			return ret;
		}

		public static HResult SetMatrixTransform(this ComPtr<IDXGISwapChain4> comObj, DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[31]))(handle, pMatrix);
			return ret;
		}

		public static HResult SetMatrixTransform(this ComPtr<IDXGISwapChain4> comObj, ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[31]))(handle, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		public static HResult GetMatrixTransform(this ComPtr<IDXGISwapChain4> comObj, DxgiMatrix3X2F* pMatrix) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[32]))(handle, pMatrix);
			return ret;
		}

		public static HResult GetMatrixTransform(this ComPtr<IDXGISwapChain4> comObj, ref DxgiMatrix3X2F pMatrix) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (DxgiMatrix3X2F* ppMatrix = &pMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiMatrix3X2F*, HResult>)(handle->LpVtbl[32]))(handle, (DxgiMatrix3X2F*)ppMatrix);
				return ret;
			}
		}

		public static uint GetCurrentBackBufferIndex(this ComPtr<IDXGISwapChain4> comObj) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint>)(handle->LpVtbl[33]))(handle);
			return ret;
		}

		public static HResult CheckColorSpaceSupport(this ComPtr<IDXGISwapChain4> comObj, DxgiColorSpaceType colorSpace, uint* pColorSpaceSupport) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiColorSpaceType, uint*, HResult>)(handle->LpVtbl[34]))(handle, colorSpace, pColorSpaceSupport);
			return ret;
		}

		public static HResult CheckColorSpaceSupport(this ComPtr<IDXGISwapChain4> comObj, DxgiColorSpaceType colorSpace, ref uint pColorSpaceSupport) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (uint* ppColorSpaceSupport = &pColorSpaceSupport)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiColorSpaceType, uint*, HResult>)(handle->LpVtbl[34]))(handle, colorSpace, (uint*)ppColorSpaceSupport);
				return ret;
			}
		}

		public static HResult SetColorSpace1(this ComPtr<IDXGISwapChain4> comObj, DxgiColorSpaceType colorSpace) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiColorSpaceType, HResult>)(handle->LpVtbl[35]))(handle, colorSpace);
			return ret;
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain4> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, uint* pCreationNodeMask, IUnknown*** ppPresentQueue) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, ppPresentQueue);
			return ret;
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain4> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, ref uint pCreationNodeMask, IUnknown*** ppPresentQueue) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, ppPresentQueue);
				return ret;
			}
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain4> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, uint* pCreationNodeMask, ref IUnknown* ppPresentQueue) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (IUnknown** pppPresentQueue = &ppPresentQueue)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, (IUnknown***)pppPresentQueue);
				return ret;
			}
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain4> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, uint* pCreationNodeMask, ComPtr<IUnknown> ppPresentQueue) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, pCreationNodeMask, ppPresentQueue);
			return ret;
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain4> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, ref uint pCreationNodeMask, ref IUnknown* ppPresentQueue) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				fixed (IUnknown** pppPresentQueue = &ppPresentQueue)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, (IUnknown***)pppPresentQueue);
					return ret;
				}
			}
		}

		public static HResult ResizeBuffers1(this ComPtr<IDXGISwapChain4> comObj, uint bufferCount, uint width, uint height, DxgiFormat format, uint swapChainFlags, ref uint pCreationNodeMask, ComPtr<IUnknown> ppPresentQueue) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			fixed (uint* ppCreationNodeMask = &pCreationNodeMask)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, uint, uint, uint, DxgiFormat, uint, uint*, IUnknown***, HResult>)(handle->LpVtbl[36]))(handle, bufferCount, width, height, format, swapChainFlags, (uint*)ppCreationNodeMask, ppPresentQueue);
				return ret;
			}
		}

		public static HResult SetHdrMetaData(this ComPtr<IDXGISwapChain4> comObj, DxgiHdrMetadataType type, uint size, void* pMetaData) 
		{
			IDXGISwapChain4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGISwapChain4*, DxgiHdrMetadataType, uint, void*, HResult>)(handle->LpVtbl[37]))(handle, type, size, pMetaData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDevice4> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIDevice4> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice4> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice4> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice4> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice4> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice4> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIDevice4> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice4> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice4> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice4> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIDevice4> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIDevice4> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIDevice4> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice4> comObj, IDXGIAdapter** pAdapter) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, pAdapter);
			return ret;
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice4> comObj, ref IDXGIAdapter* pAdapter) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IDXGIAdapter** ppAdapter = &pAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, (IDXGIAdapter**)ppAdapter);
				return ret;
			}
		}

		public static HResult GetAdapter(this ComPtr<IDXGIDevice4> comObj, out ComPtr<IDXGIAdapter> pAdapter) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			pAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, (IDXGIAdapter**)pAdapter.GetAddressOf());
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, ppSurface);
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, ppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, IDXGISurface** ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, ppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IDXGISurface** pppSurface = &ppSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			ppSurface = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
			return ret;
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, DxgiSharedResource* pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, pSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				fixed (IDXGISurface** pppSurface = &ppSurface)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
					return ret;
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, DxgiSurfaceDesc* pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
			{
				ppSurface = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, pDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, ref IDXGISurface* ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					fixed (IDXGISurface** pppSurface = &ppSurface)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)pppSurface);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSurface(this ComPtr<IDXGIDevice4> comObj, ref DxgiSurfaceDesc pDesc, uint numSurfaces, uint usage, ref DxgiSharedResource pSharedResource, out ComPtr<IDXGISurface> ppSurface) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiSurfaceDesc* ppDesc = &pDesc)
			{
				fixed (DxgiSharedResource* ppSharedResource = &pSharedResource)
				{
					ppSurface = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, DxgiSurfaceDesc*, uint, uint, DxgiSharedResource*, IDXGISurface**, HResult>)(handle->LpVtbl[5]))(handle, (DxgiSurfaceDesc*)ppDesc, numSurfaces, usage, (DxgiSharedResource*)ppSharedResource, (IDXGISurface**)ppSurface.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice4> comObj, IUnknown*** ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice4> comObj, ref IUnknown* ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IUnknown** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, (IUnknown***)pppResources, pResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice4> comObj, ComPtr<IUnknown> ppResources, DxgiResidency* pResidencyStatus, uint numResources) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, pResidencyStatus, numResources);
			return ret;
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice4> comObj, IUnknown*** ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice4> comObj, ref IUnknown* ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IUnknown** pppResources = &ppResources)
			{
				fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, (IUnknown***)pppResources, (DxgiResidency*)ppResidencyStatus, numResources);
					return ret;
				}
			}
		}

		public static HResult QueryResourceResidency(this ComPtr<IDXGIDevice4> comObj, ComPtr<IUnknown> ppResources, ref DxgiResidency pResidencyStatus, uint numResources) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiResidency* ppResidencyStatus = &pResidencyStatus)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, IUnknown***, DxgiResidency*, uint, HResult>)(handle->LpVtbl[6]))(handle, ppResources, (DxgiResidency*)ppResidencyStatus, numResources);
				return ret;
			}
		}

		public static HResult SetGpuThreadPriority(this ComPtr<IDXGIDevice4> comObj, int priority) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, int, HResult>)(handle->LpVtbl[7]))(handle, priority);
			return ret;
		}

		public static HResult GetGpuThreadPriority(this ComPtr<IDXGIDevice4> comObj, int* pPriority) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, int*, HResult>)(handle->LpVtbl[8]))(handle, pPriority);
			return ret;
		}

		public static HResult GetGpuThreadPriority(this ComPtr<IDXGIDevice4> comObj, ref int pPriority) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (int* ppPriority = &pPriority)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, int*, HResult>)(handle->LpVtbl[8]))(handle, (int*)ppPriority);
				return ret;
			}
		}

		public static HResult SetMaximumFrameLatency(this ComPtr<IDXGIDevice4> comObj, uint maxLatency) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, HResult>)(handle->LpVtbl[9]))(handle, maxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGIDevice4> comObj, uint* pMaxLatency) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint*, HResult>)(handle->LpVtbl[10]))(handle, pMaxLatency);
			return ret;
		}

		public static HResult GetMaximumFrameLatency(this ComPtr<IDXGIDevice4> comObj, ref uint pMaxLatency) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (uint* ppMaxLatency = &pMaxLatency)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint*, HResult>)(handle->LpVtbl[10]))(handle, (uint*)ppMaxLatency);
				return ret;
			}
		}

		public static HResult OfferResources(this ComPtr<IDXGIDevice4> comObj, uint numResources, IDXGIResource*** ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiOfferResourcePriority, HResult>)(handle->LpVtbl[11]))(handle, numResources, ppResources, priority);
			return ret;
		}

		public static HResult OfferResources(this ComPtr<IDXGIDevice4> comObj, uint numResources, ref IDXGIResource* ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiOfferResourcePriority, HResult>)(handle->LpVtbl[11]))(handle, numResources, (IDXGIResource***)pppResources, priority);
				return ret;
			}
		}

		public static HResult OfferResources(this ComPtr<IDXGIDevice4> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, DxgiOfferResourcePriority priority) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiOfferResourcePriority, HResult>)(handle->LpVtbl[11]))(handle, numResources, ppResources, priority);
			return ret;
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice4> comObj, uint numResources, IDXGIResource*** ppResources, Bool32* pDiscarded) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, pDiscarded);
			return ret;
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice4> comObj, uint numResources, ref IDXGIResource* ppResources, Bool32* pDiscarded) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, (IDXGIResource***)pppResources, pDiscarded);
				return ret;
			}
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice4> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, Bool32* pDiscarded) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, pDiscarded);
			return ret;
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice4> comObj, uint numResources, IDXGIResource*** ppResources, ref Bool32 pDiscarded) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, (Bool32*)ppDiscarded);
				return ret;
			}
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice4> comObj, uint numResources, ref IDXGIResource* ppResources, ref Bool32 pDiscarded) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				fixed (Bool32* ppDiscarded = &pDiscarded)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, (IDXGIResource***)pppResources, (Bool32*)ppDiscarded);
					return ret;
				}
			}
		}

		public static HResult ReclaimResources(this ComPtr<IDXGIDevice4> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, ref Bool32 pDiscarded) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (Bool32* ppDiscarded = &pDiscarded)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, Bool32*, HResult>)(handle->LpVtbl[12]))(handle, numResources, ppResources, (Bool32*)ppDiscarded);
				return ret;
			}
		}

		public static HResult EnqueueSetEvent(this ComPtr<IDXGIDevice4> comObj, nint hEvent) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, nint, HResult>)(handle->LpVtbl[13]))(handle, hEvent);
			return ret;
		}

		public static void Trim(this ComPtr<IDXGIDevice4> comObj) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIDevice4*, void>)(handle->LpVtbl[14]))(handle);
		}

		public static HResult OfferResources1(this ComPtr<IDXGIDevice4> comObj, uint numResources, IDXGIResource*** ppResources, DxgiOfferResourcePriority priority, uint flags) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiOfferResourcePriority, uint, HResult>)(handle->LpVtbl[15]))(handle, numResources, ppResources, priority, flags);
			return ret;
		}

		public static HResult OfferResources1(this ComPtr<IDXGIDevice4> comObj, uint numResources, ref IDXGIResource* ppResources, DxgiOfferResourcePriority priority, uint flags) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiOfferResourcePriority, uint, HResult>)(handle->LpVtbl[15]))(handle, numResources, (IDXGIResource***)pppResources, priority, flags);
				return ret;
			}
		}

		public static HResult OfferResources1(this ComPtr<IDXGIDevice4> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, DxgiOfferResourcePriority priority, uint flags) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiOfferResourcePriority, uint, HResult>)(handle->LpVtbl[15]))(handle, numResources, ppResources, priority, flags);
			return ret;
		}

		public static HResult ReclaimResources1(this ComPtr<IDXGIDevice4> comObj, uint numResources, IDXGIResource*** ppResources, DxgiReclaimResourceResults* pResults) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiReclaimResourceResults*, HResult>)(handle->LpVtbl[16]))(handle, numResources, ppResources, pResults);
			return ret;
		}

		public static HResult ReclaimResources1(this ComPtr<IDXGIDevice4> comObj, uint numResources, ref IDXGIResource* ppResources, DxgiReclaimResourceResults* pResults) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiReclaimResourceResults*, HResult>)(handle->LpVtbl[16]))(handle, numResources, (IDXGIResource***)pppResources, pResults);
				return ret;
			}
		}

		public static HResult ReclaimResources1(this ComPtr<IDXGIDevice4> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, DxgiReclaimResourceResults* pResults) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiReclaimResourceResults*, HResult>)(handle->LpVtbl[16]))(handle, numResources, ppResources, pResults);
			return ret;
		}

		public static HResult ReclaimResources1(this ComPtr<IDXGIDevice4> comObj, uint numResources, IDXGIResource*** ppResources, ref DxgiReclaimResourceResults pResults) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiReclaimResourceResults* ppResults = &pResults)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiReclaimResourceResults*, HResult>)(handle->LpVtbl[16]))(handle, numResources, ppResources, (DxgiReclaimResourceResults*)ppResults);
				return ret;
			}
		}

		public static HResult ReclaimResources1(this ComPtr<IDXGIDevice4> comObj, uint numResources, ref IDXGIResource* ppResources, ref DxgiReclaimResourceResults pResults) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (IDXGIResource** pppResources = &ppResources)
			{
				fixed (DxgiReclaimResourceResults* ppResults = &pResults)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiReclaimResourceResults*, HResult>)(handle->LpVtbl[16]))(handle, numResources, (IDXGIResource***)pppResources, (DxgiReclaimResourceResults*)ppResults);
					return ret;
				}
			}
		}

		public static HResult ReclaimResources1(this ComPtr<IDXGIDevice4> comObj, uint numResources, ComPtr<IDXGIResource> ppResources, ref DxgiReclaimResourceResults pResults) 
		{
			IDXGIDevice4* handle = comObj.Handle;
			fixed (DxgiReclaimResourceResults* ppResults = &pResults)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIDevice4*, uint, IDXGIResource***, DxgiReclaimResourceResults*, HResult>)(handle->LpVtbl[16]))(handle, numResources, ppResources, (DxgiReclaimResourceResults*)ppResults);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory5> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory5> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory5> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory5> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory5> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory5> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory5> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory5> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory5> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory5> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory5> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory5> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory5> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory5> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory5> comObj, uint adapter, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory5> comObj, uint adapter, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory5> comObj, uint adapter, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult MakeWindowAssociation(this ComPtr<IDXGIFactory5> comObj, nint windowHandle, uint flags) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint, HResult>)(handle->LpVtbl[5]))(handle, windowHandle, flags);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory5> comObj, nint* pWindowHandle) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint*, HResult>)(handle->LpVtbl[6]))(handle, pWindowHandle);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory5> comObj, ref nint pWindowHandle) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint*, HResult>)(handle->LpVtbl[6]))(handle, (nint*)ppWindowHandle);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory5> comObj, nint module, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, ppAdapter);
			return ret;
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory5> comObj, nint module, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory5> comObj, nint module, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory5> comObj, uint adapter, IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory5> comObj, uint adapter, ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory5> comObj, uint adapter, out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static Bool32 IsCurrent(this ComPtr<IDXGIFactory5> comObj) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Bool32>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		public static Bool32 IsWindowedStereoEnabled(this ComPtr<IDXGIFactory5> comObj) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Bool32>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory5> comObj, nint hResource, Luid* pLuid) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, pLuid);
			return ret;
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory5> comObj, nint hResource, ref Luid pLuid) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory5> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory5> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory5> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory5> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterStereoStatus(this ComPtr<IDXGIFactory5> comObj, uint dwCookie) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, void>)(handle->LpVtbl[17]))(handle, dwCookie);
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory5> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory5> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory5> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory5> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterOcclusionStatus(this ComPtr<IDXGIFactory5> comObj, uint dwCookie) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint, void>)(handle->LpVtbl[20]))(handle, dwCookie);
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory5> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static uint GetCreationFlags(this ComPtr<IDXGIFactory5> comObj) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, uint>)(handle->LpVtbl[22]))(handle);
			return ret;
		}

		public static HResult EnumAdapterByLuid(this ComPtr<IDXGIFactory5> comObj, Luid adapterLuid, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Luid, Guid*, void**, HResult>)(handle->LpVtbl[23]))(handle, adapterLuid, riid, ppvAdapter);
			return ret;
		}

		public static HResult EnumAdapterByLuid(this ComPtr<IDXGIFactory5> comObj, Luid adapterLuid, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Luid, Guid*, void**, HResult>)(handle->LpVtbl[23]))(handle, adapterLuid, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		public static HResult EnumWarpAdapter(this ComPtr<IDXGIFactory5> comObj, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(handle->LpVtbl[24]))(handle, riid, ppvAdapter);
			return ret;
		}

		public static HResult EnumWarpAdapter(this ComPtr<IDXGIFactory5> comObj, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, Guid*, void**, HResult>)(handle->LpVtbl[24]))(handle, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		public static HResult CheckFeatureSupport(this ComPtr<IDXGIFactory5> comObj, DxgiFeature feature, void* pFeatureSupportData, uint featureSupportDataSize) 
		{
			IDXGIFactory5* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory5*, DxgiFeature, void*, uint, HResult>)(handle->LpVtbl[25]))(handle, feature, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIAdapter4> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIAdapter4> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter4> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter4> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter4> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter4> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter4> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIAdapter4> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter4> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter4> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter4> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIAdapter4> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIAdapter4> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIAdapter4> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter4> comObj, uint output, IDXGIOutput** ppOutput) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, ppOutput);
			return ret;
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter4> comObj, uint output, ref IDXGIOutput* ppOutput) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (IDXGIOutput** pppOutput = &ppOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, (IDXGIOutput**)pppOutput);
				return ret;
			}
		}

		public static HResult EnumOutputs(this ComPtr<IDXGIAdapter4> comObj, uint output, out ComPtr<IDXGIOutput> ppOutput) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			ppOutput = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, IDXGIOutput**, HResult>)(handle->LpVtbl[4]))(handle, output, (IDXGIOutput**)ppOutput.GetAddressOf());
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIAdapter4> comObj, DxgiAdapterDesc* pDesc) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc*, HResult>)(handle->LpVtbl[5]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIAdapter4> comObj, ref DxgiAdapterDesc pDesc) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (DxgiAdapterDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc*, HResult>)(handle->LpVtbl[5]))(handle, (DxgiAdapterDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter4> comObj, Guid* interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, interfaceName, pUMDVersion);
			return ret;
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter4> comObj, ref Guid interfaceName, long* pUMDVersion) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pinterfaceName, pUMDVersion);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter4> comObj, Guid* interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (long* ppUMDVersion = &pUMDVersion)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, interfaceName, (long*)ppUMDVersion);
				return ret;
			}
		}

		public static HResult CheckInterfaceSupport(this ComPtr<IDXGIAdapter4> comObj, ref Guid interfaceName, ref long pUMDVersion) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (Guid* pinterfaceName = &interfaceName)
			{
				fixed (long* ppUMDVersion = &pUMDVersion)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, Guid*, long*, HResult>)(handle->LpVtbl[6]))(handle, (Guid*)pinterfaceName, (long*)ppUMDVersion);
					return ret;
				}
			}
		}

		public static HResult GetDesc1(this ComPtr<IDXGIAdapter4> comObj, DxgiAdapterDesc1* pDesc) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc1*, HResult>)(handle->LpVtbl[7]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc1(this ComPtr<IDXGIAdapter4> comObj, ref DxgiAdapterDesc1 pDesc) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (DxgiAdapterDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc1*, HResult>)(handle->LpVtbl[7]))(handle, (DxgiAdapterDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDesc2(this ComPtr<IDXGIAdapter4> comObj, DxgiAdapterDesc2* pDesc) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc2*, HResult>)(handle->LpVtbl[8]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc2(this ComPtr<IDXGIAdapter4> comObj, ref DxgiAdapterDesc2 pDesc) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (DxgiAdapterDesc2* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc2*, HResult>)(handle->LpVtbl[8]))(handle, (DxgiAdapterDesc2*)ppDesc);
				return ret;
			}
		}

		public static HResult RegisterHardwareContentProtectionTeardownStatusEvent(this ComPtr<IDXGIAdapter4> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, HResult>)(handle->LpVtbl[9]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterHardwareContentProtectionTeardownStatusEvent(this ComPtr<IDXGIAdapter4> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, HResult>)(handle->LpVtbl[9]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterHardwareContentProtectionTeardownStatus(this ComPtr<IDXGIAdapter4> comObj, uint dwCookie) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, void>)(handle->LpVtbl[10]))(handle, dwCookie);
		}

		public static HResult QueryVideoMemoryInfo(this ComPtr<IDXGIAdapter4> comObj, uint nodeIndex, DxgiMemorySegmentGroup memorySegmentGroup, DxgiQueryVideoMemoryInfo* pVideoMemoryInfo) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, DxgiMemorySegmentGroup, DxgiQueryVideoMemoryInfo*, HResult>)(handle->LpVtbl[11]))(handle, nodeIndex, memorySegmentGroup, pVideoMemoryInfo);
			return ret;
		}

		public static HResult QueryVideoMemoryInfo(this ComPtr<IDXGIAdapter4> comObj, uint nodeIndex, DxgiMemorySegmentGroup memorySegmentGroup, ref DxgiQueryVideoMemoryInfo pVideoMemoryInfo) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (DxgiQueryVideoMemoryInfo* ppVideoMemoryInfo = &pVideoMemoryInfo)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, DxgiMemorySegmentGroup, DxgiQueryVideoMemoryInfo*, HResult>)(handle->LpVtbl[11]))(handle, nodeIndex, memorySegmentGroup, (DxgiQueryVideoMemoryInfo*)ppVideoMemoryInfo);
				return ret;
			}
		}

		public static HResult SetVideoMemoryReservation(this ComPtr<IDXGIAdapter4> comObj, uint nodeIndex, DxgiMemorySegmentGroup memorySegmentGroup, ulong reservation) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, DxgiMemorySegmentGroup, ulong, HResult>)(handle->LpVtbl[12]))(handle, nodeIndex, memorySegmentGroup, reservation);
			return ret;
		}

		public static HResult RegisterVideoMemoryBudgetChangeNotificationEvent(this ComPtr<IDXGIAdapter4> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, HResult>)(handle->LpVtbl[13]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterVideoMemoryBudgetChangeNotificationEvent(this ComPtr<IDXGIAdapter4> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, nint, uint*, HResult>)(handle->LpVtbl[13]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterVideoMemoryBudgetChangeNotification(this ComPtr<IDXGIAdapter4> comObj, uint dwCookie) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, uint, void>)(handle->LpVtbl[14]))(handle, dwCookie);
		}

		public static HResult GetDesc3(this ComPtr<IDXGIAdapter4> comObj, DxgiAdapterDesc3* pDesc) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc3*, HResult>)(handle->LpVtbl[15]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc3(this ComPtr<IDXGIAdapter4> comObj, ref DxgiAdapterDesc3 pDesc) 
		{
			IDXGIAdapter4* handle = comObj.Handle;
			fixed (DxgiAdapterDesc3* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIAdapter4*, DxgiAdapterDesc3*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiAdapterDesc3*)ppDesc);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput6> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIOutput6> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput6> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput6> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput6> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput6> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput6> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIOutput6> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput6> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput6> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput6> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIOutput6> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput6> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIOutput6> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput6> comObj, DxgiOutputDesc* pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc(this ComPtr<IDXGIOutput6> comObj, ref DxgiOutputDesc pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiOutputDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc*, HResult>)(handle->LpVtbl[4]))(handle, (DxgiOutputDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc* pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc*, HResult>)(handle->LpVtbl[5]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc* pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc pModeToMatch, DxgiModeDesc* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc* pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, pModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc pModeToMatch, ref DxgiModeDesc pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc*, DxgiModeDesc*, IUnknown*, HResult>)(handle->LpVtbl[6]))(handle, (DxgiModeDesc*)ppModeToMatch, (DxgiModeDesc*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult WaitForVBlank(this ComPtr<IDXGIOutput6> comObj) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, HResult>)(handle->LpVtbl[7]))(handle);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput6> comObj, IUnknown* pDevice, Bool32 exclusive) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput6> comObj, ref IUnknown pDevice, Bool32 exclusive) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, (IUnknown*)ppDevice, exclusive);
				return ret;
			}
		}

		public static HResult TakeOwnership(this ComPtr<IDXGIOutput6> comObj, ComPtr<IUnknown> pDevice, Bool32 exclusive) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, Bool32, HResult>)(handle->LpVtbl[8]))(handle, pDevice, exclusive);
			return ret;
		}

		public static void ReleaseOwnership(this ComPtr<IDXGIOutput6> comObj) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIOutput6*, void>)(handle->LpVtbl[9]))(handle);
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput6> comObj, DxgiGammaControlCapabilities* pGammaCaps) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, pGammaCaps);
			return ret;
		}

		public static HResult GetGammaControlCapabilities(this ComPtr<IDXGIOutput6> comObj, ref DxgiGammaControlCapabilities pGammaCaps) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiGammaControlCapabilities* ppGammaCaps = &pGammaCaps)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControlCapabilities*, HResult>)(handle->LpVtbl[10]))(handle, (DxgiGammaControlCapabilities*)ppGammaCaps);
				return ret;
			}
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput6> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, pArray);
			return ret;
		}

		public static HResult SetGammaControl(this ComPtr<IDXGIOutput6> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, HResult>)(handle->LpVtbl[11]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput6> comObj, DxgiGammaControl* pArray) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, pArray);
			return ret;
		}

		public static HResult GetGammaControl(this ComPtr<IDXGIOutput6> comObj, ref DxgiGammaControl pArray) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiGammaControl* ppArray = &pArray)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiGammaControl*, HResult>)(handle->LpVtbl[12]))(handle, (DxgiGammaControl*)ppArray);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput6> comObj, IDXGISurface* pScanoutSurface) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput6> comObj, ref IDXGISurface pScanoutSurface) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IDXGISurface* ppScanoutSurface = &pScanoutSurface)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, (IDXGISurface*)ppScanoutSurface);
				return ret;
			}
		}

		public static HResult SetDisplaySurface(this ComPtr<IDXGIOutput6> comObj, ComPtr<IDXGISurface> pScanoutSurface) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(handle->LpVtbl[13]))(handle, pScanoutSurface);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput6> comObj, IDXGISurface* pDestination) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput6> comObj, ref IDXGISurface pDestination) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IDXGISurface* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, (IDXGISurface*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData(this ComPtr<IDXGIOutput6> comObj, ComPtr<IDXGISurface> pDestination) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGISurface*, HResult>)(handle->LpVtbl[14]))(handle, pDestination);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput6> comObj, DxgiFrameStatistics* pStats) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, pStats);
			return ret;
		}

		public static HResult GetFrameStatistics(this ComPtr<IDXGIOutput6> comObj, ref DxgiFrameStatistics pStats) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiFrameStatistics* ppStats = &pStats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFrameStatistics*, HResult>)(handle->LpVtbl[15]))(handle, (DxgiFrameStatistics*)ppStats);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, pDesc);
			return ret;
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, DxgiModeDesc1* pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, pDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, uint flags, uint* pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, pNumModes, (DxgiModeDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult GetDisplayModeList1(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, uint flags, ref uint pNumModes, ref DxgiModeDesc1 pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (uint* ppNumModes = &pNumModes)
			{
				fixed (DxgiModeDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, uint, uint*, DxgiModeDesc1*, HResult>)(handle->LpVtbl[16]))(handle, enumFormat, flags, (uint*)ppNumModes, (DxgiModeDesc1*)ppDesc);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, IUnknown* pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc1* pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, pClosestMatch, pConcernedDevice);
			return ret;
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc1 pModeToMatch, DxgiModeDesc1* pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, pClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, DxgiModeDesc1* pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, pModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
				return ret;
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ref IUnknown pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, (IUnknown*)ppConcernedDevice);
						return ret;
					}
				}
			}
		}

		public static HResult FindClosestMatchingMode1(this ComPtr<IDXGIOutput6> comObj, ref DxgiModeDesc1 pModeToMatch, ref DxgiModeDesc1 pClosestMatch, ComPtr<IUnknown> pConcernedDevice) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiModeDesc1* ppModeToMatch = &pModeToMatch)
			{
				fixed (DxgiModeDesc1* ppClosestMatch = &pClosestMatch)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiModeDesc1*, DxgiModeDesc1*, IUnknown*, HResult>)(handle->LpVtbl[17]))(handle, (DxgiModeDesc1*)ppModeToMatch, (DxgiModeDesc1*)ppClosestMatch, pConcernedDevice);
					return ret;
				}
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput6> comObj, IDXGIResource* pDestination) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput6> comObj, ref IDXGIResource pDestination) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IDXGIResource* ppDestination = &pDestination)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, (IDXGIResource*)ppDestination);
				return ret;
			}
		}

		public static HResult GetDisplaySurfaceData1(this ComPtr<IDXGIOutput6> comObj, ComPtr<IDXGIResource> pDestination) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IDXGIResource*, HResult>)(handle->LpVtbl[18]))(handle, pDestination);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput6> comObj, IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput6> comObj, ref IUnknown pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput6> comObj, ComPtr<IUnknown> pDevice, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput6> comObj, IUnknown* pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput6> comObj, IUnknown* pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput6> comObj, ref IUnknown pDevice, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, (IUnknown*)ppDevice, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput(this ComPtr<IDXGIOutput6> comObj, ComPtr<IUnknown> pDevice, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[19]))(handle, pDevice, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static Bool32 SupportsOverlays(this ComPtr<IDXGIOutput6> comObj) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, Bool32>)(handle->LpVtbl[20]))(handle);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		public static HResult CheckOverlaySupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat enumFormat, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, IUnknown*, uint*, HResult>)(handle->LpVtbl[21]))(handle, enumFormat, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, IUnknown* pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ref IUnknown pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, (IUnknown*)ppConcernedDevice, pFlags);
				return ret;
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ComPtr<IUnknown> pConcernedDevice, uint* pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, pFlags);
			return ret;
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, IUnknown* pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ref IUnknown pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppConcernedDevice = &pConcernedDevice)
			{
				fixed (uint* ppFlags = &pFlags)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, (IUnknown*)ppConcernedDevice, (uint*)ppFlags);
					return ret;
				}
			}
		}

		public static HResult CheckOverlayColorSpaceSupport(this ComPtr<IDXGIOutput6> comObj, DxgiFormat format, DxgiColorSpaceType colorSpace, ComPtr<IUnknown> pConcernedDevice, ref uint pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiFormat, DxgiColorSpaceType, IUnknown*, uint*, HResult>)(handle->LpVtbl[22]))(handle, format, colorSpace, pConcernedDevice, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, ref IUnknown pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, pSupportedFormats, ppOutputDuplication);
			return ret;
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, ref IUnknown pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, (IUnknown*)ppDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, ppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, ref IUnknown pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, (IUnknown*)ppDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, DxgiFormat* pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			ppOutputDuplication = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, pSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
			return ret;
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
					return ret;
				}
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, IUnknown* pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, ref IUnknown pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, ref IDXGIOutputDuplication* ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
				{
					fixed (IDXGIOutputDuplication** pppOutputDuplication = &ppOutputDuplication)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, (IUnknown*)ppDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)pppOutputDuplication);
						return ret;
					}
				}
			}
		}

		public static HResult DuplicateOutput1(this ComPtr<IDXGIOutput6> comObj, ComPtr<IUnknown> pDevice, uint flags, uint supportedFormatsCount, ref DxgiFormat pSupportedFormats, out ComPtr<IDXGIOutputDuplication> ppOutputDuplication) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiFormat* ppSupportedFormats = &pSupportedFormats)
			{
				ppOutputDuplication = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, IUnknown*, uint, uint, DxgiFormat*, IDXGIOutputDuplication**, HResult>)(handle->LpVtbl[23]))(handle, pDevice, flags, supportedFormatsCount, (DxgiFormat*)ppSupportedFormats, (IDXGIOutputDuplication**)ppOutputDuplication.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetDesc1(this ComPtr<IDXGIOutput6> comObj, DxgiOutputDesc1* pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc1*, HResult>)(handle->LpVtbl[24]))(handle, pDesc);
			return ret;
		}

		public static HResult GetDesc1(this ComPtr<IDXGIOutput6> comObj, ref DxgiOutputDesc1 pDesc) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (DxgiOutputDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, DxgiOutputDesc1*, HResult>)(handle->LpVtbl[24]))(handle, (DxgiOutputDesc1*)ppDesc);
				return ret;
			}
		}

		public static HResult CheckHardwareCompositionSupport(this ComPtr<IDXGIOutput6> comObj, uint* pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint*, HResult>)(handle->LpVtbl[25]))(handle, pFlags);
			return ret;
		}

		public static HResult CheckHardwareCompositionSupport(this ComPtr<IDXGIOutput6> comObj, ref uint pFlags) 
		{
			IDXGIOutput6* handle = comObj.Handle;
			fixed (uint* ppFlags = &pFlags)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIOutput6*, uint*, HResult>)(handle->LpVtbl[25]))(handle, (uint*)ppFlags);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory6> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory6> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory6> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory6> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory6> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory6> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory6> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory6> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory6> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory6> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory6> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory6> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory6> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory6> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory6> comObj, uint adapter, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory6> comObj, uint adapter, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory6> comObj, uint adapter, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult MakeWindowAssociation(this ComPtr<IDXGIFactory6> comObj, nint windowHandle, uint flags) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, HResult>)(handle->LpVtbl[5]))(handle, windowHandle, flags);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory6> comObj, nint* pWindowHandle) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint*, HResult>)(handle->LpVtbl[6]))(handle, pWindowHandle);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory6> comObj, ref nint pWindowHandle) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint*, HResult>)(handle->LpVtbl[6]))(handle, (nint*)ppWindowHandle);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory6> comObj, nint module, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, ppAdapter);
			return ret;
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory6> comObj, nint module, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory6> comObj, nint module, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory6> comObj, uint adapter, IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory6> comObj, uint adapter, ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory6> comObj, uint adapter, out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static Bool32 IsCurrent(this ComPtr<IDXGIFactory6> comObj) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Bool32>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		public static Bool32 IsWindowedStereoEnabled(this ComPtr<IDXGIFactory6> comObj) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Bool32>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory6> comObj, nint hResource, Luid* pLuid) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, pLuid);
			return ret;
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory6> comObj, nint hResource, ref Luid pLuid) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory6> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory6> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory6> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory6> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterStereoStatus(this ComPtr<IDXGIFactory6> comObj, uint dwCookie) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, void>)(handle->LpVtbl[17]))(handle, dwCookie);
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory6> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory6> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory6> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory6> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterOcclusionStatus(this ComPtr<IDXGIFactory6> comObj, uint dwCookie) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, void>)(handle->LpVtbl[20]))(handle, dwCookie);
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory6> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static uint GetCreationFlags(this ComPtr<IDXGIFactory6> comObj) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint>)(handle->LpVtbl[22]))(handle);
			return ret;
		}

		public static HResult EnumAdapterByLuid(this ComPtr<IDXGIFactory6> comObj, Luid adapterLuid, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Luid, Guid*, void**, HResult>)(handle->LpVtbl[23]))(handle, adapterLuid, riid, ppvAdapter);
			return ret;
		}

		public static HResult EnumAdapterByLuid(this ComPtr<IDXGIFactory6> comObj, Luid adapterLuid, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Luid, Guid*, void**, HResult>)(handle->LpVtbl[23]))(handle, adapterLuid, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		public static HResult EnumWarpAdapter(this ComPtr<IDXGIFactory6> comObj, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(handle->LpVtbl[24]))(handle, riid, ppvAdapter);
			return ret;
		}

		public static HResult EnumWarpAdapter(this ComPtr<IDXGIFactory6> comObj, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, Guid*, void**, HResult>)(handle->LpVtbl[24]))(handle, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		public static HResult CheckFeatureSupport(this ComPtr<IDXGIFactory6> comObj, DxgiFeature feature, void* pFeatureSupportData, uint featureSupportDataSize) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, DxgiFeature, void*, uint, HResult>)(handle->LpVtbl[25]))(handle, feature, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		public static HResult EnumAdapterByGpuPreference(this ComPtr<IDXGIFactory6> comObj, uint adapter, DxgiGpuPreference gpuPreference, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(handle->LpVtbl[26]))(handle, adapter, gpuPreference, riid, ppvAdapter);
			return ret;
		}

		public static HResult EnumAdapterByGpuPreference(this ComPtr<IDXGIFactory6> comObj, uint adapter, DxgiGpuPreference gpuPreference, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory6* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory6*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(handle->LpVtbl[26]))(handle, adapter, gpuPreference, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory7> comObj, Guid* name, uint dataSize, void* pData) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, name, dataSize, pData);
			return ret;
		}

		public static HResult SetPrivateData(this ComPtr<IDXGIFactory7> comObj, ref Guid name, uint dataSize, void* pData) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint, void*, HResult>)(*handle->LpVtbl))(handle, (Guid*)pname, dataSize, pData);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory7> comObj, Guid* name, IUnknown* pUnknown) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory7> comObj, ref Guid name, IUnknown* pUnknown) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory7> comObj, Guid* name, ref IUnknown pUnknown) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppUnknown = &pUnknown)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, (IUnknown*)ppUnknown);
				return ret;
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory7> comObj, Guid* name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, name, pUnknown);
			return ret;
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory7> comObj, ref Guid name, ref IUnknown pUnknown) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (IUnknown* ppUnknown = &pUnknown)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, (IUnknown*)ppUnknown);
					return ret;
				}
			}
		}

		public static HResult SetPrivateDataInterface(this ComPtr<IDXGIFactory7> comObj, ref Guid name, ComPtr<IUnknown> pUnknown) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, IUnknown*, HResult>)(handle->LpVtbl[1]))(handle, (Guid*)pname, pUnknown);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory7> comObj, Guid* name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, pDataSize, pData);
			return ret;
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory7> comObj, ref Guid name, uint* pDataSize, void* pData) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, pDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory7> comObj, Guid* name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppDataSize = &pDataSize)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, name, (uint*)ppDataSize, pData);
				return ret;
			}
		}

		public static HResult GetPrivateData(this ComPtr<IDXGIFactory7> comObj, ref Guid name, ref uint pDataSize, void* pData) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* pname = &name)
			{
				fixed (uint* ppDataSize = &pDataSize)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, uint*, void*, HResult>)(handle->LpVtbl[2]))(handle, (Guid*)pname, (uint*)ppDataSize, pData);
					return ret;
				}
			}
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory7> comObj, Guid* riid, void** ppParent) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, riid, ppParent);
			return ret;
		}

		public static HResult GetParent(this ComPtr<IDXGIFactory7> comObj, ref Guid riid, void** ppParent) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(handle->LpVtbl[3]))(handle, (Guid*)priid, ppParent);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory7> comObj, uint adapter, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory7> comObj, uint adapter, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters(this ComPtr<IDXGIFactory7> comObj, uint adapter, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter**, HResult>)(handle->LpVtbl[4]))(handle, adapter, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult MakeWindowAssociation(this ComPtr<IDXGIFactory7> comObj, nint windowHandle, uint flags) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, HResult>)(handle->LpVtbl[5]))(handle, windowHandle, flags);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory7> comObj, nint* pWindowHandle) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint*, HResult>)(handle->LpVtbl[6]))(handle, pWindowHandle);
			return ret;
		}

		public static HResult GetWindowAssociation(this ComPtr<IDXGIFactory7> comObj, ref nint pWindowHandle) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (nint* ppWindowHandle = &pWindowHandle)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint*, HResult>)(handle->LpVtbl[6]))(handle, (nint*)ppWindowHandle);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, IDXGISwapChain** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, DxgiSwapChainDesc* pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc* pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, pDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc pDesc, ref IDXGISwapChain* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChain(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc pDesc, out ComPtr<IDXGISwapChain> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc*, IDXGISwapChain**, HResult>)(handle->LpVtbl[7]))(handle, pDevice, (DxgiSwapChainDesc*)ppDesc, (IDXGISwapChain**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory7> comObj, nint module, IDXGIAdapter** ppAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, ppAdapter);
			return ret;
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory7> comObj, nint module, ref IDXGIAdapter* ppAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIAdapter** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)pppAdapter);
				return ret;
			}
		}

		public static HResult CreateSoftwareAdapter(this ComPtr<IDXGIFactory7> comObj, nint module, out ComPtr<IDXGIAdapter> ppAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, IDXGIAdapter**, HResult>)(handle->LpVtbl[8]))(handle, module, (IDXGIAdapter**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory7> comObj, uint adapter, IDXGIAdapter1** ppAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, ppAdapter);
			return ret;
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory7> comObj, uint adapter, ref IDXGIAdapter1* ppAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIAdapter1** pppAdapter = &ppAdapter)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)pppAdapter);
				return ret;
			}
		}

		public static HResult EnumAdapters1(this ComPtr<IDXGIFactory7> comObj, uint adapter, out ComPtr<IDXGIAdapter1> ppAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppAdapter = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, IDXGIAdapter1**, HResult>)(handle->LpVtbl[9]))(handle, adapter, (IDXGIAdapter1**)ppAdapter.GetAddressOf());
			return ret;
		}

		public static Bool32 IsCurrent(this ComPtr<IDXGIFactory7> comObj) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Bool32>)(handle->LpVtbl[10]))(handle);
			return ret;
		}

		public static Bool32 IsWindowedStereoEnabled(this ComPtr<IDXGIFactory7> comObj) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			Bool32 ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Bool32>)(handle->LpVtbl[11]))(handle);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, DxgiSwapChainFullscreenDesc* pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, pFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, DxgiSwapChainDesc1* pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, pDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, (IUnknown*)ppDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForHwnd(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, nint hWnd, ref DxgiSwapChainDesc1 pDesc, ref DxgiSwapChainFullscreenDesc pFullscreenDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (DxgiSwapChainFullscreenDesc* ppFullscreenDesc = &pFullscreenDesc)
				{
					ppSwapChain = default;
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, nint, DxgiSwapChainDesc1*, DxgiSwapChainFullscreenDesc*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[12]))(handle, pDevice, hWnd, (DxgiSwapChainDesc1*)ppDesc, (DxgiSwapChainFullscreenDesc*)ppFullscreenDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, IUnknown* pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppWindow = &pWindow)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref IUnknown pWindow, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IUnknown* ppWindow = &pWindow)
				{
					fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
					{
						fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
						{
							fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, (IUnknown*)ppDevice, (IUnknown*)ppWindow, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
								return ret;
							}
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForCoreWindow(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ComPtr<IUnknown> pWindow, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[13]))(handle, pDevice, pWindow, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory7> comObj, nint hResource, Luid* pLuid) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, pLuid);
			return ret;
		}

		public static HResult GetSharedResourceAdapterLuid(this ComPtr<IDXGIFactory7> comObj, nint hResource, ref Luid pLuid) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Luid* ppLuid = &pLuid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, Luid*, HResult>)(handle->LpVtbl[14]))(handle, hResource, (Luid*)ppLuid);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory7> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusWindow(this ComPtr<IDXGIFactory7> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, HResult>)(handle->LpVtbl[15]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterStereoStatusEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(handle->LpVtbl[16]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterStereoStatus(this ComPtr<IDXGIFactory7> comObj, uint dwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, void>)(handle->LpVtbl[17]))(handle, dwCookie);
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory7> comObj, nint windowHandle, uint wMsg, uint* pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusWindow(this ComPtr<IDXGIFactory7> comObj, nint windowHandle, uint wMsg, ref uint pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint, uint*, HResult>)(handle->LpVtbl[18]))(handle, windowHandle, wMsg, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterOcclusionStatusEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(handle->LpVtbl[19]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static void UnregisterOcclusionStatus(this ComPtr<IDXGIFactory7> comObj, uint dwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, void>)(handle->LpVtbl[20]))(handle, dwCookie);
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, ppSwapChain);
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, ppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, IDXGISwapChain1** ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, ppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, IDXGIOutput* pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
			{
				fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
					return ret;
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, DxgiSwapChainDesc1* pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, pDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, DxgiSwapChainDesc1* pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			ppSwapChain = default;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, pDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
			return ret;
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
				{
					fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
						return ret;
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, IUnknown* pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ref IUnknown pDevice, ref DxgiSwapChainDesc1 pDesc, ref IDXGIOutput pRestrictToOutput, ref IDXGISwapChain1* ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (IUnknown* ppDevice = &pDevice)
			{
				fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
				{
					fixed (IDXGIOutput* ppRestrictToOutput = &pRestrictToOutput)
					{
						fixed (IDXGISwapChain1** pppSwapChain = &ppSwapChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, (IUnknown*)ppDevice, (DxgiSwapChainDesc1*)ppDesc, (IDXGIOutput*)ppRestrictToOutput, (IDXGISwapChain1**)pppSwapChain);
							return ret;
						}
					}
				}
			}
		}

		public static HResult CreateSwapChainForComposition(this ComPtr<IDXGIFactory7> comObj, ComPtr<IUnknown> pDevice, ref DxgiSwapChainDesc1 pDesc, ComPtr<IDXGIOutput> pRestrictToOutput, out ComPtr<IDXGISwapChain1> ppSwapChain) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (DxgiSwapChainDesc1* ppDesc = &pDesc)
			{
				ppSwapChain = default;
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, IUnknown*, DxgiSwapChainDesc1*, IDXGIOutput*, IDXGISwapChain1**, HResult>)(handle->LpVtbl[21]))(handle, pDevice, (DxgiSwapChainDesc1*)ppDesc, pRestrictToOutput, (IDXGISwapChain1**)ppSwapChain.GetAddressOf());
				return ret;
			}
		}

		public static uint GetCreationFlags(this ComPtr<IDXGIFactory7> comObj) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			uint ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint>)(handle->LpVtbl[22]))(handle);
			return ret;
		}

		public static HResult EnumAdapterByLuid(this ComPtr<IDXGIFactory7> comObj, Luid adapterLuid, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Luid, Guid*, void**, HResult>)(handle->LpVtbl[23]))(handle, adapterLuid, riid, ppvAdapter);
			return ret;
		}

		public static HResult EnumAdapterByLuid(this ComPtr<IDXGIFactory7> comObj, Luid adapterLuid, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Luid, Guid*, void**, HResult>)(handle->LpVtbl[23]))(handle, adapterLuid, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		public static HResult EnumWarpAdapter(this ComPtr<IDXGIFactory7> comObj, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(handle->LpVtbl[24]))(handle, riid, ppvAdapter);
			return ret;
		}

		public static HResult EnumWarpAdapter(this ComPtr<IDXGIFactory7> comObj, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, Guid*, void**, HResult>)(handle->LpVtbl[24]))(handle, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		public static HResult CheckFeatureSupport(this ComPtr<IDXGIFactory7> comObj, DxgiFeature feature, void* pFeatureSupportData, uint featureSupportDataSize) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, DxgiFeature, void*, uint, HResult>)(handle->LpVtbl[25]))(handle, feature, pFeatureSupportData, featureSupportDataSize);
			return ret;
		}

		public static HResult EnumAdapterByGpuPreference(this ComPtr<IDXGIFactory7> comObj, uint adapter, DxgiGpuPreference gpuPreference, Guid* riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(handle->LpVtbl[26]))(handle, adapter, gpuPreference, riid, ppvAdapter);
			return ret;
		}

		public static HResult EnumAdapterByGpuPreference(this ComPtr<IDXGIFactory7> comObj, uint adapter, DxgiGpuPreference gpuPreference, ref Guid riid, void** ppvAdapter) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, DxgiGpuPreference, Guid*, void**, HResult>)(handle->LpVtbl[26]))(handle, adapter, gpuPreference, (Guid*)priid, ppvAdapter);
				return ret;
			}
		}

		public static HResult RegisterAdaptersChangedEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, uint* pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(handle->LpVtbl[27]))(handle, hEvent, pdwCookie);
			return ret;
		}

		public static HResult RegisterAdaptersChangedEvent(this ComPtr<IDXGIFactory7> comObj, nint hEvent, ref uint pdwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			fixed (uint* ppdwCookie = &pdwCookie)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, nint, uint*, HResult>)(handle->LpVtbl[27]))(handle, hEvent, (uint*)ppdwCookie);
				return ret;
			}
		}

		public static HResult UnregisterAdaptersChangedEvent(this ComPtr<IDXGIFactory7> comObj, uint dwCookie) 
		{
			IDXGIFactory7* handle = comObj.Handle;
			HResult ret = ((delegate* unmanaged[Stdcall]<IDXGIFactory7*, uint, HResult>)(handle->LpVtbl[28]))(handle, dwCookie);
			return ret;
		}

	}
}
