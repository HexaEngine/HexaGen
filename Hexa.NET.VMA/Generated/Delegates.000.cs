// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using Hexa.NET.Vulkan;

namespace Hexa.NET.VMA
{
	/// <summary>
	/// Optional, can be null.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "pfnAllocate")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void PfnAllocate();

	/// <summary>
	/// Optional, can be null.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "pfnFree")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void PfnFree();

	/// <summary>
	/// Required when using VMA_DYNAMIC_VULKAN_FUNCTIONS.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "vkGetInstanceProcAddr")]
	[return: NativeName(NativeNameType.Type, "PFN_vkVoidFunction")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate delegate*<void> VkGetInstanceProcAddr([NativeName(NativeNameType.Param, "instance")] [NativeName(NativeNameType.Type, "VkInstance")] VkInstance instance, [NativeName(NativeNameType.Param, "pName")] [NativeName(NativeNameType.Type, "const char*")] byte* pName);

	/// <summary>
	/// Required when using VMA_DYNAMIC_VULKAN_FUNCTIONS.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "vkGetDeviceProcAddr")]
	[return: NativeName(NativeNameType.Type, "PFN_vkVoidFunction")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate delegate*<void> VkGetDeviceProcAddr([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "pName")] [NativeName(NativeNameType.Type, "const char*")] byte* pName);

	[NativeName(NativeNameType.Delegate, "vkGetPhysicalDeviceProperties")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkGetPhysicalDeviceProperties([NativeName(NativeNameType.Param, "physicalDevice")] [NativeName(NativeNameType.Type, "VkPhysicalDevice")] VkPhysicalDevice physicalDevice, [NativeName(NativeNameType.Param, "pProperties")] [NativeName(NativeNameType.Type, "VkPhysicalDeviceProperties*")] VkPhysicalDeviceProperties* pProperties);

	[NativeName(NativeNameType.Delegate, "vkGetPhysicalDeviceMemoryProperties")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkGetPhysicalDeviceMemoryProperties([NativeName(NativeNameType.Param, "physicalDevice")] [NativeName(NativeNameType.Type, "VkPhysicalDevice")] VkPhysicalDevice physicalDevice, [NativeName(NativeNameType.Param, "pMemoryProperties")] [NativeName(NativeNameType.Type, "VkPhysicalDeviceMemoryProperties*")] VkPhysicalDeviceMemoryProperties* pMemoryProperties);

	[NativeName(NativeNameType.Delegate, "vkAllocateMemory")]
	[return: NativeName(NativeNameType.Type, "VkResult")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate VkResult VkAllocateMemory([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "pAllocateInfo")] [NativeName(NativeNameType.Type, "const VkMemoryAllocateInfo*")] VkMemoryAllocateInfo* pAllocateInfo, [NativeName(NativeNameType.Param, "pAllocator")] [NativeName(NativeNameType.Type, "const VkAllocationCallbacks*")] VkAllocationCallbacks* pAllocator, [NativeName(NativeNameType.Param, "pMemory")] [NativeName(NativeNameType.Type, "VkDeviceMemory*")] VkDeviceMemory* pMemory);

	[NativeName(NativeNameType.Delegate, "vkFreeMemory")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkFreeMemory([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "memory")] [NativeName(NativeNameType.Type, "VkDeviceMemory")] VkDeviceMemory memory, [NativeName(NativeNameType.Param, "pAllocator")] [NativeName(NativeNameType.Type, "const VkAllocationCallbacks*")] VkAllocationCallbacks* pAllocator);

	[NativeName(NativeNameType.Delegate, "vkMapMemory")]
	[return: NativeName(NativeNameType.Type, "VkResult")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate VkResult VkMapMemory([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "memory")] [NativeName(NativeNameType.Type, "VkDeviceMemory")] VkDeviceMemory memory, [NativeName(NativeNameType.Param, "offset")] [NativeName(NativeNameType.Type, "VkDeviceSize")] ulong offset, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "VkDeviceSize")] ulong size, [NativeName(NativeNameType.Param, "flags")] [NativeName(NativeNameType.Type, "VkMemoryMapFlags")] uint flags, [NativeName(NativeNameType.Param, "ppData")] [NativeName(NativeNameType.Type, "void**")] void** ppData);

	[NativeName(NativeNameType.Delegate, "vkUnmapMemory")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkUnmapMemory([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "memory")] [NativeName(NativeNameType.Type, "VkDeviceMemory")] VkDeviceMemory memory);

	[NativeName(NativeNameType.Delegate, "vkFlushMappedMemoryRanges")]
	[return: NativeName(NativeNameType.Type, "VkResult")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate VkResult VkFlushMappedMemoryRanges([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "memoryRangeCount")] [NativeName(NativeNameType.Type, "uint32_t")] uint memoryRangeCount, [NativeName(NativeNameType.Param, "pMemoryRanges")] [NativeName(NativeNameType.Type, "const VkMappedMemoryRange*")] VkMappedMemoryRange* pMemoryRanges);

	[NativeName(NativeNameType.Delegate, "vkInvalidateMappedMemoryRanges")]
	[return: NativeName(NativeNameType.Type, "VkResult")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate VkResult VkInvalidateMappedMemoryRanges([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "memoryRangeCount")] [NativeName(NativeNameType.Type, "uint32_t")] uint memoryRangeCount, [NativeName(NativeNameType.Param, "pMemoryRanges")] [NativeName(NativeNameType.Type, "const VkMappedMemoryRange*")] VkMappedMemoryRange* pMemoryRanges);

	[NativeName(NativeNameType.Delegate, "vkBindBufferMemory")]
	[return: NativeName(NativeNameType.Type, "VkResult")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate VkResult VkBindBufferMemory([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "VkBuffer")] VkBuffer buffer, [NativeName(NativeNameType.Param, "memory")] [NativeName(NativeNameType.Type, "VkDeviceMemory")] VkDeviceMemory memory, [NativeName(NativeNameType.Param, "memoryOffset")] [NativeName(NativeNameType.Type, "VkDeviceSize")] ulong memoryOffset);

	[NativeName(NativeNameType.Delegate, "vkBindImageMemory")]
	[return: NativeName(NativeNameType.Type, "VkResult")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate VkResult VkBindImageMemory([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "VkImage")] VkImage image, [NativeName(NativeNameType.Param, "memory")] [NativeName(NativeNameType.Type, "VkDeviceMemory")] VkDeviceMemory memory, [NativeName(NativeNameType.Param, "memoryOffset")] [NativeName(NativeNameType.Type, "VkDeviceSize")] ulong memoryOffset);

	[NativeName(NativeNameType.Delegate, "vkGetBufferMemoryRequirements")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkGetBufferMemoryRequirements([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "VkBuffer")] VkBuffer buffer, [NativeName(NativeNameType.Param, "pMemoryRequirements")] [NativeName(NativeNameType.Type, "VkMemoryRequirements*")] VkMemoryRequirements* pMemoryRequirements);

	[NativeName(NativeNameType.Delegate, "vkGetImageMemoryRequirements")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkGetImageMemoryRequirements([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "VkImage")] VkImage image, [NativeName(NativeNameType.Param, "pMemoryRequirements")] [NativeName(NativeNameType.Type, "VkMemoryRequirements*")] VkMemoryRequirements* pMemoryRequirements);

	[NativeName(NativeNameType.Delegate, "vkCreateBuffer")]
	[return: NativeName(NativeNameType.Type, "VkResult")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate VkResult VkCreateBuffer([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "pCreateInfo")] [NativeName(NativeNameType.Type, "const VkBufferCreateInfo*")] VkBufferCreateInfo* pCreateInfo, [NativeName(NativeNameType.Param, "pAllocator")] [NativeName(NativeNameType.Type, "const VkAllocationCallbacks*")] VkAllocationCallbacks* pAllocator, [NativeName(NativeNameType.Param, "pBuffer")] [NativeName(NativeNameType.Type, "VkBuffer*")] VkBuffer* pBuffer);

	[NativeName(NativeNameType.Delegate, "vkDestroyBuffer")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkDestroyBuffer([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "buffer")] [NativeName(NativeNameType.Type, "VkBuffer")] VkBuffer buffer, [NativeName(NativeNameType.Param, "pAllocator")] [NativeName(NativeNameType.Type, "const VkAllocationCallbacks*")] VkAllocationCallbacks* pAllocator);

	[NativeName(NativeNameType.Delegate, "vkCreateImage")]
	[return: NativeName(NativeNameType.Type, "VkResult")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate VkResult VkCreateImage([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "pCreateInfo")] [NativeName(NativeNameType.Type, "const VkImageCreateInfo*")] VkImageCreateInfo* pCreateInfo, [NativeName(NativeNameType.Param, "pAllocator")] [NativeName(NativeNameType.Type, "const VkAllocationCallbacks*")] VkAllocationCallbacks* pAllocator, [NativeName(NativeNameType.Param, "pImage")] [NativeName(NativeNameType.Type, "VkImage*")] VkImage* pImage);

	[NativeName(NativeNameType.Delegate, "vkDestroyImage")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkDestroyImage([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "image")] [NativeName(NativeNameType.Type, "VkImage")] VkImage image, [NativeName(NativeNameType.Param, "pAllocator")] [NativeName(NativeNameType.Type, "const VkAllocationCallbacks*")] VkAllocationCallbacks* pAllocator);

	[NativeName(NativeNameType.Delegate, "vkCmdCopyBuffer")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkCmdCopyBuffer([NativeName(NativeNameType.Param, "commandBuffer")] [NativeName(NativeNameType.Type, "VkCommandBuffer")] VkCommandBuffer commandBuffer, [NativeName(NativeNameType.Param, "srcBuffer")] [NativeName(NativeNameType.Type, "VkBuffer")] VkBuffer srcBuffer, [NativeName(NativeNameType.Param, "dstBuffer")] [NativeName(NativeNameType.Type, "VkBuffer")] VkBuffer dstBuffer, [NativeName(NativeNameType.Param, "regionCount")] [NativeName(NativeNameType.Type, "uint32_t")] uint regionCount, [NativeName(NativeNameType.Param, "pRegions")] [NativeName(NativeNameType.Type, "const VkBufferCopy*")] VkBufferCopy* pRegions);

	/// <summary>
	/// Fetch "vkGetBufferMemoryRequirements2" on Vulkan >= 1.1, fetch "vkGetBufferMemoryRequirements2KHR" when using VK_KHR_dedicated_allocation extension.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "vkGetBufferMemoryRequirements2KHR")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkGetBufferMemoryRequirements2Khr([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "pInfo")] [NativeName(NativeNameType.Type, "const VkBufferMemoryRequirementsInfo2*")] VkBufferMemoryRequirementsInfo2* pInfo, [NativeName(NativeNameType.Param, "pMemoryRequirements")] [NativeName(NativeNameType.Type, "VkMemoryRequirements2*")] VkMemoryRequirements2* pMemoryRequirements);

	/// <summary>
	/// Fetch "vkGetImageMemoryRequirements2" on Vulkan >= 1.1, fetch "vkGetImageMemoryRequirements2KHR" when using VK_KHR_dedicated_allocation extension.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "vkGetImageMemoryRequirements2KHR")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkGetImageMemoryRequirements2Khr([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "pInfo")] [NativeName(NativeNameType.Type, "const VkImageMemoryRequirementsInfo2*")] VkImageMemoryRequirementsInfo2* pInfo, [NativeName(NativeNameType.Param, "pMemoryRequirements")] [NativeName(NativeNameType.Type, "VkMemoryRequirements2*")] VkMemoryRequirements2* pMemoryRequirements);

	/// <summary>
	/// Fetch "vkBindBufferMemory2" on Vulkan >= 1.1, fetch "vkBindBufferMemory2KHR" when using VK_KHR_bind_memory2 extension.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "vkBindBufferMemory2KHR")]
	[return: NativeName(NativeNameType.Type, "VkResult")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate VkResult VkBindBufferMemory2Khr([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "bindInfoCount")] [NativeName(NativeNameType.Type, "uint32_t")] uint bindInfoCount, [NativeName(NativeNameType.Param, "pBindInfos")] [NativeName(NativeNameType.Type, "const VkBindBufferMemoryInfo*")] VkBindBufferMemoryInfo* pBindInfos);

	/// <summary>
	/// Fetch "vkBindImageMemory2" on Vulkan >= 1.1, fetch "vkBindImageMemory2KHR" when using VK_KHR_bind_memory2 extension.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "vkBindImageMemory2KHR")]
	[return: NativeName(NativeNameType.Type, "VkResult")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate VkResult VkBindImageMemory2Khr([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "bindInfoCount")] [NativeName(NativeNameType.Type, "uint32_t")] uint bindInfoCount, [NativeName(NativeNameType.Param, "pBindInfos")] [NativeName(NativeNameType.Type, "const VkBindImageMemoryInfo*")] VkBindImageMemoryInfo* pBindInfos);

	/// <summary>
	/// Fetch from "vkGetPhysicalDeviceMemoryProperties2" on Vulkan >= 1.1, but you can also fetch it from "vkGetPhysicalDeviceMemoryProperties2KHR" if you enabled extension VK_KHR_get_physical_device_properties2.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "vkGetPhysicalDeviceMemoryProperties2KHR")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkGetPhysicalDeviceMemoryProperties2Khr([NativeName(NativeNameType.Param, "physicalDevice")] [NativeName(NativeNameType.Type, "VkPhysicalDevice")] VkPhysicalDevice physicalDevice, [NativeName(NativeNameType.Param, "pMemoryProperties")] [NativeName(NativeNameType.Type, "VkPhysicalDeviceMemoryProperties2*")] VkPhysicalDeviceMemoryProperties2* pMemoryProperties);

	/// <summary>
	/// Fetch from "vkGetDeviceBufferMemoryRequirements" on Vulkan >= 1.3, but you can also fetch it from "vkGetDeviceBufferMemoryRequirementsKHR" if you enabled extension VK_KHR_maintenance4.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "vkGetDeviceBufferMemoryRequirements")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkGetDeviceBufferMemoryRequirements([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "pInfo")] [NativeName(NativeNameType.Type, "const VkDeviceBufferMemoryRequirements*")] VkDeviceBufferMemoryRequirements* pInfo, [NativeName(NativeNameType.Param, "pMemoryRequirements")] [NativeName(NativeNameType.Type, "VkMemoryRequirements2*")] VkMemoryRequirements2* pMemoryRequirements);

	/// <summary>
	/// Fetch from "vkGetDeviceImageMemoryRequirements" on Vulkan >= 1.3, but you can also fetch it from "vkGetDeviceImageMemoryRequirementsKHR" if you enabled extension VK_KHR_maintenance4.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "vkGetDeviceImageMemoryRequirements")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void VkGetDeviceImageMemoryRequirements([NativeName(NativeNameType.Param, "device")] [NativeName(NativeNameType.Type, "VkDevice")] VkDevice device, [NativeName(NativeNameType.Param, "pInfo")] [NativeName(NativeNameType.Type, "const VkDeviceImageMemoryRequirements*")] VkDeviceImageMemoryRequirements* pInfo, [NativeName(NativeNameType.Param, "pMemoryRequirements")] [NativeName(NativeNameType.Type, "VkMemoryRequirements2*")] VkMemoryRequirements2* pMemoryRequirements);

	/// <summary>
	/// <br/>
	/// Have to return true for breaking current defragmentation pass.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "pfnBreakCallback")]
	[return: NativeName(NativeNameType.Type, "unsigned int")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate uint PfnBreakCallback();

	/// <summary>
	/// Callback function called after successful vkAllocateMemory.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "PFN_vmaAllocateDeviceMemoryFunction")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void PfnVmaallocatedevicememoryfunction([NativeName(NativeNameType.Param, "allocator")] [NativeName(NativeNameType.Type, "VmaAllocator")] VmaAllocator allocator, [NativeName(NativeNameType.Param, "memoryType")] [NativeName(NativeNameType.Type, "uint32_t")] uint memoryType, [NativeName(NativeNameType.Param, "memory")] [NativeName(NativeNameType.Type, "VkDeviceMemory")] VkDeviceMemory memory, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "VkDeviceSize")] ulong size, [NativeName(NativeNameType.Param, "pUserData")] [NativeName(NativeNameType.Type, "void*")] void* pUserData);

	/// <summary>
	/// Callback function called before vkFreeMemory.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "PFN_vmaFreeDeviceMemoryFunction")]
	[return: NativeName(NativeNameType.Type, "void")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate void PfnVmafreedevicememoryfunction([NativeName(NativeNameType.Param, "allocator")] [NativeName(NativeNameType.Type, "VmaAllocator")] VmaAllocator allocator, [NativeName(NativeNameType.Param, "memoryType")] [NativeName(NativeNameType.Type, "uint32_t")] uint memoryType, [NativeName(NativeNameType.Param, "memory")] [NativeName(NativeNameType.Type, "VkDeviceMemory")] VkDeviceMemory memory, [NativeName(NativeNameType.Param, "size")] [NativeName(NativeNameType.Type, "VkDeviceSize")] ulong size, [NativeName(NativeNameType.Param, "pUserData")] [NativeName(NativeNameType.Type, "void*")] void* pUserData);

	/// <summary>
	/// Callback function called during vmaBeginDefragmentation() to check custom criterion about ending current defragmentation pass.<br/>
	/// Should return true if the defragmentation needs to stop current pass.<br/>
	/// </summary>
	[NativeName(NativeNameType.Delegate, "PFN_vmaCheckDefragmentationBreakFunction")]
	[return: NativeName(NativeNameType.Type, "VkBool32")]
	[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
	public unsafe delegate uint PfnVmacheckdefragmentationbreakfunction([NativeName(NativeNameType.Param, "pUserData")] [NativeName(NativeNameType.Type, "void*")] void* pUserData);

}
