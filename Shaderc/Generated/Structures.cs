// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace HexaEngine.Shaderc
{
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ShadercCompiler
	{


	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ShadercCompileOptions
	{


	}

	/// <summary>
	/// An include result.
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ShadercIncludeResult
	{
		/// <summary>
		/// The name of the source file.  The name should be fully resolved
		/// in the sense that it should be a unique name in the context of the
		/// includer.  For example, if the includer maps source names to files in
		/// a filesystem, then this name should be the absolute path of the file.
		/// For a failed inclusion, this string is empty.
		/// </summary>
		public unsafe byte* SourceName;

		public nuint SourceNameLength;
		/// <summary>
		/// The text contents of the source file in the normal case.
		/// For a failed inclusion, this contains the error message.
		/// </summary>
		public unsafe byte* Content;

		public nuint ContentLength;
		/// <summary>
		/// User data to be passed along with this request.
		/// </summary>
		public unsafe void* UserData;



	}

	[StructLayout(LayoutKind.Sequential)]
	public partial struct ShadercCompilationResult
	{


	}

}
