// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;

namespace HexaEngine.XAudio2
{
	public unsafe partial class XAudio2
	{
		internal const string LibName = "xaudio2_9.dll";

		[NativeName("XAudio2CreateWithVersionInfo")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "XAudio2CreateWithVersionInfo")]
		internal static extern HResult XAudio2CreateWithVersionInfoNative(IXAudio2** ppXAudio2, uint flags, uint xAudio2Processor, uint ntddiVersion);

		public static HResult XAudio2CreateWithVersionInfo(IXAudio2** ppXAudio2, uint flags, uint xAudio2Processor, uint ntddiVersion)
		{
			HResult ret = XAudio2CreateWithVersionInfoNative(ppXAudio2, flags, xAudio2Processor, ntddiVersion);
			return ret;
		}

		public static HResult XAudio2CreateWithVersionInfo(ref IXAudio2* ppXAudio2, uint flags, uint xAudio2Processor, uint ntddiVersion)
		{
			fixed (IXAudio2** pppXAudio2 = &ppXAudio2)
			{
				HResult ret = XAudio2CreateWithVersionInfoNative((IXAudio2**)pppXAudio2, flags, xAudio2Processor, ntddiVersion);
				return ret;
			}
		}

		[NativeName("CreateAudioVolumeMeter")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "CreateAudioVolumeMeter")]
		internal static extern HResult CreateAudioVolumeMeterNative(IUnknown** ppApo);

		public static HResult CreateAudioVolumeMeter(IUnknown** ppApo)
		{
			HResult ret = CreateAudioVolumeMeterNative(ppApo);
			return ret;
		}

		public static HResult CreateAudioVolumeMeter(ref IUnknown* ppApo)
		{
			fixed (IUnknown** pppApo = &ppApo)
			{
				HResult ret = CreateAudioVolumeMeterNative((IUnknown**)pppApo);
				return ret;
			}
		}

		[NativeName("CreateAudioReverb")]
		[DllImport(LibName, CallingConvention = CallingConvention.Cdecl, EntryPoint = "CreateAudioReverb")]
		internal static extern HResult CreateAudioReverbNative(IUnknown** ppApo);

		public static HResult CreateAudioReverb(IUnknown** ppApo)
		{
			HResult ret = CreateAudioReverbNative(ppApo);
			return ret;
		}

		public static HResult CreateAudioReverb(ref IUnknown* ppApo)
		{
			fixed (IUnknown** pppApo = &ppApo)
			{
				HResult ret = CreateAudioReverbNative((IUnknown**)pppApo);
				return ret;
			}
		}

	}
}
