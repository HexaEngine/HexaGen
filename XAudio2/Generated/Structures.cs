// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using HexaGen.Runtime.COM;

namespace HexaEngine.XAudio2
{
	/// <summary>
	/// XAudio 2.9<br/>
	/// </summary>
	[Guid("2b02e3cf-2e0b-4ec3-be45-1b2a3fe7210d")]
	[NativeName(NativeNameType.StructOrClass, "IXAudio2")]
	public partial struct IXAudio2 : IComObject, IComObject<IXAudio2>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("2b02e3cf-2e0b-4ec3-be45-1b2a3fe7210d");

		public unsafe IXAudio2 (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] Guid* riid, [NativeName(NativeNameType.Param, "ppvInterface")] [NativeName(NativeNameType.Type, "void**")] void** ppvInterface)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, riid, ppvInterface);
			return ret;
		}

		[NativeName(NativeNameType.Func, "QueryInterface")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult QueryInterface([NativeName(NativeNameType.Param, "riid")] [NativeName(NativeNameType.Type, "const IID&")] ref Guid riid, [NativeName(NativeNameType.Param, "ppvInterface")] [NativeName(NativeNameType.Type, "void**")] void** ppvInterface)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (Guid* priid = &riid)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, Guid*, void**, HResult>)(*LpVtbl))(ptr, (Guid*)priid, ppvInterface);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "AddRef")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint AddRef()
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, uint>)(LpVtbl[1]))(ptr);
			return ret;
		}

		[NativeName(NativeNameType.Func, "Release")]
		[return: NativeName(NativeNameType.Type, "ULONG")]
		public readonly unsafe uint Release()
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			uint ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, uint>)(LpVtbl[2]))(ptr);
			return ret;
		}

		[NativeName(NativeNameType.Func, "RegisterForCallbacks")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterForCallbacks([NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2EngineCallback*")] IXAudio2EngineCallback* pCallback)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2EngineCallback*, HResult>)(LpVtbl[3]))(ptr, pCallback);
			return ret;
		}

		[NativeName(NativeNameType.Func, "RegisterForCallbacks")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult RegisterForCallbacks([NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2EngineCallback*")] ref IXAudio2EngineCallback pCallback)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2EngineCallback* ppCallback = &pCallback)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2EngineCallback*, HResult>)(LpVtbl[3]))(ptr, (IXAudio2EngineCallback*)ppCallback);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "UnregisterForCallbacks")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterForCallbacks([NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2EngineCallback*")] IXAudio2EngineCallback* pCallback)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2EngineCallback*, void>)(LpVtbl[4]))(ptr, pCallback);
		}

		[NativeName(NativeNameType.Func, "UnregisterForCallbacks")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void UnregisterForCallbacks([NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2EngineCallback*")] ref IXAudio2EngineCallback pCallback)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2EngineCallback* ppCallback = &pCallback)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2EngineCallback*, void>)(LpVtbl[4]))(ptr, (IXAudio2EngineCallback*)ppCallback);
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, pCallback, pSendList, pEffectChain);
			return ret;
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, pCallback, pSendList, pEffectChain);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, pCallback, pSendList, pEffectChain);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, pCallback, pSendList, pEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, pSendList, pEffectChain);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, pSendList, pEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
			{
				fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, pSendList, pEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
				{
					fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, pSendList, pEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2VoiceSends* ppSendList = &pSendList)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, pCallback, (XAudio2VoiceSends*)ppSendList, pEffectChain);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (XAudio2VoiceSends* ppSendList = &pSendList)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, pCallback, (XAudio2VoiceSends*)ppSendList, pEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
			{
				fixed (XAudio2VoiceSends* ppSendList = &pSendList)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, pCallback, (XAudio2VoiceSends*)ppSendList, pEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
				{
					fixed (XAudio2VoiceSends* ppSendList = &pSendList)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, pCallback, (XAudio2VoiceSends*)ppSendList, pEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
			{
				fixed (XAudio2VoiceSends* ppSendList = &pSendList)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, (XAudio2VoiceSends*)ppSendList, pEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
				{
					fixed (XAudio2VoiceSends* ppSendList = &pSendList)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, (XAudio2VoiceSends*)ppSendList, pEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
			{
				fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
				{
					fixed (XAudio2VoiceSends* ppSendList = &pSendList)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, (XAudio2VoiceSends*)ppSendList, pEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
				{
					fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
					{
						fixed (XAudio2VoiceSends* ppSendList = &pSendList)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, (XAudio2VoiceSends*)ppSendList, pEffectChain);
							return ret;
						}
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, pCallback, pSendList, (XAudio2EffectChain*)ppEffectChain);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, pCallback, pSendList, (XAudio2EffectChain*)ppEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
			{
				fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, pCallback, pSendList, (XAudio2EffectChain*)ppEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
				{
					fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, pCallback, pSendList, (XAudio2EffectChain*)ppEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
			{
				fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, pSendList, (XAudio2EffectChain*)ppEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
				{
					fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, pSendList, (XAudio2EffectChain*)ppEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
			{
				fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
				{
					fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, pSendList, (XAudio2EffectChain*)ppEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
				{
					fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
					{
						fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, pSendList, (XAudio2EffectChain*)ppEffectChain);
							return ret;
						}
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2VoiceSends* ppSendList = &pSendList)
			{
				fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, pCallback, (XAudio2VoiceSends*)ppSendList, (XAudio2EffectChain*)ppEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (XAudio2VoiceSends* ppSendList = &pSendList)
				{
					fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, pCallback, (XAudio2VoiceSends*)ppSendList, (XAudio2EffectChain*)ppEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
			{
				fixed (XAudio2VoiceSends* ppSendList = &pSendList)
				{
					fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, pCallback, (XAudio2VoiceSends*)ppSendList, (XAudio2EffectChain*)ppEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] IXAudio2VoiceCallback* pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
				{
					fixed (XAudio2VoiceSends* ppSendList = &pSendList)
					{
						fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, pCallback, (XAudio2VoiceSends*)ppSendList, (XAudio2EffectChain*)ppEffectChain);
							return ret;
						}
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
			{
				fixed (XAudio2VoiceSends* ppSendList = &pSendList)
				{
					fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, (XAudio2VoiceSends*)ppSendList, (XAudio2EffectChain*)ppEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] WaveFormatEx* pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
				{
					fixed (XAudio2VoiceSends* ppSendList = &pSendList)
					{
						fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, pSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, (XAudio2VoiceSends*)ppSendList, (XAudio2EffectChain*)ppEffectChain);
							return ret;
						}
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] IXAudio2SourceVoice** ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
			{
				fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
				{
					fixed (XAudio2VoiceSends* ppSendList = &pSendList)
					{
						fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
						{
							HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, ppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, (XAudio2VoiceSends*)ppSendList, (XAudio2EffectChain*)ppEffectChain);
							return ret;
						}
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSourceVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSourceVoice([NativeName(NativeNameType.Param, "ppSourceVoice")] [NativeName(NativeNameType.Type, "IXAudio2SourceVoice**")] ref IXAudio2SourceVoice* ppSourceVoice, [NativeName(NativeNameType.Param, "pSourceFormat")] [NativeName(NativeNameType.Type, "const WAVEFORMATEX*")] ref WaveFormatEx pSourceFormat, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "MaxFrequencyRatio")] [NativeName(NativeNameType.Type, "float")] float maxFrequencyRatio, [NativeName(NativeNameType.Param, "pCallback")] [NativeName(NativeNameType.Type, "IXAudio2VoiceCallback*")] ref IXAudio2VoiceCallback pCallback, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SourceVoice** pppSourceVoice = &ppSourceVoice)
			{
				fixed (WaveFormatEx* ppSourceFormat = &pSourceFormat)
				{
					fixed (IXAudio2VoiceCallback* ppCallback = &pCallback)
					{
						fixed (XAudio2VoiceSends* ppSendList = &pSendList)
						{
							fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
							{
								HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SourceVoice**, WaveFormatEx*, uint, float, IXAudio2VoiceCallback*, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[5]))(ptr, (IXAudio2SourceVoice**)pppSourceVoice, (WaveFormatEx*)ppSourceFormat, flags, maxFrequencyRatio, (IXAudio2VoiceCallback*)ppCallback, (XAudio2VoiceSends*)ppSendList, (XAudio2EffectChain*)ppEffectChain);
								return ret;
							}
						}
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSubmixVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubmixVoice([NativeName(NativeNameType.Param, "ppSubmixVoice")] [NativeName(NativeNameType.Type, "IXAudio2SubmixVoice**")] IXAudio2SubmixVoice** ppSubmixVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ProcessingStage")] [NativeName(NativeNameType.Type, "UINT32")] uint processingStage, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SubmixVoice**, uint, uint, uint, uint, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[6]))(ptr, ppSubmixVoice, inputChannels, inputSampleRate, flags, processingStage, pSendList, pEffectChain);
			return ret;
		}

		[NativeName(NativeNameType.Func, "CreateSubmixVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubmixVoice([NativeName(NativeNameType.Param, "ppSubmixVoice")] [NativeName(NativeNameType.Type, "IXAudio2SubmixVoice**")] ref IXAudio2SubmixVoice* ppSubmixVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ProcessingStage")] [NativeName(NativeNameType.Type, "UINT32")] uint processingStage, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SubmixVoice** pppSubmixVoice = &ppSubmixVoice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SubmixVoice**, uint, uint, uint, uint, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[6]))(ptr, (IXAudio2SubmixVoice**)pppSubmixVoice, inputChannels, inputSampleRate, flags, processingStage, pSendList, pEffectChain);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "CreateSubmixVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubmixVoice([NativeName(NativeNameType.Param, "ppSubmixVoice")] [NativeName(NativeNameType.Type, "IXAudio2SubmixVoice**")] IXAudio2SubmixVoice** ppSubmixVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ProcessingStage")] [NativeName(NativeNameType.Type, "UINT32")] uint processingStage, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2VoiceSends* ppSendList = &pSendList)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SubmixVoice**, uint, uint, uint, uint, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[6]))(ptr, ppSubmixVoice, inputChannels, inputSampleRate, flags, processingStage, (XAudio2VoiceSends*)ppSendList, pEffectChain);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "CreateSubmixVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubmixVoice([NativeName(NativeNameType.Param, "ppSubmixVoice")] [NativeName(NativeNameType.Type, "IXAudio2SubmixVoice**")] ref IXAudio2SubmixVoice* ppSubmixVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ProcessingStage")] [NativeName(NativeNameType.Type, "UINT32")] uint processingStage, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SubmixVoice** pppSubmixVoice = &ppSubmixVoice)
			{
				fixed (XAudio2VoiceSends* ppSendList = &pSendList)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SubmixVoice**, uint, uint, uint, uint, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[6]))(ptr, (IXAudio2SubmixVoice**)pppSubmixVoice, inputChannels, inputSampleRate, flags, processingStage, (XAudio2VoiceSends*)ppSendList, pEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSubmixVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubmixVoice([NativeName(NativeNameType.Param, "ppSubmixVoice")] [NativeName(NativeNameType.Type, "IXAudio2SubmixVoice**")] IXAudio2SubmixVoice** ppSubmixVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ProcessingStage")] [NativeName(NativeNameType.Type, "UINT32")] uint processingStage, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SubmixVoice**, uint, uint, uint, uint, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[6]))(ptr, ppSubmixVoice, inputChannels, inputSampleRate, flags, processingStage, pSendList, (XAudio2EffectChain*)ppEffectChain);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "CreateSubmixVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubmixVoice([NativeName(NativeNameType.Param, "ppSubmixVoice")] [NativeName(NativeNameType.Type, "IXAudio2SubmixVoice**")] ref IXAudio2SubmixVoice* ppSubmixVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ProcessingStage")] [NativeName(NativeNameType.Type, "UINT32")] uint processingStage, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SubmixVoice** pppSubmixVoice = &ppSubmixVoice)
			{
				fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SubmixVoice**, uint, uint, uint, uint, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[6]))(ptr, (IXAudio2SubmixVoice**)pppSubmixVoice, inputChannels, inputSampleRate, flags, processingStage, pSendList, (XAudio2EffectChain*)ppEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSubmixVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubmixVoice([NativeName(NativeNameType.Param, "ppSubmixVoice")] [NativeName(NativeNameType.Type, "IXAudio2SubmixVoice**")] IXAudio2SubmixVoice** ppSubmixVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ProcessingStage")] [NativeName(NativeNameType.Type, "UINT32")] uint processingStage, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2VoiceSends* ppSendList = &pSendList)
			{
				fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SubmixVoice**, uint, uint, uint, uint, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[6]))(ptr, ppSubmixVoice, inputChannels, inputSampleRate, flags, processingStage, (XAudio2VoiceSends*)ppSendList, (XAudio2EffectChain*)ppEffectChain);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateSubmixVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateSubmixVoice([NativeName(NativeNameType.Param, "ppSubmixVoice")] [NativeName(NativeNameType.Type, "IXAudio2SubmixVoice**")] ref IXAudio2SubmixVoice* ppSubmixVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "ProcessingStage")] [NativeName(NativeNameType.Type, "UINT32")] uint processingStage, [NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2SubmixVoice** pppSubmixVoice = &ppSubmixVoice)
			{
				fixed (XAudio2VoiceSends* ppSendList = &pSendList)
				{
					fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
					{
						HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2SubmixVoice**, uint, uint, uint, uint, XAudio2VoiceSends*, XAudio2EffectChain*, HResult>)(LpVtbl[6]))(ptr, (IXAudio2SubmixVoice**)pppSubmixVoice, inputChannels, inputSampleRate, flags, processingStage, (XAudio2VoiceSends*)ppSendList, (XAudio2EffectChain*)ppEffectChain);
						return ret;
					}
				}
			}
		}

		[NativeName(NativeNameType.Func, "CreateMasteringVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateMasteringVoice([NativeName(NativeNameType.Param, "ppMasteringVoice")] [NativeName(NativeNameType.Type, "IXAudio2MasteringVoice**")] IXAudio2MasteringVoice** ppMasteringVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "szDeviceId")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* szDeviceId, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain, [NativeName(NativeNameType.Param, "StreamCategory")] [NativeName(NativeNameType.Type, "AUDIO_STREAM_CATEGORY")] AudioStreamCategory streamCategory)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2MasteringVoice**, uint, uint, uint, char*, XAudio2EffectChain*, AudioStreamCategory, HResult>)(LpVtbl[7]))(ptr, ppMasteringVoice, inputChannels, inputSampleRate, flags, szDeviceId, pEffectChain, streamCategory);
			return ret;
		}

		[NativeName(NativeNameType.Func, "CreateMasteringVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateMasteringVoice([NativeName(NativeNameType.Param, "ppMasteringVoice")] [NativeName(NativeNameType.Type, "IXAudio2MasteringVoice**")] ref IXAudio2MasteringVoice* ppMasteringVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "szDeviceId")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* szDeviceId, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain, [NativeName(NativeNameType.Param, "StreamCategory")] [NativeName(NativeNameType.Type, "AUDIO_STREAM_CATEGORY")] AudioStreamCategory streamCategory)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2MasteringVoice** pppMasteringVoice = &ppMasteringVoice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2MasteringVoice**, uint, uint, uint, char*, XAudio2EffectChain*, AudioStreamCategory, HResult>)(LpVtbl[7]))(ptr, (IXAudio2MasteringVoice**)pppMasteringVoice, inputChannels, inputSampleRate, flags, szDeviceId, pEffectChain, streamCategory);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "CreateMasteringVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateMasteringVoice([NativeName(NativeNameType.Param, "ppMasteringVoice")] [NativeName(NativeNameType.Type, "IXAudio2MasteringVoice**")] IXAudio2MasteringVoice** ppMasteringVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "szDeviceId")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* szDeviceId, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain, [NativeName(NativeNameType.Param, "StreamCategory")] [NativeName(NativeNameType.Type, "AUDIO_STREAM_CATEGORY")] AudioStreamCategory streamCategory)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2MasteringVoice**, uint, uint, uint, char*, XAudio2EffectChain*, AudioStreamCategory, HResult>)(LpVtbl[7]))(ptr, ppMasteringVoice, inputChannels, inputSampleRate, flags, szDeviceId, (XAudio2EffectChain*)ppEffectChain, streamCategory);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "CreateMasteringVoice")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CreateMasteringVoice([NativeName(NativeNameType.Param, "ppMasteringVoice")] [NativeName(NativeNameType.Type, "IXAudio2MasteringVoice**")] ref IXAudio2MasteringVoice* ppMasteringVoice, [NativeName(NativeNameType.Param, "InputChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint inputChannels, [NativeName(NativeNameType.Param, "InputSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint inputSampleRate, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "szDeviceId")] [NativeName(NativeNameType.Type, "LPCWSTR")] char* szDeviceId, [NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain, [NativeName(NativeNameType.Param, "StreamCategory")] [NativeName(NativeNameType.Type, "AUDIO_STREAM_CATEGORY")] AudioStreamCategory streamCategory)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2MasteringVoice** pppMasteringVoice = &ppMasteringVoice)
			{
				fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, IXAudio2MasteringVoice**, uint, uint, uint, char*, XAudio2EffectChain*, AudioStreamCategory, HResult>)(LpVtbl[7]))(ptr, (IXAudio2MasteringVoice**)pppMasteringVoice, inputChannels, inputSampleRate, flags, szDeviceId, (XAudio2EffectChain*)ppEffectChain, streamCategory);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "StartEngine")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult StartEngine()
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, HResult>)(LpVtbl[8]))(ptr);
			return ret;
		}

		[NativeName(NativeNameType.Func, "StopEngine")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void StopEngine()
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2*, void>)(LpVtbl[9]))(ptr);
		}

		[NativeName(NativeNameType.Func, "CommitChanges")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult CommitChanges([NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2*, uint, HResult>)(LpVtbl[10]))(ptr, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "GetPerformanceData")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetPerformanceData([NativeName(NativeNameType.Param, "pPerfData")] [NativeName(NativeNameType.Type, "XAUDIO2_PERFORMANCE_DATA*")] XAudio2PerformanceData* pPerfData)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2*, XAudio2PerformanceData*, void>)(LpVtbl[11]))(ptr, pPerfData);
		}

		[NativeName(NativeNameType.Func, "GetPerformanceData")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetPerformanceData([NativeName(NativeNameType.Param, "pPerfData")] [NativeName(NativeNameType.Type, "XAUDIO2_PERFORMANCE_DATA*")] ref XAudio2PerformanceData pPerfData)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2PerformanceData* ppPerfData = &pPerfData)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2*, XAudio2PerformanceData*, void>)(LpVtbl[11]))(ptr, (XAudio2PerformanceData*)ppPerfData);
			}
		}

		[NativeName(NativeNameType.Func, "SetDebugConfiguration")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void SetDebugConfiguration([NativeName(NativeNameType.Param, "pDebugConfiguration")] [NativeName(NativeNameType.Type, "const XAUDIO2_DEBUG_CONFIGURATION*")] XAudio2DebugConfiguration* pDebugConfiguration, [NativeName(NativeNameType.Param, "pReserved")] [NativeName(NativeNameType.Type, "void*")] void* pReserved)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2*, XAudio2DebugConfiguration*, void*, void>)(LpVtbl[12]))(ptr, pDebugConfiguration, pReserved);
		}

		[NativeName(NativeNameType.Func, "SetDebugConfiguration")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void SetDebugConfiguration([NativeName(NativeNameType.Param, "pDebugConfiguration")] [NativeName(NativeNameType.Type, "const XAUDIO2_DEBUG_CONFIGURATION*")] ref XAudio2DebugConfiguration pDebugConfiguration, [NativeName(NativeNameType.Param, "pReserved")] [NativeName(NativeNameType.Type, "void*")] void* pReserved)
		{
			IXAudio2* ptr = (IXAudio2*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2DebugConfiguration* ppDebugConfiguration = &pDebugConfiguration)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2*, XAudio2DebugConfiguration*, void*, void>)(LpVtbl[12]))(ptr, (XAudio2DebugConfiguration*)ppDebugConfiguration, pReserved);
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IXAudio2 value)
		{
			return Unsafe.As<IXAudio2, IUnknown>(ref value);
		}

	}

	[Guid("84ac29bb-d619-44d2-b197-e4acf7df3ed6")]
	[NativeName(NativeNameType.StructOrClass, "IXAudio2Extension")]
	public partial struct IXAudio2Extension : IComObject, IComObject<IXAudio2Extension>, IComObject<IUnknown>
	{
		public unsafe void** LpVtbl;

		public static readonly Guid Guid = new("84ac29bb-d619-44d2-b197-e4acf7df3ed6");

		public unsafe IXAudio2Extension (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		[NativeName(NativeNameType.Func, "GetProcessingQuantum")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetProcessingQuantum([NativeName(NativeNameType.Param, "quantumNumerator")] [NativeName(NativeNameType.Type, "UINT32*")] uint* quantumNumerator, [NativeName(NativeNameType.Param, "quantumDenominator")] [NativeName(NativeNameType.Type, "UINT32*")] uint* quantumDenominator)
		{
			IXAudio2Extension* ptr = (IXAudio2Extension*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2Extension*, uint*, uint*, void>)(LpVtbl[3]))(ptr, quantumNumerator, quantumDenominator);
		}

		[NativeName(NativeNameType.Func, "GetProcessingQuantum")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetProcessingQuantum([NativeName(NativeNameType.Param, "quantumNumerator")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint quantumNumerator, [NativeName(NativeNameType.Param, "quantumDenominator")] [NativeName(NativeNameType.Type, "UINT32*")] uint* quantumDenominator)
		{
			IXAudio2Extension* ptr = (IXAudio2Extension*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pquantumNumerator = &quantumNumerator)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Extension*, uint*, uint*, void>)(LpVtbl[3]))(ptr, (uint*)pquantumNumerator, quantumDenominator);
			}
		}

		[NativeName(NativeNameType.Func, "GetProcessingQuantum")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetProcessingQuantum([NativeName(NativeNameType.Param, "quantumNumerator")] [NativeName(NativeNameType.Type, "UINT32*")] uint* quantumNumerator, [NativeName(NativeNameType.Param, "quantumDenominator")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint quantumDenominator)
		{
			IXAudio2Extension* ptr = (IXAudio2Extension*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pquantumDenominator = &quantumDenominator)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Extension*, uint*, uint*, void>)(LpVtbl[3]))(ptr, quantumNumerator, (uint*)pquantumDenominator);
			}
		}

		[NativeName(NativeNameType.Func, "GetProcessingQuantum")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetProcessingQuantum([NativeName(NativeNameType.Param, "quantumNumerator")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint quantumNumerator, [NativeName(NativeNameType.Param, "quantumDenominator")] [NativeName(NativeNameType.Type, "UINT32*")] ref uint quantumDenominator)
		{
			IXAudio2Extension* ptr = (IXAudio2Extension*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pquantumNumerator = &quantumNumerator)
			{
				fixed (uint* pquantumDenominator = &quantumDenominator)
				{
					((delegate* unmanaged[Stdcall]<IXAudio2Extension*, uint*, uint*, void>)(LpVtbl[3]))(ptr, (uint*)pquantumNumerator, (uint*)pquantumDenominator);
				}
			}
		}

		[NativeName(NativeNameType.Func, "GetProcessor")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetProcessor([NativeName(NativeNameType.Param, "processor")] [NativeName(NativeNameType.Type, "XAUDIO2_PROCESSOR*")] uint* processor)
		{
			IXAudio2Extension* ptr = (IXAudio2Extension*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2Extension*, uint*, void>)(LpVtbl[4]))(ptr, processor);
		}

		[NativeName(NativeNameType.Func, "GetProcessor")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetProcessor([NativeName(NativeNameType.Param, "processor")] [NativeName(NativeNameType.Type, "XAUDIO2_PROCESSOR*")] ref uint processor)
		{
			IXAudio2Extension* ptr = (IXAudio2Extension*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* pprocessor = &processor)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Extension*, uint*, void>)(LpVtbl[4]))(ptr, (uint*)pprocessor);
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IUnknown (IXAudio2Extension value)
		{
			return Unsafe.As<IXAudio2Extension, IUnknown>(ref value);
		}

	}

	[NativeName(NativeNameType.StructOrClass, "IXAudio2Voice")]
	public partial struct IXAudio2Voice : IComObject, IComObject<IXAudio2Voice>
	{
		public unsafe void** LpVtbl;

		public unsafe IXAudio2Voice (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		[NativeName(NativeNameType.Func, "GetVoiceDetails")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetVoiceDetails([NativeName(NativeNameType.Param, "pVoiceDetails")] [NativeName(NativeNameType.Type, "XAUDIO2_VOICE_DETAILS*")] XAudio2VoiceDetails* pVoiceDetails)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2Voice*, XAudio2VoiceDetails*, void>)(*LpVtbl))(ptr, pVoiceDetails);
		}

		[NativeName(NativeNameType.Func, "GetVoiceDetails")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetVoiceDetails([NativeName(NativeNameType.Param, "pVoiceDetails")] [NativeName(NativeNameType.Type, "XAUDIO2_VOICE_DETAILS*")] ref XAudio2VoiceDetails pVoiceDetails)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2VoiceDetails* ppVoiceDetails = &pVoiceDetails)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Voice*, XAudio2VoiceDetails*, void>)(*LpVtbl))(ptr, (XAudio2VoiceDetails*)ppVoiceDetails);
			}
		}

		[NativeName(NativeNameType.Func, "SetOutputVoices")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetOutputVoices([NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] XAudio2VoiceSends* pSendList)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, XAudio2VoiceSends*, HResult>)(LpVtbl[1]))(ptr, pSendList);
			return ret;
		}

		[NativeName(NativeNameType.Func, "SetOutputVoices")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetOutputVoices([NativeName(NativeNameType.Param, "pSendList")] [NativeName(NativeNameType.Type, "const XAUDIO2_VOICE_SENDS*")] ref XAudio2VoiceSends pSendList)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2VoiceSends* ppSendList = &pSendList)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, XAudio2VoiceSends*, HResult>)(LpVtbl[1]))(ptr, (XAudio2VoiceSends*)ppSendList);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "SetEffectChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetEffectChain([NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] XAudio2EffectChain* pEffectChain)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, XAudio2EffectChain*, HResult>)(LpVtbl[2]))(ptr, pEffectChain);
			return ret;
		}

		[NativeName(NativeNameType.Func, "SetEffectChain")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetEffectChain([NativeName(NativeNameType.Param, "pEffectChain")] [NativeName(NativeNameType.Type, "const XAUDIO2_EFFECT_CHAIN*")] ref XAudio2EffectChain pEffectChain)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2EffectChain* ppEffectChain = &pEffectChain)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, XAudio2EffectChain*, HResult>)(LpVtbl[2]))(ptr, (XAudio2EffectChain*)ppEffectChain);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "EnableEffect")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult EnableEffect([NativeName(NativeNameType.Param, "EffectIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint effectIndex, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, uint, uint, HResult>)(LpVtbl[3]))(ptr, effectIndex, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "DisableEffect")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult DisableEffect([NativeName(NativeNameType.Param, "EffectIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint effectIndex, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, uint, uint, HResult>)(LpVtbl[4]))(ptr, effectIndex, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "GetEffectState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetEffectState([NativeName(NativeNameType.Param, "EffectIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint effectIndex, [NativeName(NativeNameType.Param, "pEnabled")] [NativeName(NativeNameType.Type, "BOOL*")] int* pEnabled)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2Voice*, uint, int*, void>)(LpVtbl[5]))(ptr, effectIndex, pEnabled);
		}

		[NativeName(NativeNameType.Func, "GetEffectState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetEffectState([NativeName(NativeNameType.Param, "EffectIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint effectIndex, [NativeName(NativeNameType.Param, "pEnabled")] [NativeName(NativeNameType.Type, "BOOL*")] ref int pEnabled)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (int* ppEnabled = &pEnabled)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Voice*, uint, int*, void>)(LpVtbl[5]))(ptr, effectIndex, (int*)ppEnabled);
			}
		}

		[NativeName(NativeNameType.Func, "SetEffectParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetEffectParameters([NativeName(NativeNameType.Param, "EffectIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint effectIndex, [NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "const void*")] void* pParameters, [NativeName(NativeNameType.Param, "ParametersByteSize")] [NativeName(NativeNameType.Type, "UINT32")] uint parametersByteSize, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, uint, void*, uint, uint, HResult>)(LpVtbl[6]))(ptr, effectIndex, pParameters, parametersByteSize, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "GetEffectParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetEffectParameters([NativeName(NativeNameType.Param, "EffectIndex")] [NativeName(NativeNameType.Type, "UINT32")] uint effectIndex, [NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "void*")] void* pParameters, [NativeName(NativeNameType.Param, "ParametersByteSize")] [NativeName(NativeNameType.Type, "UINT32")] uint parametersByteSize)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, uint, void*, uint, HResult>)(LpVtbl[7]))(ptr, effectIndex, pParameters, parametersByteSize);
			return ret;
		}

		[NativeName(NativeNameType.Func, "SetFilterParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFilterParameters([NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "const XAUDIO2_FILTER_PARAMETERS*")] XAudio2FilterParameters* pParameters, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, XAudio2FilterParameters*, uint, HResult>)(LpVtbl[8]))(ptr, pParameters, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "SetFilterParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFilterParameters([NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "const XAUDIO2_FILTER_PARAMETERS*")] ref XAudio2FilterParameters pParameters, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2FilterParameters* ppParameters = &pParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, XAudio2FilterParameters*, uint, HResult>)(LpVtbl[8]))(ptr, (XAudio2FilterParameters*)ppParameters, operationSet);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "GetFilterParameters")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetFilterParameters([NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "XAUDIO2_FILTER_PARAMETERS*")] XAudio2FilterParameters* pParameters)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2Voice*, XAudio2FilterParameters*, void>)(LpVtbl[9]))(ptr, pParameters);
		}

		[NativeName(NativeNameType.Func, "GetFilterParameters")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetFilterParameters([NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "XAUDIO2_FILTER_PARAMETERS*")] ref XAudio2FilterParameters pParameters)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2FilterParameters* ppParameters = &pParameters)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Voice*, XAudio2FilterParameters*, void>)(LpVtbl[9]))(ptr, (XAudio2FilterParameters*)ppParameters);
			}
		}

		[NativeName(NativeNameType.Func, "SetOutputFilterParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetOutputFilterParameters([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] IXAudio2Voice* pDestinationVoice, [NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "const XAUDIO2_FILTER_PARAMETERS*")] XAudio2FilterParameters* pParameters, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, XAudio2FilterParameters*, uint, HResult>)(LpVtbl[10]))(ptr, pDestinationVoice, pParameters, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "SetOutputFilterParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetOutputFilterParameters([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] ref IXAudio2Voice pDestinationVoice, [NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "const XAUDIO2_FILTER_PARAMETERS*")] XAudio2FilterParameters* pParameters, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2Voice* ppDestinationVoice = &pDestinationVoice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, XAudio2FilterParameters*, uint, HResult>)(LpVtbl[10]))(ptr, (IXAudio2Voice*)ppDestinationVoice, pParameters, operationSet);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "SetOutputFilterParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetOutputFilterParameters([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] IXAudio2Voice* pDestinationVoice, [NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "const XAUDIO2_FILTER_PARAMETERS*")] ref XAudio2FilterParameters pParameters, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2FilterParameters* ppParameters = &pParameters)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, XAudio2FilterParameters*, uint, HResult>)(LpVtbl[10]))(ptr, pDestinationVoice, (XAudio2FilterParameters*)ppParameters, operationSet);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "SetOutputFilterParameters")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetOutputFilterParameters([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] ref IXAudio2Voice pDestinationVoice, [NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "const XAUDIO2_FILTER_PARAMETERS*")] ref XAudio2FilterParameters pParameters, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2Voice* ppDestinationVoice = &pDestinationVoice)
			{
				fixed (XAudio2FilterParameters* ppParameters = &pParameters)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, XAudio2FilterParameters*, uint, HResult>)(LpVtbl[10]))(ptr, (IXAudio2Voice*)ppDestinationVoice, (XAudio2FilterParameters*)ppParameters, operationSet);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "GetOutputFilterParameters")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetOutputFilterParameters([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] IXAudio2Voice* pDestinationVoice, [NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "XAUDIO2_FILTER_PARAMETERS*")] XAudio2FilterParameters* pParameters)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, XAudio2FilterParameters*, void>)(LpVtbl[11]))(ptr, pDestinationVoice, pParameters);
		}

		[NativeName(NativeNameType.Func, "GetOutputFilterParameters")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetOutputFilterParameters([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] ref IXAudio2Voice pDestinationVoice, [NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "XAUDIO2_FILTER_PARAMETERS*")] XAudio2FilterParameters* pParameters)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2Voice* ppDestinationVoice = &pDestinationVoice)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, XAudio2FilterParameters*, void>)(LpVtbl[11]))(ptr, (IXAudio2Voice*)ppDestinationVoice, pParameters);
			}
		}

		[NativeName(NativeNameType.Func, "GetOutputFilterParameters")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetOutputFilterParameters([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] IXAudio2Voice* pDestinationVoice, [NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "XAUDIO2_FILTER_PARAMETERS*")] ref XAudio2FilterParameters pParameters)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2FilterParameters* ppParameters = &pParameters)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, XAudio2FilterParameters*, void>)(LpVtbl[11]))(ptr, pDestinationVoice, (XAudio2FilterParameters*)ppParameters);
			}
		}

		[NativeName(NativeNameType.Func, "GetOutputFilterParameters")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetOutputFilterParameters([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] ref IXAudio2Voice pDestinationVoice, [NativeName(NativeNameType.Param, "pParameters")] [NativeName(NativeNameType.Type, "XAUDIO2_FILTER_PARAMETERS*")] ref XAudio2FilterParameters pParameters)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2Voice* ppDestinationVoice = &pDestinationVoice)
			{
				fixed (XAudio2FilterParameters* ppParameters = &pParameters)
				{
					((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, XAudio2FilterParameters*, void>)(LpVtbl[11]))(ptr, (IXAudio2Voice*)ppDestinationVoice, (XAudio2FilterParameters*)ppParameters);
				}
			}
		}

		[NativeName(NativeNameType.Func, "SetVolume")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetVolume([NativeName(NativeNameType.Param, "Volume")] [NativeName(NativeNameType.Type, "float")] float volume, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, float, uint, HResult>)(LpVtbl[12]))(ptr, volume, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "GetVolume")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetVolume([NativeName(NativeNameType.Param, "pVolume")] [NativeName(NativeNameType.Type, "float*")] float* pVolume)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2Voice*, float*, void>)(LpVtbl[13]))(ptr, pVolume);
		}

		[NativeName(NativeNameType.Func, "GetVolume")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetVolume([NativeName(NativeNameType.Param, "pVolume")] [NativeName(NativeNameType.Type, "float*")] ref float pVolume)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppVolume = &pVolume)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Voice*, float*, void>)(LpVtbl[13]))(ptr, (float*)ppVolume);
			}
		}

		[NativeName(NativeNameType.Func, "SetChannelVolumes")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetChannelVolumes([NativeName(NativeNameType.Param, "Channels")] [NativeName(NativeNameType.Type, "UINT32")] uint channels, [NativeName(NativeNameType.Param, "pVolumes")] [NativeName(NativeNameType.Type, "const float*")] float* pVolumes, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, uint, float*, uint, HResult>)(LpVtbl[14]))(ptr, channels, pVolumes, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "SetChannelVolumes")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetChannelVolumes([NativeName(NativeNameType.Param, "Channels")] [NativeName(NativeNameType.Type, "UINT32")] uint channels, [NativeName(NativeNameType.Param, "pVolumes")] [NativeName(NativeNameType.Type, "const float*")] ref float pVolumes, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppVolumes = &pVolumes)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, uint, float*, uint, HResult>)(LpVtbl[14]))(ptr, channels, (float*)ppVolumes, operationSet);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "GetChannelVolumes")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetChannelVolumes([NativeName(NativeNameType.Param, "Channels")] [NativeName(NativeNameType.Type, "UINT32")] uint channels, [NativeName(NativeNameType.Param, "pVolumes")] [NativeName(NativeNameType.Type, "float*")] float* pVolumes)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2Voice*, uint, float*, void>)(LpVtbl[15]))(ptr, channels, pVolumes);
		}

		[NativeName(NativeNameType.Func, "GetChannelVolumes")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetChannelVolumes([NativeName(NativeNameType.Param, "Channels")] [NativeName(NativeNameType.Type, "UINT32")] uint channels, [NativeName(NativeNameType.Param, "pVolumes")] [NativeName(NativeNameType.Type, "float*")] ref float pVolumes)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppVolumes = &pVolumes)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Voice*, uint, float*, void>)(LpVtbl[15]))(ptr, channels, (float*)ppVolumes);
			}
		}

		[NativeName(NativeNameType.Func, "SetOutputMatrix")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetOutputMatrix([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] IXAudio2Voice* pDestinationVoice, [NativeName(NativeNameType.Param, "SourceChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint sourceChannels, [NativeName(NativeNameType.Param, "DestinationChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint destinationChannels, [NativeName(NativeNameType.Param, "pLevelMatrix")] [NativeName(NativeNameType.Type, "const float*")] float* pLevelMatrix, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, uint, uint, float*, uint, HResult>)(LpVtbl[16]))(ptr, pDestinationVoice, sourceChannels, destinationChannels, pLevelMatrix, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "SetOutputMatrix")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetOutputMatrix([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] ref IXAudio2Voice pDestinationVoice, [NativeName(NativeNameType.Param, "SourceChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint sourceChannels, [NativeName(NativeNameType.Param, "DestinationChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint destinationChannels, [NativeName(NativeNameType.Param, "pLevelMatrix")] [NativeName(NativeNameType.Type, "const float*")] float* pLevelMatrix, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2Voice* ppDestinationVoice = &pDestinationVoice)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, uint, uint, float*, uint, HResult>)(LpVtbl[16]))(ptr, (IXAudio2Voice*)ppDestinationVoice, sourceChannels, destinationChannels, pLevelMatrix, operationSet);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "SetOutputMatrix")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetOutputMatrix([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] IXAudio2Voice* pDestinationVoice, [NativeName(NativeNameType.Param, "SourceChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint sourceChannels, [NativeName(NativeNameType.Param, "DestinationChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint destinationChannels, [NativeName(NativeNameType.Param, "pLevelMatrix")] [NativeName(NativeNameType.Type, "const float*")] ref float pLevelMatrix, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppLevelMatrix = &pLevelMatrix)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, uint, uint, float*, uint, HResult>)(LpVtbl[16]))(ptr, pDestinationVoice, sourceChannels, destinationChannels, (float*)ppLevelMatrix, operationSet);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "SetOutputMatrix")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetOutputMatrix([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] ref IXAudio2Voice pDestinationVoice, [NativeName(NativeNameType.Param, "SourceChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint sourceChannels, [NativeName(NativeNameType.Param, "DestinationChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint destinationChannels, [NativeName(NativeNameType.Param, "pLevelMatrix")] [NativeName(NativeNameType.Type, "const float*")] ref float pLevelMatrix, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2Voice* ppDestinationVoice = &pDestinationVoice)
			{
				fixed (float* ppLevelMatrix = &pLevelMatrix)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, uint, uint, float*, uint, HResult>)(LpVtbl[16]))(ptr, (IXAudio2Voice*)ppDestinationVoice, sourceChannels, destinationChannels, (float*)ppLevelMatrix, operationSet);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "GetOutputMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetOutputMatrix([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] IXAudio2Voice* pDestinationVoice, [NativeName(NativeNameType.Param, "SourceChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint sourceChannels, [NativeName(NativeNameType.Param, "DestinationChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint destinationChannels, [NativeName(NativeNameType.Param, "pLevelMatrix")] [NativeName(NativeNameType.Type, "float*")] float* pLevelMatrix)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, uint, uint, float*, void>)(LpVtbl[17]))(ptr, pDestinationVoice, sourceChannels, destinationChannels, pLevelMatrix);
		}

		[NativeName(NativeNameType.Func, "GetOutputMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetOutputMatrix([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] ref IXAudio2Voice pDestinationVoice, [NativeName(NativeNameType.Param, "SourceChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint sourceChannels, [NativeName(NativeNameType.Param, "DestinationChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint destinationChannels, [NativeName(NativeNameType.Param, "pLevelMatrix")] [NativeName(NativeNameType.Type, "float*")] float* pLevelMatrix)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2Voice* ppDestinationVoice = &pDestinationVoice)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, uint, uint, float*, void>)(LpVtbl[17]))(ptr, (IXAudio2Voice*)ppDestinationVoice, sourceChannels, destinationChannels, pLevelMatrix);
			}
		}

		[NativeName(NativeNameType.Func, "GetOutputMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetOutputMatrix([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] IXAudio2Voice* pDestinationVoice, [NativeName(NativeNameType.Param, "SourceChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint sourceChannels, [NativeName(NativeNameType.Param, "DestinationChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint destinationChannels, [NativeName(NativeNameType.Param, "pLevelMatrix")] [NativeName(NativeNameType.Type, "float*")] ref float pLevelMatrix)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppLevelMatrix = &pLevelMatrix)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, uint, uint, float*, void>)(LpVtbl[17]))(ptr, pDestinationVoice, sourceChannels, destinationChannels, (float*)ppLevelMatrix);
			}
		}

		[NativeName(NativeNameType.Func, "GetOutputMatrix")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetOutputMatrix([NativeName(NativeNameType.Param, "pDestinationVoice")] [NativeName(NativeNameType.Type, "IXAudio2Voice*")] ref IXAudio2Voice pDestinationVoice, [NativeName(NativeNameType.Param, "SourceChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint sourceChannels, [NativeName(NativeNameType.Param, "DestinationChannels")] [NativeName(NativeNameType.Type, "UINT32")] uint destinationChannels, [NativeName(NativeNameType.Param, "pLevelMatrix")] [NativeName(NativeNameType.Type, "float*")] ref float pLevelMatrix)
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (IXAudio2Voice* ppDestinationVoice = &pDestinationVoice)
			{
				fixed (float* ppLevelMatrix = &pLevelMatrix)
				{
					((delegate* unmanaged[Stdcall]<IXAudio2Voice*, IXAudio2Voice*, uint, uint, float*, void>)(LpVtbl[17]))(ptr, (IXAudio2Voice*)ppDestinationVoice, sourceChannels, destinationChannels, (float*)ppLevelMatrix);
				}
			}
		}

		[NativeName(NativeNameType.Func, "DestroyVoice")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void DestroyVoice()
		{
			IXAudio2Voice* ptr = (IXAudio2Voice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2Voice*, void>)(LpVtbl[18]))(ptr);
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

	}

	[NativeName(NativeNameType.StructOrClass, "IXAudio2SourceVoice")]
	public partial struct IXAudio2SourceVoice : IComObject, IComObject<IXAudio2SourceVoice>, IComObject<IXAudio2Voice>
	{
		public unsafe void** LpVtbl;

		public unsafe IXAudio2SourceVoice (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		[NativeName(NativeNameType.Func, "Start")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Start([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, uint, HResult>)(LpVtbl[19]))(ptr, flags, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "Stop")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Stop([NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, uint, HResult>)(LpVtbl[20]))(ptr, flags, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "SubmitSourceBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SubmitSourceBuffer([NativeName(NativeNameType.Param, "pBuffer")] [NativeName(NativeNameType.Type, "const XAUDIO2_BUFFER*")] XAudio2Buffer* pBuffer, [NativeName(NativeNameType.Param, "pBufferWMA")] [NativeName(NativeNameType.Type, "const XAUDIO2_BUFFER_WMA*")] XAudio2BufferWma* pBufferWMA)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, XAudio2Buffer*, XAudio2BufferWma*, HResult>)(LpVtbl[21]))(ptr, pBuffer, pBufferWMA);
			return ret;
		}

		[NativeName(NativeNameType.Func, "SubmitSourceBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SubmitSourceBuffer([NativeName(NativeNameType.Param, "pBuffer")] [NativeName(NativeNameType.Type, "const XAUDIO2_BUFFER*")] ref XAudio2Buffer pBuffer, [NativeName(NativeNameType.Param, "pBufferWMA")] [NativeName(NativeNameType.Type, "const XAUDIO2_BUFFER_WMA*")] XAudio2BufferWma* pBufferWMA)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2Buffer* ppBuffer = &pBuffer)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, XAudio2Buffer*, XAudio2BufferWma*, HResult>)(LpVtbl[21]))(ptr, (XAudio2Buffer*)ppBuffer, pBufferWMA);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "SubmitSourceBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SubmitSourceBuffer([NativeName(NativeNameType.Param, "pBuffer")] [NativeName(NativeNameType.Type, "const XAUDIO2_BUFFER*")] XAudio2Buffer* pBuffer, [NativeName(NativeNameType.Param, "pBufferWMA")] [NativeName(NativeNameType.Type, "const XAUDIO2_BUFFER_WMA*")] ref XAudio2BufferWma pBufferWMA)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2BufferWma* ppBufferWMA = &pBufferWMA)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, XAudio2Buffer*, XAudio2BufferWma*, HResult>)(LpVtbl[21]))(ptr, pBuffer, (XAudio2BufferWma*)ppBufferWMA);
				return ret;
			}
		}

		[NativeName(NativeNameType.Func, "SubmitSourceBuffer")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SubmitSourceBuffer([NativeName(NativeNameType.Param, "pBuffer")] [NativeName(NativeNameType.Type, "const XAUDIO2_BUFFER*")] ref XAudio2Buffer pBuffer, [NativeName(NativeNameType.Param, "pBufferWMA")] [NativeName(NativeNameType.Type, "const XAUDIO2_BUFFER_WMA*")] ref XAudio2BufferWma pBufferWMA)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2Buffer* ppBuffer = &pBuffer)
			{
				fixed (XAudio2BufferWma* ppBufferWMA = &pBufferWMA)
				{
					HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, XAudio2Buffer*, XAudio2BufferWma*, HResult>)(LpVtbl[21]))(ptr, (XAudio2Buffer*)ppBuffer, (XAudio2BufferWma*)ppBufferWMA);
					return ret;
				}
			}
		}

		[NativeName(NativeNameType.Func, "FlushSourceBuffers")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult FlushSourceBuffers()
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, HResult>)(LpVtbl[22]))(ptr);
			return ret;
		}

		[NativeName(NativeNameType.Func, "Discontinuity")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult Discontinuity()
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, HResult>)(LpVtbl[23]))(ptr);
			return ret;
		}

		[NativeName(NativeNameType.Func, "ExitLoop")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult ExitLoop([NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, HResult>)(LpVtbl[24]))(ptr, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "GetState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetState([NativeName(NativeNameType.Param, "pVoiceState")] [NativeName(NativeNameType.Type, "XAUDIO2_VOICE_STATE*")] XAudio2VoiceState* pVoiceState, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, XAudio2VoiceState*, uint, void>)(LpVtbl[25]))(ptr, pVoiceState, flags);
		}

		[NativeName(NativeNameType.Func, "GetState")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetState([NativeName(NativeNameType.Param, "pVoiceState")] [NativeName(NativeNameType.Type, "XAUDIO2_VOICE_STATE*")] ref XAudio2VoiceState pVoiceState, [NativeName(NativeNameType.Param, "Flags")] [NativeName(NativeNameType.Type, "UINT32")] uint flags)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (XAudio2VoiceState* ppVoiceState = &pVoiceState)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, XAudio2VoiceState*, uint, void>)(LpVtbl[25]))(ptr, (XAudio2VoiceState*)ppVoiceState, flags);
			}
		}

		[NativeName(NativeNameType.Func, "SetFrequencyRatio")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetFrequencyRatio([NativeName(NativeNameType.Param, "Ratio")] [NativeName(NativeNameType.Type, "float")] float ratio, [NativeName(NativeNameType.Param, "OperationSet")] [NativeName(NativeNameType.Type, "UINT32")] uint operationSet)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, float, uint, HResult>)(LpVtbl[26]))(ptr, ratio, operationSet);
			return ret;
		}

		[NativeName(NativeNameType.Func, "GetFrequencyRatio")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetFrequencyRatio([NativeName(NativeNameType.Param, "pRatio")] [NativeName(NativeNameType.Type, "float*")] float* pRatio)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, float*, void>)(LpVtbl[27]))(ptr, pRatio);
		}

		[NativeName(NativeNameType.Func, "GetFrequencyRatio")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void GetFrequencyRatio([NativeName(NativeNameType.Param, "pRatio")] [NativeName(NativeNameType.Type, "float*")] ref float pRatio)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (float* ppRatio = &pRatio)
			{
				((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, float*, void>)(LpVtbl[27]))(ptr, (float*)ppRatio);
			}
		}

		[NativeName(NativeNameType.Func, "SetSourceSampleRate")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult SetSourceSampleRate([NativeName(NativeNameType.Param, "NewSourceSampleRate")] [NativeName(NativeNameType.Type, "UINT32")] uint newSourceSampleRate)
		{
			IXAudio2SourceVoice* ptr = (IXAudio2SourceVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2SourceVoice*, uint, HResult>)(LpVtbl[28]))(ptr, newSourceSampleRate);
			return ret;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IXAudio2Voice (IXAudio2SourceVoice value)
		{
			return Unsafe.As<IXAudio2SourceVoice, IXAudio2Voice>(ref value);
		}

	}

	[NativeName(NativeNameType.StructOrClass, "IXAudio2SubmixVoice")]
	public partial struct IXAudio2SubmixVoice : IComObject, IComObject<IXAudio2SubmixVoice>, IComObject<IXAudio2Voice>
	{
		public unsafe void** LpVtbl;

		public unsafe IXAudio2SubmixVoice (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IXAudio2Voice (IXAudio2SubmixVoice value)
		{
			return Unsafe.As<IXAudio2SubmixVoice, IXAudio2Voice>(ref value);
		}

	}

	[NativeName(NativeNameType.StructOrClass, "IXAudio2MasteringVoice")]
	public partial struct IXAudio2MasteringVoice : IComObject, IComObject<IXAudio2MasteringVoice>, IComObject<IXAudio2Voice>
	{
		public unsafe void** LpVtbl;

		public unsafe IXAudio2MasteringVoice (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		[NativeName(NativeNameType.Func, "GetChannelMask")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetChannelMask([NativeName(NativeNameType.Param, "pChannelmask")] [NativeName(NativeNameType.Type, "DWORD*")] uint* pChannelmask)
		{
			IXAudio2MasteringVoice* ptr = (IXAudio2MasteringVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2MasteringVoice*, uint*, HResult>)(LpVtbl[19]))(ptr, pChannelmask);
			return ret;
		}

		[NativeName(NativeNameType.Func, "GetChannelMask")]
		[return: NativeName(NativeNameType.Type, "HRESULT")]
		public readonly unsafe HResult GetChannelMask([NativeName(NativeNameType.Param, "pChannelmask")] [NativeName(NativeNameType.Type, "DWORD*")] ref uint pChannelmask)
		{
			IXAudio2MasteringVoice* ptr = (IXAudio2MasteringVoice*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			fixed (uint* ppChannelmask = &pChannelmask)
			{
				HResult ret = ((delegate* unmanaged[Stdcall]<IXAudio2MasteringVoice*, uint*, HResult>)(LpVtbl[19]))(ptr, (uint*)ppChannelmask);
				return ret;
			}
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

		public unsafe static implicit operator IXAudio2Voice (IXAudio2MasteringVoice value)
		{
			return Unsafe.As<IXAudio2MasteringVoice, IXAudio2Voice>(ref value);
		}

	}

	[NativeName(NativeNameType.StructOrClass, "IXAudio2EngineCallback")]
	public partial struct IXAudio2EngineCallback : IComObject, IComObject<IXAudio2EngineCallback>
	{
		public unsafe void** LpVtbl;

		public unsafe IXAudio2EngineCallback (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		[NativeName(NativeNameType.Func, "OnProcessingPassStart")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void OnProcessingPassStart()
		{
			IXAudio2EngineCallback* ptr = (IXAudio2EngineCallback*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2EngineCallback*, void>)(*LpVtbl))(ptr);
		}

		[NativeName(NativeNameType.Func, "OnProcessingPassEnd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void OnProcessingPassEnd()
		{
			IXAudio2EngineCallback* ptr = (IXAudio2EngineCallback*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2EngineCallback*, void>)(LpVtbl[1]))(ptr);
		}

		[NativeName(NativeNameType.Func, "OnCriticalError")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void OnCriticalError([NativeName(NativeNameType.Param, "Error")] [NativeName(NativeNameType.Type, "HRESULT")] HResult error)
		{
			IXAudio2EngineCallback* ptr = (IXAudio2EngineCallback*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2EngineCallback*, HResult, void>)(LpVtbl[2]))(ptr, error);
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

	}

	[NativeName(NativeNameType.StructOrClass, "IXAudio2VoiceCallback")]
	public partial struct IXAudio2VoiceCallback : IComObject, IComObject<IXAudio2VoiceCallback>
	{
		public unsafe void** LpVtbl;

		public unsafe IXAudio2VoiceCallback (void** lpVtbl = null)
		{
			LpVtbl = lpVtbl;
		}

		[NativeName(NativeNameType.Func, "OnVoiceProcessingPassStart")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void OnVoiceProcessingPassStart([NativeName(NativeNameType.Param, "BytesRequired")] [NativeName(NativeNameType.Type, "UINT32")] uint bytesRequired)
		{
			IXAudio2VoiceCallback* ptr = (IXAudio2VoiceCallback*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2VoiceCallback*, uint, void>)(*LpVtbl))(ptr, bytesRequired);
		}

		[NativeName(NativeNameType.Func, "OnVoiceProcessingPassEnd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void OnVoiceProcessingPassEnd()
		{
			IXAudio2VoiceCallback* ptr = (IXAudio2VoiceCallback*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2VoiceCallback*, void>)(LpVtbl[1]))(ptr);
		}

		[NativeName(NativeNameType.Func, "OnStreamEnd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void OnStreamEnd()
		{
			IXAudio2VoiceCallback* ptr = (IXAudio2VoiceCallback*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2VoiceCallback*, void>)(LpVtbl[2]))(ptr);
		}

		[NativeName(NativeNameType.Func, "OnBufferStart")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void OnBufferStart([NativeName(NativeNameType.Param, "pBufferContext")] [NativeName(NativeNameType.Type, "void*")] void* pBufferContext)
		{
			IXAudio2VoiceCallback* ptr = (IXAudio2VoiceCallback*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2VoiceCallback*, void*, void>)(LpVtbl[3]))(ptr, pBufferContext);
		}

		[NativeName(NativeNameType.Func, "OnBufferEnd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void OnBufferEnd([NativeName(NativeNameType.Param, "pBufferContext")] [NativeName(NativeNameType.Type, "void*")] void* pBufferContext)
		{
			IXAudio2VoiceCallback* ptr = (IXAudio2VoiceCallback*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2VoiceCallback*, void*, void>)(LpVtbl[4]))(ptr, pBufferContext);
		}

		[NativeName(NativeNameType.Func, "OnLoopEnd")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void OnLoopEnd([NativeName(NativeNameType.Param, "pBufferContext")] [NativeName(NativeNameType.Type, "void*")] void* pBufferContext)
		{
			IXAudio2VoiceCallback* ptr = (IXAudio2VoiceCallback*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2VoiceCallback*, void*, void>)(LpVtbl[5]))(ptr, pBufferContext);
		}

		[NativeName(NativeNameType.Func, "OnVoiceError")]
		[return: NativeName(NativeNameType.Type, "void")]
		public readonly unsafe void OnVoiceError([NativeName(NativeNameType.Param, "pBufferContext")] [NativeName(NativeNameType.Type, "void*")] void* pBufferContext, [NativeName(NativeNameType.Param, "Error")] [NativeName(NativeNameType.Type, "HRESULT")] HResult error)
		{
			IXAudio2VoiceCallback* ptr = (IXAudio2VoiceCallback*)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
			((delegate* unmanaged[Stdcall]<IXAudio2VoiceCallback*, void*, HResult, void>)(LpVtbl[6]))(ptr, pBufferContext, error);
		}

		unsafe void*** IComObject.AsVtblPtr()
		{
			return (void***)Unsafe.AsPointer(ref Unsafe.AsRef(in this));
		}

	}

	/// <summary>
	/// Returned by IXAudio2Voice::GetVoiceDetails<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_VOICE_DETAILS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2VoiceDetails
	{
		/// <summary>
		/// Flags the voice was created with.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "CreationFlags")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint CreationFlags;

		/// <summary>
		/// Flags currently active.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ActiveFlags")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint ActiveFlags;

		/// <summary>
		/// Channels in the voice's input audio.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "InputChannels")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint InputChannels;

		/// <summary>
		/// Sample rate of the voice's input audio.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "InputSampleRate")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint InputSampleRate;



	}

	/// <summary>
	/// Used in XAUDIO2_VOICE_SENDS below<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_SEND_DESCRIPTOR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2SendDescriptor
	{
		/// <summary>
		/// Either 0 or XAUDIO2_SEND_USEFILTER.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint Flags;

		/// <summary>
		/// This send's destination voice.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pOutputVoice")]
		[NativeName(NativeNameType.Type, "IXAudio2Voice*")]
		public unsafe IXAudio2Voice* POutputVoice;



	}

	/// <summary>
	/// Used in the voice creation functions and in IXAudio2Voice::SetOutputVoices<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_VOICE_SENDS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2VoiceSends
	{
		/// <summary>
		/// Number of sends from this voice.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "SendCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint SendCount;

		/// <summary>
		/// Array of SendCount send descriptors.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pSends")]
		[NativeName(NativeNameType.Type, "XAUDIO2_SEND_DESCRIPTOR*")]
		public unsafe XAudio2SendDescriptor* PSends;



	}

	/// <summary>
	/// Used in the voice creation functions and in IXAudio2Voice::SetEffectChain<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_EFFECT_CHAIN")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2EffectChain
	{
		/// <summary>
		/// Number of effects in this voice's effect chain.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "EffectCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint EffectCount;

		/// <summary>
		/// Array of effect descriptors.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pEffectDescriptors")]
		[NativeName(NativeNameType.Type, "XAUDIO2_EFFECT_DESCRIPTOR*")]
		public unsafe XAudio2EffectDescriptor* PEffectDescriptors;



	}

	/// <summary>
	/// Used in XAUDIO2_EFFECT_CHAIN below<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_EFFECT_DESCRIPTOR")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2EffectDescriptor
	{
		/// <summary>
		/// Pointer to the effect object's IUnknown interface.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pEffect")]
		[NativeName(NativeNameType.Type, "IUnknown*")]
		public unsafe IUnknown* PEffect;

		/// <summary>
		/// TRUE if the effect should begin in the enabled state.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "InitialState")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public int InitialState;

		/// <summary>
		/// How many output channels the effect should produce.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "OutputChannels")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint OutputChannels;



	}

	/// <summary>
	/// Used in IXAudio2Voice::Set/GetFilterParameters and Set/GetOutputFilterParameters<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_FILTER_PARAMETERS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2FilterParameters
	{
		/// <summary>
		/// Filter type.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Type")]
		[NativeName(NativeNameType.Type, "XAUDIO2_FILTER_TYPE")]
		public XAudio2FilterType Type;

		/// <summary>
		/// Filter coefficient.<br/>
		/// must be >= 0 and <br/>
		/// <<br/>
		/// = XAUDIO2_MAX_FILTER_FREQUENCY<br/>
		/// See XAudio2CutoffFrequencyToRadians() for state-variable filter types and<br/>
		/// XAudio2CutoffFrequencyToOnePoleCoefficient() for one-pole filter types.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Frequency")]
		[NativeName(NativeNameType.Type, "float")]
		public float Frequency;

		/// <summary>
		/// Reciprocal of the filter's quality factor Q;<br/>
		/// must be > 0 and <br/>
		/// <<br/>
		/// = XAUDIO2_MAX_FILTER_ONEOVERQ.<br/>
		/// Has no effect for one-pole filters.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "OneOverQ")]
		[NativeName(NativeNameType.Type, "float")]
		public float OneOverQ;



	}

	/// <summary>
	/// Used in IXAudio2SourceVoice::SubmitSourceBuffer<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_BUFFER")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2Buffer
	{
		/// <summary>
		/// Either 0 or XAUDIO2_END_OF_STREAM.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Flags")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint Flags;

		/// <summary>
		/// Size of the audio data buffer in bytes.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "AudioBytes")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint AudioBytes;

		/// <summary>
		/// Pointer to the audio data buffer.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pAudioData")]
		[NativeName(NativeNameType.Type, "const BYTE*")]
		public unsafe byte* PAudioData;

		/// <summary>
		/// First sample in this buffer to be played.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "PlayBegin")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint PlayBegin;

		/// <summary>
		/// Length of the region to be played in samples,<br/>
		/// or 0 to play the whole buffer.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "PlayLength")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint PlayLength;

		/// <summary>
		/// First sample of the region to be looped.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LoopBegin")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint LoopBegin;

		/// <summary>
		/// Length of the desired loop region in samples,<br/>
		/// or 0 to loop the entire buffer.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LoopLength")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint LoopLength;

		/// <summary>
		/// Number of times to repeat the loop region,<br/>
		/// or XAUDIO2_LOOP_INFINITE to loop forever.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LoopCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint LoopCount;

		/// <summary>
		/// Context value to be passed back in callbacks.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pContext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PContext;



	}

	/// <summary>
	/// Used in IXAudio2SourceVoice::SubmitSourceBuffer when submitting XWMA data.<br/>
	/// NOTE: If an XWMA sound is submitted in more than one buffer, each buffer's<br/>
	/// pDecodedPacketCumulativeBytes[PacketCount-1] value must be subtracted from<br/>
	/// all the entries in the next buffer's pDecodedPacketCumulativeBytes array.<br/>
	/// And whether a sound is submitted in more than one buffer or not, the final<br/>
	/// buffer of the sound should use the XAUDIO2_END_OF_STREAM flag, or else the<br/>
	/// client must call IXAudio2SourceVoice::Discontinuity after submitting it.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_BUFFER_WMA")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2BufferWma
	{
		/// <summary>
		/// Decoded packet's cumulative size array.<br/>
		/// Each element is the number of bytes accumulated<br/>
		/// when the corresponding XWMA packet is decoded in<br/>
		/// order.  The array must have PacketCount elements.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pDecodedPacketCumulativeBytes")]
		[NativeName(NativeNameType.Type, "const UINT32*")]
		public unsafe uint* PDecodedPacketCumulativeBytes;

		/// <summary>
		/// Number of XWMA packets submitted. Must be >= 1 and<br/>
		/// divide evenly into XAUDIO2_BUFFER.AudioBytes.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "PacketCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint PacketCount;



	}

	/// <summary>
	/// Returned by IXAudio2SourceVoice::GetState<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_VOICE_STATE")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2VoiceState
	{
		/// <summary>
		/// The pContext value provided in the XAUDIO2_BUFFER<br/>
		/// that is currently being processed, or NULL if<br/>
		/// there are no buffers in the queue.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pCurrentBufferContext")]
		[NativeName(NativeNameType.Type, "void*")]
		public unsafe void* PCurrentBufferContext;

		/// <summary>
		/// Number of buffers currently queued on the voice<br/>
		/// (including the one that is being processed).<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "BuffersQueued")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint BuffersQueued;

		/// <summary>
		/// Total number of samples produced by the voice since<br/>
		/// it began processing the current audio stream.<br/>
		/// If XAUDIO2_VOICE_NOSAMPLESPLAYED is specified<br/>
		/// in the call to IXAudio2SourceVoice::GetState,<br/>
		/// this member will not be calculated, saving CPU.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "SamplesPlayed")]
		[NativeName(NativeNameType.Type, "UINT64")]
		public ulong SamplesPlayed;



	}

	/// <summary>
	/// Returned by IXAudio2::GetPerformanceData<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_PERFORMANCE_DATA")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2PerformanceData
	{
		/// <summary>
		/// CPU cycles spent on audio processing since the<br/>
		/// last call to StartEngine or GetPerformanceData.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "AudioCyclesSinceLastQuery")]
		[NativeName(NativeNameType.Type, "UINT64")]
		public ulong AudioCyclesSinceLastQuery;

		/// <summary>
		/// Total CPU cycles elapsed since the last call<br/>
		/// (only counts the CPU XAudio2 is running on).<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "TotalCyclesSinceLastQuery")]
		[NativeName(NativeNameType.Type, "UINT64")]
		public ulong TotalCyclesSinceLastQuery;

		/// <summary>
		/// Fewest CPU cycles spent processing any one<br/>
		/// audio quantum since the last call.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "MinimumCyclesPerQuantum")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint MinimumCyclesPerQuantum;

		/// <summary>
		/// Most CPU cycles spent processing any one<br/>
		/// audio quantum since the last call.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "MaximumCyclesPerQuantum")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint MaximumCyclesPerQuantum;

		/// <summary>
		/// Total heap space currently in use.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "MemoryUsageInBytes")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint MemoryUsageInBytes;

		/// <summary>
		/// Minimum delay from when a sample is read from a<br/>
		/// source buffer to when it reaches the speakers.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "CurrentLatencyInSamples")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint CurrentLatencyInSamples;

		/// <summary>
		/// Audio dropouts since the engine was started.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "GlitchesSinceEngineStarted")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint GlitchesSinceEngineStarted;

		/// <summary>
		/// Source voices currently playing.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ActiveSourceVoiceCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint ActiveSourceVoiceCount;

		/// <summary>
		/// Source voices currently existing.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "TotalSourceVoiceCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint TotalSourceVoiceCount;

		/// <summary>
		/// Submix voices currently playing/existing.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ActiveSubmixVoiceCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint ActiveSubmixVoiceCount;

		/// <summary>
		/// Resample xAPOs currently active.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ActiveResamplerCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint ActiveResamplerCount;

		/// <summary>
		/// MatrixMix xAPOs currently active.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ActiveMatrixMixCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint ActiveMatrixMixCount;

		/// <summary>
		/// Number of source voices decoding XMA data.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ActiveXmaSourceVoices")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint ActiveXmaSourceVoices;

		/// <summary>
		/// A voice can use more than one XMA stream.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ActiveXmaStreams")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint ActiveXmaStreams;



	}

	/// <summary>
	/// Used in IXAudio2::SetDebugConfiguration<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2_DEBUG_CONFIGURATION")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2DebugConfiguration
	{
		/// <summary>
		/// Bitmap of enabled debug message types.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "TraceMask")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint TraceMask;

		/// <summary>
		/// Message types that will break into the debugger.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "BreakMask")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint BreakMask;

		/// <summary>
		/// Whether to log the thread ID with each message.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LogThreadID")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public int LogThreadID;

		/// <summary>
		/// Whether to log the source file and line number.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LogFileline")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public int LogFileline;

		/// <summary>
		/// Whether to log the function name.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LogFunctionName")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public int LogFunctionName;

		/// <summary>
		/// Whether to log message timestamps.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LogTiming")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public int LogTiming;



	}

	/// <summary>
	/// XAudio 2.8<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "AudioVolumeMeter")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct AudioVolumeMeter
	{


	}

	[NativeName(NativeNameType.StructOrClass, "AudioReverb")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct AudioReverb
	{


	}

	/// <summary>
	/// XAUDIO2FX_VOLUMEMETER_LEVELS: Receives results from GetEffectParameters().<br/>
	/// The user is responsible for allocating pPeakLevels, pRMSLevels, and<br/>
	/// initializing ChannelCount accordingly.<br/>
	/// The volume meter does not support SetEffectParameters().<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2FX_VOLUMEMETER_LEVELS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2FxVolumemeterLevels
	{
		/// <summary>
		/// Peak levels table: receives maximum absolute level for each channel<br/>
		/// over a processing pass; may be NULL if pRMSLevls != NULL,<br/>
		/// otherwise must have at least ChannelCount elements.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pPeakLevels")]
		[NativeName(NativeNameType.Type, "float*")]
		public unsafe float* PPeakLevels;

		/// <summary>
		/// Root mean square levels table: receives RMS level for each channel<br/>
		/// over a processing pass; may be NULL if pPeakLevels != NULL,<br/>
		/// otherwise must have at least ChannelCount elements.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pRMSLevels")]
		[NativeName(NativeNameType.Type, "float*")]
		public unsafe float* PRMSLevels;

		/// <summary>
		/// Number of channels being processed by the volume meter APO<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ChannelCount")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint ChannelCount;



	}

	/// <summary>
	/// XAUDIO2FX_REVERB_PARAMETERS: Native parameter set for the reverb effect<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2FX_REVERB_PARAMETERS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2FxReverbParameters
	{
		/// <summary>
		/// [0, 100] (percentage)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "WetDryMix")]
		[NativeName(NativeNameType.Type, "float")]
		public float WetDryMix;

		/// <summary>
		/// [0, 300] in ms<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ReflectionsDelay")]
		[NativeName(NativeNameType.Type, "UINT32")]
		public uint ReflectionsDelay;

		/// <summary>
		/// [0, 85] in ms<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ReverbDelay")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte ReverbDelay;

		/// <summary>
		/// 7.1: [0, 20] in ms, all other: [0, 5] in ms<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "RearDelay")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte RearDelay;

		/// <summary>
		/// 7.1: [0, 5] in ms, all other: not used, but still validated<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "SideDelay")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte SideDelay;

		/// <summary>
		/// [0, 30] no units<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "PositionLeft")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte PositionLeft;

		/// <summary>
		/// [0, 30] no units, ignored when configured to mono<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "PositionRight")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte PositionRight;

		/// <summary>
		/// [0, 30] no units<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "PositionMatrixLeft")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte PositionMatrixLeft;

		/// <summary>
		/// [0, 30] no units, ignored when configured to mono<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "PositionMatrixRight")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte PositionMatrixRight;

		/// <summary>
		/// [0, 15] no units<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "EarlyDiffusion")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte EarlyDiffusion;

		/// <summary>
		/// [0, 15] no units<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LateDiffusion")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte LateDiffusion;

		/// <summary>
		/// [0, 12] no units<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LowEQGain")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte LowEQGain;

		/// <summary>
		/// [0, 9] no units<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "LowEQCutoff")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte LowEQCutoff;

		/// <summary>
		/// [0, 8] no units<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "HighEQGain")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte HighEQGain;

		/// <summary>
		/// [0, 14] no units<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "HighEQCutoff")]
		[NativeName(NativeNameType.Type, "BYTE")]
		public byte HighEQCutoff;

		/// <summary>
		/// [20, 20000] in Hz<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "RoomFilterFreq")]
		[NativeName(NativeNameType.Type, "float")]
		public float RoomFilterFreq;

		/// <summary>
		/// [-100, 0] in dB<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "RoomFilterMain")]
		[NativeName(NativeNameType.Type, "float")]
		public float RoomFilterMain;

		/// <summary>
		/// [-100, 0] in dB<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "RoomFilterHF")]
		[NativeName(NativeNameType.Type, "float")]
		public float RoomFilterHF;

		/// <summary>
		/// [-100, 20] in dB<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ReflectionsGain")]
		[NativeName(NativeNameType.Type, "float")]
		public float ReflectionsGain;

		/// <summary>
		/// [-100, 20] in dB<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ReverbGain")]
		[NativeName(NativeNameType.Type, "float")]
		public float ReverbGain;

		/// <summary>
		/// [0.1, inf] in seconds<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "DecayTime")]
		[NativeName(NativeNameType.Type, "float")]
		public float DecayTime;

		/// <summary>
		/// [0, 100] (percentage)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Density")]
		[NativeName(NativeNameType.Type, "float")]
		public float Density;

		/// <summary>
		/// [1, 100] in feet<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "RoomSize")]
		[NativeName(NativeNameType.Type, "float")]
		public float RoomSize;

		/// <summary>
		/// TRUE to disable late field reflections<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "DisableLateField")]
		[NativeName(NativeNameType.Type, "BOOL")]
		public int DisableLateField;



	}

	/// <summary>
	/// XAUDIO2FX_REVERB_I3DL2_PARAMETERS: Parameter set compliant with the I3DL2 standard<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "XAUDIO2FX_REVERB_I3DL2_PARAMETERS")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct XAudio2FxReverbI3Dl2Parameters
	{
		/// <summary>
		/// [0, 100] (percentage)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "WetDryMix")]
		[NativeName(NativeNameType.Type, "float")]
		public float WetDryMix;

		/// <summary>
		/// [-10000, 0] in mB (hundredths of decibels)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Room")]
		[NativeName(NativeNameType.Type, "INT32")]
		public int Room;

		/// <summary>
		/// [-10000, 0] in mB (hundredths of decibels)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "RoomHF")]
		[NativeName(NativeNameType.Type, "INT32")]
		public int RoomHF;

		/// <summary>
		/// [0.0, 10.0]<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "RoomRolloffFactor")]
		[NativeName(NativeNameType.Type, "float")]
		public float RoomRolloffFactor;

		/// <summary>
		/// [0.1, 20.0] in seconds<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "DecayTime")]
		[NativeName(NativeNameType.Type, "float")]
		public float DecayTime;

		/// <summary>
		/// [0.1, 2.0]<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "DecayHFRatio")]
		[NativeName(NativeNameType.Type, "float")]
		public float DecayHFRatio;

		/// <summary>
		/// [-10000, 1000] in mB (hundredths of decibels)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Reflections")]
		[NativeName(NativeNameType.Type, "INT32")]
		public int Reflections;

		/// <summary>
		/// [0.0, 0.3] in seconds<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ReflectionsDelay")]
		[NativeName(NativeNameType.Type, "float")]
		public float ReflectionsDelay;

		/// <summary>
		/// [-10000, 2000] in mB (hundredths of decibels)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Reverb")]
		[NativeName(NativeNameType.Type, "INT32")]
		public int Reverb;

		/// <summary>
		/// [0.0, 0.1] in seconds<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "ReverbDelay")]
		[NativeName(NativeNameType.Type, "float")]
		public float ReverbDelay;

		/// <summary>
		/// [0.0, 100.0] (percentage)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Diffusion")]
		[NativeName(NativeNameType.Type, "float")]
		public float Diffusion;

		/// <summary>
		/// [0.0, 100.0] (percentage)<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "Density")]
		[NativeName(NativeNameType.Type, "float")]
		public float Density;

		/// <summary>
		/// [20.0, 20000.0] in Hz<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "HFReference")]
		[NativeName(NativeNameType.Type, "float")]
		public float HFReference;



	}

}
