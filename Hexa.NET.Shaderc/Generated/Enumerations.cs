// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;

namespace Hexa.NET.Shaderc
{
	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_target_env")]
	public enum ShadercTargetEnv
	{
		/// <summary>
		/// SPIR-V under Vulkan semantics<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_target_env_vulkan")]
		Vulkan = unchecked(0),

		/// <summary>
		/// SPIR-V under OpenGL semantics<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_target_env_opengl")]
		Opengl = unchecked(1),

		/// <summary>
		/// SPIR-V under OpenGL semantics,<br/>
		/// including compatibility profile<br/>
		/// functions<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_target_env_opengl_compat")]
		OpenglCompat = unchecked(2),

		/// <summary>
		/// Deprecated, SPIR-V under WebGPU<br/>
		/// semantics<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_target_env_webgpu")]
		Webgpu = unchecked(3),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_target_env_default")]
		Default = Vulkan,

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_env_version")]
	public enum ShadercEnvVersion
	{
		/// <summary>
		/// For Vulkan, use Vulkan's mapping of version numbers to integers.<br/>
		/// See vulkan.h<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_env_version_vulkan_1_0")]
		Vulkan10 = unchecked((int)((1U<<22))),

		/// <summary>
		/// For Vulkan, use Vulkan's mapping of version numbers to integers.<br/>
		/// See vulkan.h<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_env_version_vulkan_1_1")]
		Vulkan11 = unchecked((int)((1U<<22)|(1<<12))),

		/// <summary>
		/// For Vulkan, use Vulkan's mapping of version numbers to integers.<br/>
		/// See vulkan.h<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_env_version_vulkan_1_2")]
		Vulkan12 = unchecked((int)((1U<<22)|(2<<12))),

		/// <summary>
		/// For Vulkan, use Vulkan's mapping of version numbers to integers.<br/>
		/// See vulkan.h<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_env_version_vulkan_1_3")]
		Vulkan13 = unchecked((int)((1U<<22)|(3<<12))),

		/// <summary>
		/// For OpenGL, use the number from #version in shaders.<br/>
		/// TODO(dneto): Currently no difference between OpenGL 4.5 and 4.6.<br/>
		/// See glslang/Standalone/Standalone.cpp<br/>
		/// TODO(dneto): Glslang doesn't accept a OpenGL client version of 460.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_env_version_opengl_4_5")]
		Opengl45 = unchecked(450),

		/// <summary>
		/// Deprecated, WebGPU env never defined versions<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_env_version_webgpu")]
		Webgpu = unchecked(451),

	}

	/// <summary>
	/// The known versions of SPIR-V.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_spirv_version")]
	public enum ShadercSpirvVersion
	{
		/// <summary>
		/// Use the values used for word 1 of a SPIR-V binary:<br/>
		/// - bits 24 to 31: zero<br/>
		/// - bits 16 to 23: major version number<br/>
		/// - bits 8 to 15: minor version number<br/>
		/// - bits 0 to 7: zero<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_spirv_version_1_0")]
		Version10 = unchecked((int)0x010000u),

		/// <summary>
		/// Use the values used for word 1 of a SPIR-V binary:<br/>
		/// - bits 24 to 31: zero<br/>
		/// - bits 16 to 23: major version number<br/>
		/// - bits 8 to 15: minor version number<br/>
		/// - bits 0 to 7: zero<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_spirv_version_1_1")]
		Version11 = unchecked((int)0x010100u),

		/// <summary>
		/// Use the values used for word 1 of a SPIR-V binary:<br/>
		/// - bits 24 to 31: zero<br/>
		/// - bits 16 to 23: major version number<br/>
		/// - bits 8 to 15: minor version number<br/>
		/// - bits 0 to 7: zero<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_spirv_version_1_2")]
		Version12 = unchecked((int)0x010200u),

		/// <summary>
		/// Use the values used for word 1 of a SPIR-V binary:<br/>
		/// - bits 24 to 31: zero<br/>
		/// - bits 16 to 23: major version number<br/>
		/// - bits 8 to 15: minor version number<br/>
		/// - bits 0 to 7: zero<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_spirv_version_1_3")]
		Version13 = unchecked((int)0x010300u),

		/// <summary>
		/// Use the values used for word 1 of a SPIR-V binary:<br/>
		/// - bits 24 to 31: zero<br/>
		/// - bits 16 to 23: major version number<br/>
		/// - bits 8 to 15: minor version number<br/>
		/// - bits 0 to 7: zero<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_spirv_version_1_4")]
		Version14 = unchecked((int)0x010400u),

		/// <summary>
		/// Use the values used for word 1 of a SPIR-V binary:<br/>
		/// - bits 24 to 31: zero<br/>
		/// - bits 16 to 23: major version number<br/>
		/// - bits 8 to 15: minor version number<br/>
		/// - bits 0 to 7: zero<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_spirv_version_1_5")]
		Version15 = unchecked((int)0x010500u),

		/// <summary>
		/// Use the values used for word 1 of a SPIR-V binary:<br/>
		/// - bits 24 to 31: zero<br/>
		/// - bits 16 to 23: major version number<br/>
		/// - bits 8 to 15: minor version number<br/>
		/// - bits 0 to 7: zero<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_spirv_version_1_6")]
		Version16 = unchecked((int)0x010600u),

	}

	/// <summary>
	/// Indicate the status of a compilation.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_compilation_status")]
	public enum ShadercCompilationStatus
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_compilation_status_success")]
		Success = unchecked(0),

		/// <summary>
		/// error stage deduction<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_compilation_status_invalid_stage")]
		InvalidStage = unchecked(1),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_compilation_status_compilation_error")]
		Error = unchecked(2),

		/// <summary>
		/// unexpected failure<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_compilation_status_internal_error")]
		InternalError = unchecked(3),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_compilation_status_null_result_object")]
		NullResultObject = unchecked(4),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_compilation_status_invalid_assembly")]
		InvalidAssembly = unchecked(5),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_compilation_status_validation_error")]
		ValidationError = unchecked(6),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_compilation_status_transformation_error")]
		TransformationError = unchecked(7),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_compilation_status_configuration_error")]
		ConfigurationError = unchecked(8),

	}

	/// <summary>
	/// Source language kind.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_source_language")]
	public enum ShadercSourceLanguage
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_source_language_glsl")]
		Glsl = unchecked(0),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_source_language_hlsl")]
		Hlsl = unchecked(1),

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_shader_kind")]
	public enum ShadercShaderKind
	{
		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_vertex_shader")]
		VertexShader = unchecked(0),

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_fragment_shader")]
		FragmentShader = unchecked(1),

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_compute_shader")]
		ComputeShader = unchecked(2),

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_geometry_shader")]
		GeometryShader = unchecked(3),

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_tess_control_shader")]
		TessControlShader = unchecked(4),

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_tess_evaluation_shader")]
		TessEvaluationShader = unchecked(5),

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_vertex_shader")]
		GlslVertexShader = VertexShader,

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_fragment_shader")]
		GlslFragmentShader = FragmentShader,

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_compute_shader")]
		GlslComputeShader = ComputeShader,

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_geometry_shader")]
		GlslGeometryShader = GeometryShader,

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_tess_control_shader")]
		GlslTessControlShader = TessControlShader,

		/// <summary>
		/// Forced shader kinds. These shader kinds force the compiler to compile the<br/>
		/// source code as the specified kind of shader.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_tess_evaluation_shader")]
		GlslTessEvaluationShader = TessEvaluationShader,

		/// <summary>
		/// Deduce the shader kind from #pragma annotation in the source code. Compiler<br/>
		/// will emit error if #pragma annotation is not found.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_infer_from_source")]
		GlslInferFromSource = unchecked(6),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_vertex_shader")]
		GlslDefaultVertexShader = unchecked(7),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_fragment_shader")]
		GlslDefaultFragmentShader = unchecked(8),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_compute_shader")]
		GlslDefaultComputeShader = unchecked(9),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_geometry_shader")]
		GlslDefaultGeometryShader = unchecked(10),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_tess_control_shader")]
		GlslDefaultTessControlShader = unchecked(11),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_tess_evaluation_shader")]
		GlslDefaultTessEvaluationShader = unchecked(12),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_spirv_assembly")]
		SpirvAssembly = unchecked(13),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_raygen_shader")]
		RaygenShader = unchecked(14),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_anyhit_shader")]
		AnyhitShader = unchecked(15),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_closesthit_shader")]
		ClosesthitShader = unchecked(16),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_miss_shader")]
		MissShader = unchecked(17),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_intersection_shader")]
		IntersectionShader = unchecked(18),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_callable_shader")]
		CallableShader = unchecked(19),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_raygen_shader")]
		GlslRaygenShader = RaygenShader,

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_anyhit_shader")]
		GlslAnyhitShader = AnyhitShader,

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_closesthit_shader")]
		GlslClosesthitShader = ClosesthitShader,

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_miss_shader")]
		GlslMissShader = MissShader,

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_intersection_shader")]
		GlslIntersectionShader = IntersectionShader,

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_callable_shader")]
		GlslCallableShader = CallableShader,

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_raygen_shader")]
		GlslDefaultRaygenShader = unchecked(20),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_anyhit_shader")]
		GlslDefaultAnyhitShader = unchecked(21),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_closesthit_shader")]
		GlslDefaultClosesthitShader = unchecked(22),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_miss_shader")]
		GlslDefaultMissShader = unchecked(23),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_intersection_shader")]
		GlslDefaultIntersectionShader = unchecked(24),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_callable_shader")]
		GlslDefaultCallableShader = unchecked(25),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_task_shader")]
		TaskShader = unchecked(26),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_mesh_shader")]
		MeshShader = unchecked(27),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_task_shader")]
		GlslTaskShader = TaskShader,

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_mesh_shader")]
		GlslMeshShader = MeshShader,

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_task_shader")]
		GlslDefaultTaskShader = unchecked(28),

		/// <summary>
		/// Default shader kinds. Compiler will fall back to compile the source code as<br/>
		/// the specified kind of shader when #pragma annotation is not found in the<br/>
		/// source code.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_glsl_default_mesh_shader")]
		GlslDefaultMeshShader = unchecked(29),

	}

	/// <summary>
	/// To be documented.
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_profile")]
	public enum ShadercProfile
	{
		/// <summary>
		/// Used if and only if GLSL version did not specify<br/>
		/// profiles.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_profile_none")]
		None = unchecked(0),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_profile_core")]
		Core = unchecked(1),

		/// <summary>
		/// Disabled. This generates an error<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_profile_compatibility")]
		Compatibility = unchecked(2),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_profile_es")]
		Es = unchecked(3),

	}

	/// <summary>
	/// Optimization level.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_optimization_level")]
	public enum ShadercOptimizationLevel
	{
		/// <summary>
		/// no optimization<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_optimization_level_zero")]
		Zero = unchecked(0),

		/// <summary>
		/// optimize towards reducing code size<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_optimization_level_size")]
		Size = unchecked(1),

		/// <summary>
		/// optimize towards performance<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_optimization_level_performance")]
		Performance = unchecked(2),

	}

	/// <summary>
	/// Resource limits.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_limit")]
	public enum ShadercLimit
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_lights")]
		MaxLights = unchecked(0),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_clip_planes")]
		MaxClipPlanes = unchecked(1),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_texture_units")]
		MaxTextureUnits = unchecked(2),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_texture_coords")]
		MaxTextureCoords = unchecked(3),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_vertex_attribs")]
		MaxVertexAttribs = unchecked(4),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_vertex_uniform_components")]
		MaxVertexUniformComponents = unchecked(5),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_varying_floats")]
		MaxVaryingFloats = unchecked(6),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_vertex_texture_image_units")]
		MaxVertexTextureImageUnits = unchecked(7),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_combined_texture_image_units")]
		MaxCombinedTextureImageUnits = unchecked(8),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_texture_image_units")]
		MaxTextureImageUnits = unchecked(9),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_fragment_uniform_components")]
		MaxFragmentUniformComponents = unchecked(10),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_draw_buffers")]
		MaxDrawBuffers = unchecked(11),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_vertex_uniform_vectors")]
		MaxVertexUniformVectors = unchecked(12),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_varying_vectors")]
		MaxVaryingVectors = unchecked(13),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_fragment_uniform_vectors")]
		MaxFragmentUniformVectors = unchecked(14),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_vertex_output_vectors")]
		MaxVertexOutputVectors = unchecked(15),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_fragment_input_vectors")]
		MaxFragmentInputVectors = unchecked(16),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_min_program_texel_offset")]
		MinProgramTexelOffset = unchecked(17),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_program_texel_offset")]
		MaxProgramTexelOffset = unchecked(18),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_clip_distances")]
		MaxClipDistances = unchecked(19),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_work_group_count_x")]
		MaxComputeWorkGroupCountx = unchecked(20),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_work_group_count_y")]
		MaxComputeWorkGroupCounty = unchecked(21),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_work_group_count_z")]
		MaxComputeWorkGroupCountz = unchecked(22),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_work_group_size_x")]
		MaxComputeWorkGroupSizex = unchecked(23),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_work_group_size_y")]
		MaxComputeWorkGroupSizey = unchecked(24),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_work_group_size_z")]
		MaxComputeWorkGroupSizez = unchecked(25),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_uniform_components")]
		MaxComputeUniformComponents = unchecked(26),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_texture_image_units")]
		MaxComputeTextureImageUnits = unchecked(27),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_image_uniforms")]
		MaxComputeImageUniforms = unchecked(28),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_atomic_counters")]
		MaxComputeAtomicCounters = unchecked(29),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_compute_atomic_counter_buffers")]
		MaxComputeAtomicCounterBuffers = unchecked(30),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_varying_components")]
		MaxVaryingComponents = unchecked(31),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_vertex_output_components")]
		MaxVertexOutputComponents = unchecked(32),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_geometry_input_components")]
		MaxGeometryInputComponents = unchecked(33),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_geometry_output_components")]
		MaxGeometryOutputComponents = unchecked(34),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_fragment_input_components")]
		MaxFragmentInputComponents = unchecked(35),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_image_units")]
		MaxImageUnits = unchecked(36),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_combined_image_units_and_fragment_outputs")]
		MaxCombinedImageUnitsAndFragmentOutputs = unchecked(37),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_combined_shader_output_resources")]
		MaxCombinedShaderOutputResources = unchecked(38),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_image_samples")]
		MaxImageSamples = unchecked(39),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_vertex_image_uniforms")]
		MaxVertexImageUniforms = unchecked(40),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_control_image_uniforms")]
		MaxTessControlImageUniforms = unchecked(41),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_evaluation_image_uniforms")]
		MaxTessEvaluationImageUniforms = unchecked(42),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_geometry_image_uniforms")]
		MaxGeometryImageUniforms = unchecked(43),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_fragment_image_uniforms")]
		MaxFragmentImageUniforms = unchecked(44),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_combined_image_uniforms")]
		MaxCombinedImageUniforms = unchecked(45),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_geometry_texture_image_units")]
		MaxGeometryTextureImageUnits = unchecked(46),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_geometry_output_vertices")]
		MaxGeometryOutputVertices = unchecked(47),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_geometry_total_output_components")]
		MaxGeometryTotalOutputComponents = unchecked(48),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_geometry_uniform_components")]
		MaxGeometryUniformComponents = unchecked(49),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_geometry_varying_components")]
		MaxGeometryVaryingComponents = unchecked(50),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_control_input_components")]
		MaxTessControlInputComponents = unchecked(51),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_control_output_components")]
		MaxTessControlOutputComponents = unchecked(52),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_control_texture_image_units")]
		MaxTessControlTextureImageUnits = unchecked(53),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_control_uniform_components")]
		MaxTessControlUniformComponents = unchecked(54),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_control_total_output_components")]
		MaxTessControlTotalOutputComponents = unchecked(55),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_evaluation_input_components")]
		MaxTessEvaluationInputComponents = unchecked(56),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_evaluation_output_components")]
		MaxTessEvaluationOutputComponents = unchecked(57),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_evaluation_texture_image_units")]
		MaxTessEvaluationTextureImageUnits = unchecked(58),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_evaluation_uniform_components")]
		MaxTessEvaluationUniformComponents = unchecked(59),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_patch_components")]
		MaxTessPatchComponents = unchecked(60),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_patch_vertices")]
		MaxPatchVertices = unchecked(61),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_gen_level")]
		MaxTessGenLevel = unchecked(62),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_viewports")]
		MaxViewports = unchecked(63),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_vertex_atomic_counters")]
		MaxVertexAtomicCounters = unchecked(64),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_control_atomic_counters")]
		MaxTessControlAtomicCounters = unchecked(65),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_evaluation_atomic_counters")]
		MaxTessEvaluationAtomicCounters = unchecked(66),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_geometry_atomic_counters")]
		MaxGeometryAtomicCounters = unchecked(67),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_fragment_atomic_counters")]
		MaxFragmentAtomicCounters = unchecked(68),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_combined_atomic_counters")]
		MaxCombinedAtomicCounters = unchecked(69),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_atomic_counter_bindings")]
		MaxAtomicCounterBindings = unchecked(70),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_vertex_atomic_counter_buffers")]
		MaxVertexAtomicCounterBuffers = unchecked(71),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_control_atomic_counter_buffers")]
		MaxTessControlAtomicCounterBuffers = unchecked(72),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_tess_evaluation_atomic_counter_buffers")]
		MaxTessEvaluationAtomicCounterBuffers = unchecked(73),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_geometry_atomic_counter_buffers")]
		MaxGeometryAtomicCounterBuffers = unchecked(74),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_fragment_atomic_counter_buffers")]
		MaxFragmentAtomicCounterBuffers = unchecked(75),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_combined_atomic_counter_buffers")]
		MaxCombinedAtomicCounterBuffers = unchecked(76),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_atomic_counter_buffer_size")]
		MaxAtomicCounterBufferSize = unchecked(77),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_transform_feedback_buffers")]
		MaxTransformFeedbackBuffers = unchecked(78),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_transform_feedback_interleaved_components")]
		MaxTransformFeedbackInterleavedComponents = unchecked(79),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_cull_distances")]
		MaxCullDistances = unchecked(80),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_combined_clip_and_cull_distances")]
		MaxCombinedClipAndCullDistances = unchecked(81),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_samples")]
		MaxSamples = unchecked(82),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_output_vertices_nv")]
		MaxMeshOutputVerticesNv = unchecked(83),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_output_primitives_nv")]
		MaxMeshOutputPrimitivesNv = unchecked(84),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_work_group_size_x_nv")]
		MaxMeshWorkGroupSizexNv = unchecked(85),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_work_group_size_y_nv")]
		MaxMeshWorkGroupSizeyNv = unchecked(86),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_work_group_size_z_nv")]
		MaxMeshWorkGroupSizezNv = unchecked(87),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_task_work_group_size_x_nv")]
		MaxTaskWorkGroupSizexNv = unchecked(88),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_task_work_group_size_y_nv")]
		MaxTaskWorkGroupSizeyNv = unchecked(89),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_task_work_group_size_z_nv")]
		MaxTaskWorkGroupSizezNv = unchecked(90),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_view_count_nv")]
		MaxMeshViewCountNv = unchecked(91),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_output_vertices_ext")]
		MaxMeshOutputVerticesExt = unchecked(92),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_output_primitives_ext")]
		MaxMeshOutputPrimitivesExt = unchecked(93),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_work_group_size_x_ext")]
		MaxMeshWorkGroupSizexExt = unchecked(94),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_work_group_size_y_ext")]
		MaxMeshWorkGroupSizeyExt = unchecked(95),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_work_group_size_z_ext")]
		MaxMeshWorkGroupSizezExt = unchecked(96),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_task_work_group_size_x_ext")]
		MaxTaskWorkGroupSizexExt = unchecked(97),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_task_work_group_size_y_ext")]
		MaxTaskWorkGroupSizeyExt = unchecked(98),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_task_work_group_size_z_ext")]
		MaxTaskWorkGroupSizezExt = unchecked(99),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_mesh_view_count_ext")]
		MaxMeshViewCountExt = unchecked(100),

		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_limit_max_dual_source_draw_buffers_ext")]
		MaxDualSourceDrawBuffersExt = unchecked(101),

	}

	/// <summary>
	/// Uniform resource kinds.<br/>
	/// In Vulkan, uniform resources are bound to the pipeline via descriptors<br/>
	/// with numbered bindings and sets.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_uniform_kind")]
	public enum ShadercUniformKind
	{
		/// <summary>
		/// Image and image buffer.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_uniform_kind_image")]
		Image = unchecked(0),

		/// <summary>
		/// Pure sampler.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_uniform_kind_sampler")]
		Sampler = unchecked(1),

		/// <summary>
		/// Sampled texture in GLSL, and Shader Resource View in HLSL.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_uniform_kind_texture")]
		Texture = unchecked(2),

		/// <summary>
		/// Uniform Buffer Object (UBO) in GLSL.  Cbuffer in HLSL.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_uniform_kind_buffer")]
		Buffer = unchecked(3),

		/// <summary>
		/// Shader Storage Buffer Object (SSBO) in GLSL.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_uniform_kind_storage_buffer")]
		StorageBuffer = unchecked(4),

		/// <summary>
		/// Unordered Access View, in HLSL.  (Writable storage image or storage<br/>
		/// buffer.)<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_uniform_kind_unordered_access_view")]
		UnorderedAccessView = unchecked(5),

	}

	/// <summary>
	/// The kinds of include requests.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "shaderc_include_type")]
	public enum ShadercIncludeType
	{
		/// <summary>
		/// E.g. #include "source"<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_include_type_relative")]
		Relative = unchecked(0),

		/// <summary>
		/// E.g. #include <br/>
		/// <source<br/>
		/// ><br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "shaderc_include_type_standard")]
		Standard = unchecked(1),

	}

}
