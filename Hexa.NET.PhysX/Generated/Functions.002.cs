// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.PhysX
{
	public unsafe partial class PhysX
	{

		[LibraryImport(LibName, EntryPoint = "PxAllocatorCallback_deallocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxAllocatorCallbackDeallocateMutNative(PhysxPxAllocatorCallbackPod* selfPod, void* ptr);

		public static void PxAllocatorCallbackDeallocateMut( PhysxPxAllocatorCallbackPod* selfPod,  void* ptr)
		{
			PxAllocatorCallbackDeallocateMutNative(selfPod, ptr);
		}

		[LibraryImport(LibName, EntryPoint = "PxAssertHandler_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxAssertHandlerDeleteNative(PhysxPxAssertHandlerPod* selfPod);

		public static void PxAssertHandlerDelete( PhysxPxAssertHandlerPod* selfPod)
		{
			PxAssertHandlerDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetAssertHandler")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxAssertHandlerPod* PhysPxGetAssertHandlerNative();

		public static PhysxPxAssertHandlerPod* PhysPxGetAssertHandler()
		{
			PhysxPxAssertHandlerPod* ret = PhysPxGetAssertHandlerNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxSetAssertHandler")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxSetAssertHandlerNative(PhysxPxAssertHandlerPod* handlerPod);

		public static void PhysPxSetAssertHandler( PhysxPxAssertHandlerPod* handlerPod)
		{
			PhysPxSetAssertHandlerNative(handlerPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxFoundationReleaseMutNative(PhysxPxFoundationPod* selfPod);

		public static void PxFoundationReleaseMut( PhysxPxFoundationPod* selfPod)
		{
			PxFoundationReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_getErrorCallback_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxErrorCallbackPod* PxFoundationGetErrorCallbackMutNative(PhysxPxFoundationPod* selfPod);

		public static PhysxPxErrorCallbackPod* PxFoundationGetErrorCallbackMut( PhysxPxFoundationPod* selfPod)
		{
			PhysxPxErrorCallbackPod* ret = PxFoundationGetErrorCallbackMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_setErrorLevel_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxFoundationSetErrorLevelMutNative(PhysxPxFoundationPod* selfPod, uint mask);

		public static void PxFoundationSetErrorLevelMut( PhysxPxFoundationPod* selfPod,  uint mask)
		{
			PxFoundationSetErrorLevelMutNative(selfPod, mask);
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_getErrorLevel")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxFoundationGetErrorLevelNative(PhysxPxFoundationPod* selfPod);

		public static uint PxFoundationGetErrorLevel( PhysxPxFoundationPod* selfPod)
		{
			uint ret = PxFoundationGetErrorLevelNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_getAllocatorCallback_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxAllocatorCallbackPod* PxFoundationGetAllocatorCallbackMutNative(PhysxPxFoundationPod* selfPod);

		public static PhysxPxAllocatorCallbackPod* PxFoundationGetAllocatorCallbackMut( PhysxPxFoundationPod* selfPod)
		{
			PhysxPxAllocatorCallbackPod* ret = PxFoundationGetAllocatorCallbackMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_getReportAllocationNames")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxFoundationGetReportAllocationNamesNative(PhysxPxFoundationPod* selfPod);

		public static bool PxFoundationGetReportAllocationNames( PhysxPxFoundationPod* selfPod)
		{
			byte ret = PxFoundationGetReportAllocationNamesNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_setReportAllocationNames_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxFoundationSetReportAllocationNamesMutNative(PhysxPxFoundationPod* selfPod, byte value);

		public static void PxFoundationSetReportAllocationNamesMut( PhysxPxFoundationPod* selfPod,  bool value)
		{
			PxFoundationSetReportAllocationNamesMutNative(selfPod, value ? (byte)1 : (byte)0);
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_registerAllocationListener_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxFoundationRegisterAllocationListenerMutNative(PhysxPxFoundationPod* selfPod, PhysxPxAllocationListenerPod* listenerPod);

		public static void PxFoundationRegisterAllocationListenerMut( PhysxPxFoundationPod* selfPod,  PhysxPxAllocationListenerPod* listenerPod)
		{
			PxFoundationRegisterAllocationListenerMutNative(selfPod, listenerPod);
		}

		public static void PxFoundationRegisterAllocationListenerMut( PhysxPxFoundationPod* selfPod,  ref PhysxPxAllocationListenerPod listenerPod)
		{
			fixed (PhysxPxAllocationListenerPod* plistenerPod = &listenerPod)
			{
				PxFoundationRegisterAllocationListenerMutNative(selfPod, (PhysxPxAllocationListenerPod*)plistenerPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_deregisterAllocationListener_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxFoundationDeregisterAllocationListenerMutNative(PhysxPxFoundationPod* selfPod, PhysxPxAllocationListenerPod* listenerPod);

		public static void PxFoundationDeregisterAllocationListenerMut( PhysxPxFoundationPod* selfPod,  PhysxPxAllocationListenerPod* listenerPod)
		{
			PxFoundationDeregisterAllocationListenerMutNative(selfPod, listenerPod);
		}

		public static void PxFoundationDeregisterAllocationListenerMut( PhysxPxFoundationPod* selfPod,  ref PhysxPxAllocationListenerPod listenerPod)
		{
			fixed (PhysxPxAllocationListenerPod* plistenerPod = &listenerPod)
			{
				PxFoundationDeregisterAllocationListenerMutNative(selfPod, (PhysxPxAllocationListenerPod*)plistenerPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_registerErrorCallback_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxFoundationRegisterErrorCallbackMutNative(PhysxPxFoundationPod* selfPod, PhysxPxErrorCallbackPod* callbackPod);

		public static void PxFoundationRegisterErrorCallbackMut( PhysxPxFoundationPod* selfPod,  PhysxPxErrorCallbackPod* callbackPod)
		{
			PxFoundationRegisterErrorCallbackMutNative(selfPod, callbackPod);
		}

		public static void PxFoundationRegisterErrorCallbackMut( PhysxPxFoundationPod* selfPod,  ref PhysxPxErrorCallbackPod callbackPod)
		{
			fixed (PhysxPxErrorCallbackPod* pcallbackPod = &callbackPod)
			{
				PxFoundationRegisterErrorCallbackMutNative(selfPod, (PhysxPxErrorCallbackPod*)pcallbackPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxFoundation_deregisterErrorCallback_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxFoundationDeregisterErrorCallbackMutNative(PhysxPxFoundationPod* selfPod, PhysxPxErrorCallbackPod* callbackPod);

		public static void PxFoundationDeregisterErrorCallbackMut( PhysxPxFoundationPod* selfPod,  PhysxPxErrorCallbackPod* callbackPod)
		{
			PxFoundationDeregisterErrorCallbackMutNative(selfPod, callbackPod);
		}

		public static void PxFoundationDeregisterErrorCallbackMut( PhysxPxFoundationPod* selfPod,  ref PhysxPxErrorCallbackPod callbackPod)
		{
			fixed (PhysxPxErrorCallbackPod* pcallbackPod = &callbackPod)
			{
				PxFoundationDeregisterErrorCallbackMutNative(selfPod, (PhysxPxErrorCallbackPod*)pcallbackPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxCreateFoundation")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxFoundationPod* PhysPxCreateFoundationNative(uint version, PhysxPxAllocatorCallbackPod* allocatorPod, PhysxPxErrorCallbackPod* errorcallbackPod);

		public static PhysxPxFoundationPod* PhysPxCreateFoundation( uint version,  PhysxPxAllocatorCallbackPod* allocatorPod,  PhysxPxErrorCallbackPod* errorcallbackPod)
		{
			PhysxPxFoundationPod* ret = PhysPxCreateFoundationNative(version, allocatorPod, errorcallbackPod);
			return ret;
		}

		public static PhysxPxFoundationPod* PhysPxCreateFoundation( uint version,  ref PhysxPxAllocatorCallbackPod allocatorPod,  PhysxPxErrorCallbackPod* errorcallbackPod)
		{
			fixed (PhysxPxAllocatorCallbackPod* pallocatorPod = &allocatorPod)
			{
				PhysxPxFoundationPod* ret = PhysPxCreateFoundationNative(version, (PhysxPxAllocatorCallbackPod*)pallocatorPod, errorcallbackPod);
				return ret;
			}
		}

		public static PhysxPxFoundationPod* PhysPxCreateFoundation( uint version,  PhysxPxAllocatorCallbackPod* allocatorPod,  ref PhysxPxErrorCallbackPod errorcallbackPod)
		{
			fixed (PhysxPxErrorCallbackPod* perrorcallbackPod = &errorcallbackPod)
			{
				PhysxPxFoundationPod* ret = PhysPxCreateFoundationNative(version, allocatorPod, (PhysxPxErrorCallbackPod*)perrorcallbackPod);
				return ret;
			}
		}

		public static PhysxPxFoundationPod* PhysPxCreateFoundation( uint version,  ref PhysxPxAllocatorCallbackPod allocatorPod,  ref PhysxPxErrorCallbackPod errorcallbackPod)
		{
			fixed (PhysxPxAllocatorCallbackPod* pallocatorPod = &allocatorPod)
			{
				fixed (PhysxPxErrorCallbackPod* perrorcallbackPod = &errorcallbackPod)
				{
					PhysxPxFoundationPod* ret = PhysPxCreateFoundationNative(version, (PhysxPxAllocatorCallbackPod*)pallocatorPod, (PhysxPxErrorCallbackPod*)perrorcallbackPod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxSetFoundationInstance")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxSetFoundationInstanceNative(PhysxPxFoundationPod* foundationPod);

		public static void PhysPxSetFoundationInstance( PhysxPxFoundationPod* foundationPod)
		{
			PhysPxSetFoundationInstanceNative(foundationPod);
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetFoundation")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxFoundationPod* PhysPxGetFoundationNative();

		public static PhysxPxFoundationPod* PhysPxGetFoundation()
		{
			PhysxPxFoundationPod* ret = PhysPxGetFoundationNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetProfilerCallback")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxProfilerCallbackPod* PhysPxGetProfilerCallbackNative();

		public static PhysxPxProfilerCallbackPod* PhysPxGetProfilerCallback()
		{
			PhysxPxProfilerCallbackPod* ret = PhysPxGetProfilerCallbackNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxSetProfilerCallback")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxSetProfilerCallbackNative(PhysxPxProfilerCallbackPod* profilerPod);

		public static void PhysPxSetProfilerCallback( PhysxPxProfilerCallbackPod* profilerPod)
		{
			PhysPxSetProfilerCallbackNative(profilerPod);
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetAllocatorCallback")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxAllocatorCallbackPod* PhysPxGetAllocatorCallbackNative();

		public static PhysxPxAllocatorCallbackPod* PhysPxGetAllocatorCallback()
		{
			PhysxPxAllocatorCallbackPod* ret = PhysPxGetAllocatorCallbackNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetBroadcastAllocator")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxAllocatorCallbackPod* PhysPxGetBroadcastAllocatorNative();

		public static PhysxPxAllocatorCallbackPod* PhysPxGetBroadcastAllocator()
		{
			PhysxPxAllocatorCallbackPod* ret = PhysPxGetBroadcastAllocatorNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetErrorCallback")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxErrorCallbackPod* PhysPxGetErrorCallbackNative();

		public static PhysxPxErrorCallbackPod* PhysPxGetErrorCallback()
		{
			PhysxPxErrorCallbackPod* ret = PhysPxGetErrorCallbackNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetBroadcastError")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxErrorCallbackPod* PhysPxGetBroadcastErrorNative();

		public static PhysxPxErrorCallbackPod* PhysPxGetBroadcastError()
		{
			PhysxPxErrorCallbackPod* ret = PhysPxGetBroadcastErrorNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetWarnOnceTimeStamp")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxGetWarnOnceTimeStampNative();

		public static uint PhysPxGetWarnOnceTimeStamp()
		{
			uint ret = PhysPxGetWarnOnceTimeStampNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxDecFoundationRefCount")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxDecFoundationRefCountNative();

		public static void PhysPxDecFoundationRefCount()
		{
			PhysPxDecFoundationRefCountNative();
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxIncFoundationRefCount")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxIncFoundationRefCountNative();

		public static void PhysPxIncFoundationRefCount()
		{
			PhysPxIncFoundationRefCountNative();
		}

		[LibraryImport(LibName, EntryPoint = "PxAllocator_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxAllocatorPod PxAllocatorNewNative(byte* anonparam0);

		public static PhysxPxAllocatorPod PxAllocatorNew( byte* anonparam0)
		{
			PhysxPxAllocatorPod ret = PxAllocatorNewNative(anonparam0);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxAllocator_allocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxAllocatorAllocateMutNative(PhysxPxAllocatorPod* selfPod, ulong sizePod, byte* file, int line);

		public static void* PxAllocatorAllocateMut( PhysxPxAllocatorPod* selfPod,  ulong sizePod,  byte* file,  int line)
		{
			void* ret = PxAllocatorAllocateMutNative(selfPod, sizePod, file, line);
			return ret;
		}

		public static void* PxAllocatorAllocateMut( PhysxPxAllocatorPod* selfPod,  nuint sizePod,  byte* file,  int line)
		{
			void* ret = PxAllocatorAllocateMutNative(selfPod, sizePod, file, line);
			return ret;
		}

		public static void* PxAllocatorAllocateMut( PhysxPxAllocatorPod* selfPod,  ulong sizePod,  ref byte file,  int line)
		{
			fixed (byte* pfile = &file)
			{
				void* ret = PxAllocatorAllocateMutNative(selfPod, sizePod, (byte*)pfile, line);
				return ret;
			}
		}

		public static void* PxAllocatorAllocateMut( PhysxPxAllocatorPod* selfPod,  ulong sizePod,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (file != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(file);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(file, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxAllocatorAllocateMutNative(selfPod, sizePod, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static void* PxAllocatorAllocateMut( PhysxPxAllocatorPod* selfPod,  nuint sizePod,  ref byte file,  int line)
		{
			fixed (byte* pfile = &file)
			{
				void* ret = PxAllocatorAllocateMutNative(selfPod, sizePod, (byte*)pfile, line);
				return ret;
			}
		}

		public static void* PxAllocatorAllocateMut( PhysxPxAllocatorPod* selfPod,  nuint sizePod,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (file != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(file);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(file, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxAllocatorAllocateMutNative(selfPod, sizePod, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxAllocator_deallocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxAllocatorDeallocateMutNative(PhysxPxAllocatorPod* selfPod, void* ptr);

		public static void PxAllocatorDeallocateMut( PhysxPxAllocatorPod* selfPod,  void* ptr)
		{
			PxAllocatorDeallocateMutNative(selfPod, ptr);
		}

		[LibraryImport(LibName, EntryPoint = "PxRawAllocator_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxRawAllocatorPod PxRawAllocatorNewNative(byte* anonparam0);

		public static PhysxPxRawAllocatorPod PxRawAllocatorNew( byte* anonparam0)
		{
			PhysxPxRawAllocatorPod ret = PxRawAllocatorNewNative(anonparam0);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRawAllocator_allocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxRawAllocatorAllocateMutNative(PhysxPxRawAllocatorPod* selfPod, ulong sizePod, byte* anonparam1, int anonparam2);

		public static void* PxRawAllocatorAllocateMut( PhysxPxRawAllocatorPod* selfPod,  ulong sizePod,  byte* anonparam1,  int anonparam2)
		{
			void* ret = PxRawAllocatorAllocateMutNative(selfPod, sizePod, anonparam1, anonparam2);
			return ret;
		}

		public static void* PxRawAllocatorAllocateMut( PhysxPxRawAllocatorPod* selfPod,  nuint sizePod,  byte* anonparam1,  int anonparam2)
		{
			void* ret = PxRawAllocatorAllocateMutNative(selfPod, sizePod, anonparam1, anonparam2);
			return ret;
		}

		public static void* PxRawAllocatorAllocateMut( PhysxPxRawAllocatorPod* selfPod,  ulong sizePod,  ref byte anonparam1,  int anonparam2)
		{
			fixed (byte* panonparam1 = &anonparam1)
			{
				void* ret = PxRawAllocatorAllocateMutNative(selfPod, sizePod, (byte*)panonparam1, anonparam2);
				return ret;
			}
		}

		public static void* PxRawAllocatorAllocateMut( PhysxPxRawAllocatorPod* selfPod,  ulong sizePod,  string anonparam1,  int anonparam2)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (anonparam1 != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(anonparam1);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(anonparam1, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxRawAllocatorAllocateMutNative(selfPod, sizePod, pStr0, anonparam2);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static void* PxRawAllocatorAllocateMut( PhysxPxRawAllocatorPod* selfPod,  nuint sizePod,  ref byte anonparam1,  int anonparam2)
		{
			fixed (byte* panonparam1 = &anonparam1)
			{
				void* ret = PxRawAllocatorAllocateMutNative(selfPod, sizePod, (byte*)panonparam1, anonparam2);
				return ret;
			}
		}

		public static void* PxRawAllocatorAllocateMut( PhysxPxRawAllocatorPod* selfPod,  nuint sizePod,  string anonparam1,  int anonparam2)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (anonparam1 != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(anonparam1);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(anonparam1, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxRawAllocatorAllocateMutNative(selfPod, sizePod, pStr0, anonparam2);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRawAllocator_deallocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRawAllocatorDeallocateMutNative(PhysxPxRawAllocatorPod* selfPod, void* ptr);

		public static void PxRawAllocatorDeallocateMut( PhysxPxRawAllocatorPod* selfPod,  void* ptr)
		{
			PxRawAllocatorDeallocateMutNative(selfPod, ptr);
		}

		[LibraryImport(LibName, EntryPoint = "PxVirtualAllocatorCallback_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxVirtualAllocatorCallbackDeleteNative(PhysxPxVirtualAllocatorCallbackPod* selfPod);

		public static void PxVirtualAllocatorCallbackDelete( PhysxPxVirtualAllocatorCallbackPod* selfPod)
		{
			PxVirtualAllocatorCallbackDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxVirtualAllocatorCallback_allocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxVirtualAllocatorCallbackAllocateMutNative(PhysxPxVirtualAllocatorCallbackPod* selfPod, ulong sizePod, int group, byte* file, int line);

		public static void* PxVirtualAllocatorCallbackAllocateMut( PhysxPxVirtualAllocatorCallbackPod* selfPod,  ulong sizePod,  int group,  byte* file,  int line)
		{
			void* ret = PxVirtualAllocatorCallbackAllocateMutNative(selfPod, sizePod, group, file, line);
			return ret;
		}

		public static void* PxVirtualAllocatorCallbackAllocateMut( PhysxPxVirtualAllocatorCallbackPod* selfPod,  nuint sizePod,  int group,  byte* file,  int line)
		{
			void* ret = PxVirtualAllocatorCallbackAllocateMutNative(selfPod, sizePod, group, file, line);
			return ret;
		}

		public static void* PxVirtualAllocatorCallbackAllocateMut( PhysxPxVirtualAllocatorCallbackPod* selfPod,  ulong sizePod,  int group,  ref byte file,  int line)
		{
			fixed (byte* pfile = &file)
			{
				void* ret = PxVirtualAllocatorCallbackAllocateMutNative(selfPod, sizePod, group, (byte*)pfile, line);
				return ret;
			}
		}

		public static void* PxVirtualAllocatorCallbackAllocateMut( PhysxPxVirtualAllocatorCallbackPod* selfPod,  ulong sizePod,  int group,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (file != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(file);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(file, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxVirtualAllocatorCallbackAllocateMutNative(selfPod, sizePod, group, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static void* PxVirtualAllocatorCallbackAllocateMut( PhysxPxVirtualAllocatorCallbackPod* selfPod,  nuint sizePod,  int group,  ref byte file,  int line)
		{
			fixed (byte* pfile = &file)
			{
				void* ret = PxVirtualAllocatorCallbackAllocateMutNative(selfPod, sizePod, group, (byte*)pfile, line);
				return ret;
			}
		}

		public static void* PxVirtualAllocatorCallbackAllocateMut( PhysxPxVirtualAllocatorCallbackPod* selfPod,  nuint sizePod,  int group,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (file != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(file);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(file, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxVirtualAllocatorCallbackAllocateMutNative(selfPod, sizePod, group, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVirtualAllocatorCallback_deallocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxVirtualAllocatorCallbackDeallocateMutNative(PhysxPxVirtualAllocatorCallbackPod* selfPod, void* ptr);

		public static void PxVirtualAllocatorCallbackDeallocateMut( PhysxPxVirtualAllocatorCallbackPod* selfPod,  void* ptr)
		{
			PxVirtualAllocatorCallbackDeallocateMutNative(selfPod, ptr);
		}

		[LibraryImport(LibName, EntryPoint = "PxVirtualAllocator_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVirtualAllocatorPod PxVirtualAllocatorNewNative(PhysxPxVirtualAllocatorCallbackPod* callbackPod, int group);

		public static PhysxPxVirtualAllocatorPod PxVirtualAllocatorNew( PhysxPxVirtualAllocatorCallbackPod* callbackPod,  int group)
		{
			PhysxPxVirtualAllocatorPod ret = PxVirtualAllocatorNewNative(callbackPod, group);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVirtualAllocator_allocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxVirtualAllocatorAllocateMutNative(PhysxPxVirtualAllocatorPod* selfPod, ulong sizePod, byte* file, int line);

		public static void* PxVirtualAllocatorAllocateMut( PhysxPxVirtualAllocatorPod* selfPod,  ulong sizePod,  byte* file,  int line)
		{
			void* ret = PxVirtualAllocatorAllocateMutNative(selfPod, sizePod, file, line);
			return ret;
		}

		public static void* PxVirtualAllocatorAllocateMut( PhysxPxVirtualAllocatorPod* selfPod,  nuint sizePod,  byte* file,  int line)
		{
			void* ret = PxVirtualAllocatorAllocateMutNative(selfPod, sizePod, file, line);
			return ret;
		}

		public static void* PxVirtualAllocatorAllocateMut( PhysxPxVirtualAllocatorPod* selfPod,  ulong sizePod,  ref byte file,  int line)
		{
			fixed (byte* pfile = &file)
			{
				void* ret = PxVirtualAllocatorAllocateMutNative(selfPod, sizePod, (byte*)pfile, line);
				return ret;
			}
		}

		public static void* PxVirtualAllocatorAllocateMut( PhysxPxVirtualAllocatorPod* selfPod,  ulong sizePod,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (file != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(file);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(file, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxVirtualAllocatorAllocateMutNative(selfPod, sizePod, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static void* PxVirtualAllocatorAllocateMut( PhysxPxVirtualAllocatorPod* selfPod,  nuint sizePod,  ref byte file,  int line)
		{
			fixed (byte* pfile = &file)
			{
				void* ret = PxVirtualAllocatorAllocateMutNative(selfPod, sizePod, (byte*)pfile, line);
				return ret;
			}
		}

		public static void* PxVirtualAllocatorAllocateMut( PhysxPxVirtualAllocatorPod* selfPod,  nuint sizePod,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (file != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(file);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(file, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxVirtualAllocatorAllocateMutNative(selfPod, sizePod, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVirtualAllocator_deallocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxVirtualAllocatorDeallocateMutNative(PhysxPxVirtualAllocatorPod* selfPod, void* ptr);

		public static void PxVirtualAllocatorDeallocateMut( PhysxPxVirtualAllocatorPod* selfPod,  void* ptr)
		{
			PxVirtualAllocatorDeallocateMutNative(selfPod, ptr);
		}

		[LibraryImport(LibName, EntryPoint = "PxTempAllocatorChunk_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTempAllocatorChunkPod PxTempAllocatorChunkNewNative();

		public static PhysxPxTempAllocatorChunkPod PxTempAllocatorChunkNew()
		{
			PhysxPxTempAllocatorChunkPod ret = PxTempAllocatorChunkNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTempAllocator_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTempAllocatorPod PxTempAllocatorNewNative(byte* anonparam0);

		public static PhysxPxTempAllocatorPod PxTempAllocatorNew( byte* anonparam0)
		{
			PhysxPxTempAllocatorPod ret = PxTempAllocatorNewNative(anonparam0);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTempAllocator_allocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxTempAllocatorAllocateMutNative(PhysxPxTempAllocatorPod* selfPod, ulong sizePod, byte* file, int line);

		public static void* PxTempAllocatorAllocateMut( PhysxPxTempAllocatorPod* selfPod,  ulong sizePod,  byte* file,  int line)
		{
			void* ret = PxTempAllocatorAllocateMutNative(selfPod, sizePod, file, line);
			return ret;
		}

		public static void* PxTempAllocatorAllocateMut( PhysxPxTempAllocatorPod* selfPod,  nuint sizePod,  byte* file,  int line)
		{
			void* ret = PxTempAllocatorAllocateMutNative(selfPod, sizePod, file, line);
			return ret;
		}

		public static void* PxTempAllocatorAllocateMut( PhysxPxTempAllocatorPod* selfPod,  ulong sizePod,  ref byte file,  int line)
		{
			fixed (byte* pfile = &file)
			{
				void* ret = PxTempAllocatorAllocateMutNative(selfPod, sizePod, (byte*)pfile, line);
				return ret;
			}
		}

		public static void* PxTempAllocatorAllocateMut( PhysxPxTempAllocatorPod* selfPod,  ulong sizePod,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (file != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(file);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(file, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxTempAllocatorAllocateMutNative(selfPod, sizePod, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static void* PxTempAllocatorAllocateMut( PhysxPxTempAllocatorPod* selfPod,  nuint sizePod,  ref byte file,  int line)
		{
			fixed (byte* pfile = &file)
			{
				void* ret = PxTempAllocatorAllocateMutNative(selfPod, sizePod, (byte*)pfile, line);
				return ret;
			}
		}

		public static void* PxTempAllocatorAllocateMut( PhysxPxTempAllocatorPod* selfPod,  nuint sizePod,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (file != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(file);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(file, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxTempAllocatorAllocateMutNative(selfPod, sizePod, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTempAllocator_deallocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTempAllocatorDeallocateMutNative(PhysxPxTempAllocatorPod* selfPod, void* ptr);

		public static void PxTempAllocatorDeallocateMut( PhysxPxTempAllocatorPod* selfPod,  void* ptr)
		{
			PxTempAllocatorDeallocateMutNative(selfPod, ptr);
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxMemZero")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PhysPxMemZeroNative(void* dest, uint count);

		public static void* PhysPxMemZero( void* dest,  uint count)
		{
			void* ret = PhysPxMemZeroNative(dest, count);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxMemSet")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PhysPxMemSetNative(void* dest, int c, uint count);

		public static void* PhysPxMemSet( void* dest,  int c,  uint count)
		{
			void* ret = PhysPxMemSetNative(dest, c, count);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxMemCopy")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PhysPxMemCopyNative(void* dest, void* src, uint count);

		public static void* PhysPxMemCopy( void* dest,  void* src,  uint count)
		{
			void* ret = PhysPxMemCopyNative(dest, src, count);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxMemMove")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PhysPxMemMoveNative(void* dest, void* src, uint count);

		public static void* PhysPxMemMove( void* dest,  void* src,  uint count)
		{
			void* ret = PhysPxMemMoveNative(dest, src, count);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxMarkSerializedMemory")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxMarkSerializedMemoryNative(void* ptr, uint byteSize);

		public static void PhysPxMarkSerializedMemory( void* ptr,  uint byteSize)
		{
			PhysPxMarkSerializedMemoryNative(ptr, byteSize);
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxMemoryBarrier")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxMemoryBarrierNative();

		public static void PhysPxMemoryBarrier()
		{
			PhysPxMemoryBarrierNative();
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxHighestSetBitUnsafe")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxHighestSetBitUnsafeNative(uint v);

		public static uint PhysPxHighestSetBitUnsafe( uint v)
		{
			uint ret = PhysPxHighestSetBitUnsafeNative(v);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxLowestSetBitUnsafe")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxLowestSetBitUnsafeNative(uint v);

		public static uint PhysPxLowestSetBitUnsafe( uint v)
		{
			uint ret = PhysPxLowestSetBitUnsafeNative(v);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxCountLeadingZeros")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxCountLeadingZerosNative(uint v);

		public static uint PhysPxCountLeadingZeros( uint v)
		{
			uint ret = PhysPxCountLeadingZerosNative(v);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxPrefetchLine")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxPrefetchLineNative(void* ptr, uint offset);

		public static void PhysPxPrefetchLine( void* ptr,  uint offset)
		{
			PhysPxPrefetchLineNative(ptr, offset);
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxPrefetch")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxPrefetchNative(void* ptr, uint count);

		public static void PhysPxPrefetch( void* ptr,  uint count)
		{
			PhysPxPrefetchNative(ptr, count);
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxBitCount")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxBitCountNative(uint v);

		public static uint PhysPxBitCount( uint v)
		{
			uint ret = PhysPxBitCountNative(v);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxIsPowerOfTwo")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PhysPxIsPowerOfTwoNative(uint x);

		public static bool PhysPxIsPowerOfTwo( uint x)
		{
			byte ret = PhysPxIsPowerOfTwoNative(x);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxNextPowerOfTwo")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxNextPowerOfTwoNative(uint x);

		public static uint PhysPxNextPowerOfTwo( uint x)
		{
			uint ret = PhysPxNextPowerOfTwoNative(x);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxLowestSetBit")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxLowestSetBitNative(uint x);

		public static uint PhysPxLowestSetBit( uint x)
		{
			uint ret = PhysPxLowestSetBitNative(x);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxHighestSetBit")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxHighestSetBitNative(uint x);

		public static uint PhysPxHighestSetBit( uint x)
		{
			uint ret = PhysPxHighestSetBitNative(x);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxILog2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxILog2Native(uint num);

		public static uint PhysPxILog2( uint num)
		{
			uint ret = PhysPxILog2Native(num);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec3NewNative();

		public static PhysxPxVec3Pod PxVec3New()
		{
			PhysxPxVec3Pod ret = PxVec3NewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec3New1Native(int anonparam0Pod);

		public static PhysxPxVec3Pod PxVec3New1( int anonparam0Pod)
		{
			PhysxPxVec3Pod ret = PxVec3New1Native(anonparam0Pod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_new_2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec3New2Native(float a);

		public static PhysxPxVec3Pod PxVec3New2( float a)
		{
			PhysxPxVec3Pod ret = PxVec3New2Native(a);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_new_3")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec3New3Native(float nx, float ny, float nz);

		public static PhysxPxVec3Pod PxVec3New3( float nx,  float ny,  float nz)
		{
			PhysxPxVec3Pod ret = PxVec3New3Native(nx, ny, nz);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_isZero")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxVec3IsZeroNative(PhysxPxVec3Pod* selfPod);

		public static bool PxVec3IsZero( PhysxPxVec3Pod* selfPod)
		{
			byte ret = PxVec3IsZeroNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_isFinite")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxVec3IsFiniteNative(PhysxPxVec3Pod* selfPod);

		public static bool PxVec3IsFinite( PhysxPxVec3Pod* selfPod)
		{
			byte ret = PxVec3IsFiniteNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_isNormalized")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxVec3IsNormalizedNative(PhysxPxVec3Pod* selfPod);

		public static bool PxVec3IsNormalized( PhysxPxVec3Pod* selfPod)
		{
			byte ret = PxVec3IsNormalizedNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_magnitudeSquared")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec3MagnitudeSquaredNative(PhysxPxVec3Pod* selfPod);

		public static float PxVec3MagnitudeSquared( PhysxPxVec3Pod* selfPod)
		{
			float ret = PxVec3MagnitudeSquaredNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_magnitude")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec3MagnitudeNative(PhysxPxVec3Pod* selfPod);

		public static float PxVec3Magnitude( PhysxPxVec3Pod* selfPod)
		{
			float ret = PxVec3MagnitudeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_dot")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec3DotNative(PhysxPxVec3Pod* selfPod, PhysxPxVec3Pod* vPod);

		public static float PxVec3Dot( PhysxPxVec3Pod* selfPod,  PhysxPxVec3Pod* vPod)
		{
			float ret = PxVec3DotNative(selfPod, vPod);
			return ret;
		}

		public static float PxVec3Dot( PhysxPxVec3Pod* selfPod,  ref PhysxPxVec3Pod vPod)
		{
			fixed (PhysxPxVec3Pod* pvPod = &vPod)
			{
				float ret = PxVec3DotNative(selfPod, (PhysxPxVec3Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_cross")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec3CrossNative(PhysxPxVec3Pod* selfPod, PhysxPxVec3Pod* vPod);

		public static PhysxPxVec3Pod PxVec3Cross( PhysxPxVec3Pod* selfPod,  PhysxPxVec3Pod* vPod)
		{
			PhysxPxVec3Pod ret = PxVec3CrossNative(selfPod, vPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxVec3Cross( PhysxPxVec3Pod* selfPod,  ref PhysxPxVec3Pod vPod)
		{
			fixed (PhysxPxVec3Pod* pvPod = &vPod)
			{
				PhysxPxVec3Pod ret = PxVec3CrossNative(selfPod, (PhysxPxVec3Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_getNormalized")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec3GetNormalizedNative(PhysxPxVec3Pod* selfPod);

		public static PhysxPxVec3Pod PxVec3GetNormalized( PhysxPxVec3Pod* selfPod)
		{
			PhysxPxVec3Pod ret = PxVec3GetNormalizedNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_normalize_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec3NormalizeMutNative(PhysxPxVec3Pod* selfPod);

		public static float PxVec3NormalizeMut( PhysxPxVec3Pod* selfPod)
		{
			float ret = PxVec3NormalizeMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_normalizeSafe_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec3NormalizeSafeMutNative(PhysxPxVec3Pod* selfPod);

		public static float PxVec3NormalizeSafeMut( PhysxPxVec3Pod* selfPod)
		{
			float ret = PxVec3NormalizeSafeMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_normalizeFast_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec3NormalizeFastMutNative(PhysxPxVec3Pod* selfPod);

		public static float PxVec3NormalizeFastMut( PhysxPxVec3Pod* selfPod)
		{
			float ret = PxVec3NormalizeFastMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_multiply")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec3MultiplyNative(PhysxPxVec3Pod* selfPod, PhysxPxVec3Pod* aPod);

		public static PhysxPxVec3Pod PxVec3Multiply( PhysxPxVec3Pod* selfPod,  PhysxPxVec3Pod* aPod)
		{
			PhysxPxVec3Pod ret = PxVec3MultiplyNative(selfPod, aPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxVec3Multiply( PhysxPxVec3Pod* selfPod,  ref PhysxPxVec3Pod aPod)
		{
			fixed (PhysxPxVec3Pod* paPod = &aPod)
			{
				PhysxPxVec3Pod ret = PxVec3MultiplyNative(selfPod, (PhysxPxVec3Pod*)paPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_minimum")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec3MinimumNative(PhysxPxVec3Pod* selfPod, PhysxPxVec3Pod* vPod);

		public static PhysxPxVec3Pod PxVec3Minimum( PhysxPxVec3Pod* selfPod,  PhysxPxVec3Pod* vPod)
		{
			PhysxPxVec3Pod ret = PxVec3MinimumNative(selfPod, vPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxVec3Minimum( PhysxPxVec3Pod* selfPod,  ref PhysxPxVec3Pod vPod)
		{
			fixed (PhysxPxVec3Pod* pvPod = &vPod)
			{
				PhysxPxVec3Pod ret = PxVec3MinimumNative(selfPod, (PhysxPxVec3Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_minElement")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec3MinElementNative(PhysxPxVec3Pod* selfPod);

		public static float PxVec3MinElement( PhysxPxVec3Pod* selfPod)
		{
			float ret = PxVec3MinElementNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_maximum")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec3MaximumNative(PhysxPxVec3Pod* selfPod, PhysxPxVec3Pod* vPod);

		public static PhysxPxVec3Pod PxVec3Maximum( PhysxPxVec3Pod* selfPod,  PhysxPxVec3Pod* vPod)
		{
			PhysxPxVec3Pod ret = PxVec3MaximumNative(selfPod, vPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxVec3Maximum( PhysxPxVec3Pod* selfPod,  ref PhysxPxVec3Pod vPod)
		{
			fixed (PhysxPxVec3Pod* pvPod = &vPod)
			{
				PhysxPxVec3Pod ret = PxVec3MaximumNative(selfPod, (PhysxPxVec3Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_maxElement")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec3MaxElementNative(PhysxPxVec3Pod* selfPod);

		public static float PxVec3MaxElement( PhysxPxVec3Pod* selfPod)
		{
			float ret = PxVec3MaxElementNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3_abs")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec3AbsNative(PhysxPxVec3Pod* selfPod);

		public static PhysxPxVec3Pod PxVec3Abs( PhysxPxVec3Pod* selfPod)
		{
			PhysxPxVec3Pod ret = PxVec3AbsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3Padded_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3PaddedPod* PxVec3PaddedNewAllocNative();

		public static PhysxPxVec3PaddedPod* PxVec3PaddedNewAlloc()
		{
			PhysxPxVec3PaddedPod* ret = PxVec3PaddedNewAllocNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3Padded_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxVec3PaddedDeleteNative(PhysxPxVec3PaddedPod* selfPod);

		public static void PxVec3PaddedDelete( PhysxPxVec3PaddedPod* selfPod)
		{
			PxVec3PaddedDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3Padded_new_alloc_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3PaddedPod* PxVec3PaddedNewAlloc1Native(PhysxPxVec3Pod* pPod);

		public static PhysxPxVec3PaddedPod* PxVec3PaddedNewAlloc1( PhysxPxVec3Pod* pPod)
		{
			PhysxPxVec3PaddedPod* ret = PxVec3PaddedNewAlloc1Native(pPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec3Padded_new_alloc_2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3PaddedPod* PxVec3PaddedNewAlloc2Native(float f);

		public static PhysxPxVec3PaddedPod* PxVec3PaddedNewAlloc2( float f)
		{
			PhysxPxVec3PaddedPod* ret = PxVec3PaddedNewAlloc2Native(f);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PxQuatNewNative();

		public static PhysxPxQuatPod PxQuatNew()
		{
			PhysxPxQuatPod ret = PxQuatNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PxQuatNew1Native(int anonparam0Pod);

		public static PhysxPxQuatPod PxQuatNew1( int anonparam0Pod)
		{
			PhysxPxQuatPod ret = PxQuatNew1Native(anonparam0Pod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_new_2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PxQuatNew2Native(float r);

		public static PhysxPxQuatPod PxQuatNew2( float r)
		{
			PhysxPxQuatPod ret = PxQuatNew2Native(r);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_new_3")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PxQuatNew3Native(float nx, float ny, float nz, float nw);

		public static PhysxPxQuatPod PxQuatNew3( float nx,  float ny,  float nz,  float nw)
		{
			PhysxPxQuatPod ret = PxQuatNew3Native(nx, ny, nz, nw);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_new_4")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PxQuatNew4Native(float angleRadians, PhysxPxVec3Pod* unitaxisPod);

		public static PhysxPxQuatPod PxQuatNew4( float angleRadians,  PhysxPxVec3Pod* unitaxisPod)
		{
			PhysxPxQuatPod ret = PxQuatNew4Native(angleRadians, unitaxisPod);
			return ret;
		}

		public static PhysxPxQuatPod PxQuatNew4( float angleRadians,  ref PhysxPxVec3Pod unitaxisPod)
		{
			fixed (PhysxPxVec3Pod* punitaxisPod = &unitaxisPod)
			{
				PhysxPxQuatPod ret = PxQuatNew4Native(angleRadians, (PhysxPxVec3Pod*)punitaxisPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_new_5")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PxQuatNew5Native(PhysxPxMat33Pod* mPod);

		public static PhysxPxQuatPod PxQuatNew5( PhysxPxMat33Pod* mPod)
		{
			PhysxPxQuatPod ret = PxQuatNew5Native(mPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_isIdentity")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxQuatIsIdentityNative(PhysxPxQuatPod* selfPod);

		public static bool PxQuatIsIdentity( PhysxPxQuatPod* selfPod)
		{
			byte ret = PxQuatIsIdentityNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_isFinite")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxQuatIsFiniteNative(PhysxPxQuatPod* selfPod);

		public static bool PxQuatIsFinite( PhysxPxQuatPod* selfPod)
		{
			byte ret = PxQuatIsFiniteNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_isUnit")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxQuatIsUnitNative(PhysxPxQuatPod* selfPod);

		public static bool PxQuatIsUnit( PhysxPxQuatPod* selfPod)
		{
			byte ret = PxQuatIsUnitNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_isSane")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxQuatIsSaneNative(PhysxPxQuatPod* selfPod);

		public static bool PxQuatIsSane( PhysxPxQuatPod* selfPod)
		{
			byte ret = PxQuatIsSaneNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_toRadiansAndUnitAxis")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxQuatToRadiansAndUnitAxisNative(PhysxPxQuatPod* selfPod, float* anglePod, PhysxPxVec3Pod* axisPod);

		public static void PxQuatToRadiansAndUnitAxis( PhysxPxQuatPod* selfPod,  float* anglePod,  PhysxPxVec3Pod* axisPod)
		{
			PxQuatToRadiansAndUnitAxisNative(selfPod, anglePod, axisPod);
		}

		public static void PxQuatToRadiansAndUnitAxis( PhysxPxQuatPod* selfPod,  ref float anglePod,  PhysxPxVec3Pod* axisPod)
		{
			fixed (float* panglePod = &anglePod)
			{
				PxQuatToRadiansAndUnitAxisNative(selfPod, (float*)panglePod, axisPod);
			}
		}

		public static void PxQuatToRadiansAndUnitAxis( PhysxPxQuatPod* selfPod,  float* anglePod,  ref PhysxPxVec3Pod axisPod)
		{
			fixed (PhysxPxVec3Pod* paxisPod = &axisPod)
			{
				PxQuatToRadiansAndUnitAxisNative(selfPod, anglePod, (PhysxPxVec3Pod*)paxisPod);
			}
		}

		public static void PxQuatToRadiansAndUnitAxis( PhysxPxQuatPod* selfPod,  ref float anglePod,  ref PhysxPxVec3Pod axisPod)
		{
			fixed (float* panglePod = &anglePod)
			{
				fixed (PhysxPxVec3Pod* paxisPod = &axisPod)
				{
					PxQuatToRadiansAndUnitAxisNative(selfPod, (float*)panglePod, (PhysxPxVec3Pod*)paxisPod);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_getAngle")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxQuatGetAngleNative(PhysxPxQuatPod* selfPod);

		public static float PxQuatGetAngle( PhysxPxQuatPod* selfPod)
		{
			float ret = PxQuatGetAngleNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_getAngle_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxQuatGetAngle1Native(PhysxPxQuatPod* selfPod, PhysxPxQuatPod* qPod);

		public static float PxQuatGetAngle1( PhysxPxQuatPod* selfPod,  PhysxPxQuatPod* qPod)
		{
			float ret = PxQuatGetAngle1Native(selfPod, qPod);
			return ret;
		}

		public static float PxQuatGetAngle1( PhysxPxQuatPod* selfPod,  ref PhysxPxQuatPod qPod)
		{
			fixed (PhysxPxQuatPod* pqPod = &qPod)
			{
				float ret = PxQuatGetAngle1Native(selfPod, (PhysxPxQuatPod*)pqPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_magnitudeSquared")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxQuatMagnitudeSquaredNative(PhysxPxQuatPod* selfPod);

		public static float PxQuatMagnitudeSquared( PhysxPxQuatPod* selfPod)
		{
			float ret = PxQuatMagnitudeSquaredNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_dot")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxQuatDotNative(PhysxPxQuatPod* selfPod, PhysxPxQuatPod* vPod);

		public static float PxQuatDot( PhysxPxQuatPod* selfPod,  PhysxPxQuatPod* vPod)
		{
			float ret = PxQuatDotNative(selfPod, vPod);
			return ret;
		}

		public static float PxQuatDot( PhysxPxQuatPod* selfPod,  ref PhysxPxQuatPod vPod)
		{
			fixed (PhysxPxQuatPod* pvPod = &vPod)
			{
				float ret = PxQuatDotNative(selfPod, (PhysxPxQuatPod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_getNormalized")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PxQuatGetNormalizedNative(PhysxPxQuatPod* selfPod);

		public static PhysxPxQuatPod PxQuatGetNormalized( PhysxPxQuatPod* selfPod)
		{
			PhysxPxQuatPod ret = PxQuatGetNormalizedNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_magnitude")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxQuatMagnitudeNative(PhysxPxQuatPod* selfPod);

		public static float PxQuatMagnitude( PhysxPxQuatPod* selfPod)
		{
			float ret = PxQuatMagnitudeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_normalize_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxQuatNormalizeMutNative(PhysxPxQuatPod* selfPod);

		public static float PxQuatNormalizeMut( PhysxPxQuatPod* selfPod)
		{
			float ret = PxQuatNormalizeMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_getConjugate")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PxQuatGetConjugateNative(PhysxPxQuatPod* selfPod);

		public static PhysxPxQuatPod PxQuatGetConjugate( PhysxPxQuatPod* selfPod)
		{
			PhysxPxQuatPod ret = PxQuatGetConjugateNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_getImaginaryPart")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxQuatGetImaginaryPartNative(PhysxPxQuatPod* selfPod);

		public static PhysxPxVec3Pod PxQuatGetImaginaryPart( PhysxPxQuatPod* selfPod)
		{
			PhysxPxVec3Pod ret = PxQuatGetImaginaryPartNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_getBasisVector0")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxQuatGetBasisVector0Native(PhysxPxQuatPod* selfPod);

		public static PhysxPxVec3Pod PxQuatGetBasisVector0( PhysxPxQuatPod* selfPod)
		{
			PhysxPxVec3Pod ret = PxQuatGetBasisVector0Native(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_getBasisVector1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxQuatGetBasisVector1Native(PhysxPxQuatPod* selfPod);

		public static PhysxPxVec3Pod PxQuatGetBasisVector1( PhysxPxQuatPod* selfPod)
		{
			PhysxPxVec3Pod ret = PxQuatGetBasisVector1Native(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_getBasisVector2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxQuatGetBasisVector2Native(PhysxPxQuatPod* selfPod);

		public static PhysxPxVec3Pod PxQuatGetBasisVector2( PhysxPxQuatPod* selfPod)
		{
			PhysxPxVec3Pod ret = PxQuatGetBasisVector2Native(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_rotate")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxQuatRotateNative(PhysxPxQuatPod* selfPod, PhysxPxVec3Pod* vPod);

		public static PhysxPxVec3Pod PxQuatRotate( PhysxPxQuatPod* selfPod,  PhysxPxVec3Pod* vPod)
		{
			PhysxPxVec3Pod ret = PxQuatRotateNative(selfPod, vPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxQuatRotate( PhysxPxQuatPod* selfPod,  ref PhysxPxVec3Pod vPod)
		{
			fixed (PhysxPxVec3Pod* pvPod = &vPod)
			{
				PhysxPxVec3Pod ret = PxQuatRotateNative(selfPod, (PhysxPxVec3Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxQuat_rotateInv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxQuatRotateInvNative(PhysxPxQuatPod* selfPod, PhysxPxVec3Pod* vPod);

		public static PhysxPxVec3Pod PxQuatRotateInv( PhysxPxQuatPod* selfPod,  PhysxPxVec3Pod* vPod)
		{
			PhysxPxVec3Pod ret = PxQuatRotateInvNative(selfPod, vPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxQuatRotateInv( PhysxPxQuatPod* selfPod,  ref PhysxPxVec3Pod vPod)
		{
			fixed (PhysxPxVec3Pod* pvPod = &vPod)
			{
				PhysxPxVec3Pod ret = PxQuatRotateInvNative(selfPod, (PhysxPxVec3Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformNewNative();

		public static PhysxPxTransformPod PxTransformNew()
		{
			PhysxPxTransformPod ret = PxTransformNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformNew1Native(PhysxPxVec3Pod* positionPod);

		public static PhysxPxTransformPod PxTransformNew1( PhysxPxVec3Pod* positionPod)
		{
			PhysxPxTransformPod ret = PxTransformNew1Native(positionPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_new_2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformNew2Native(int anonparam0Pod);

		public static PhysxPxTransformPod PxTransformNew2( int anonparam0Pod)
		{
			PhysxPxTransformPod ret = PxTransformNew2Native(anonparam0Pod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_new_3")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformNew3Native(PhysxPxQuatPod* orientationPod);

		public static PhysxPxTransformPod PxTransformNew3( PhysxPxQuatPod* orientationPod)
		{
			PhysxPxTransformPod ret = PxTransformNew3Native(orientationPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_new_4")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformNew4Native(float x, float y, float z, PhysxPxQuatPod aqPod);

		public static PhysxPxTransformPod PxTransformNew4( float x,  float y,  float z,  PhysxPxQuatPod aqPod)
		{
			PhysxPxTransformPod ret = PxTransformNew4Native(x, y, z, aqPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_new_5")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformNew5Native(PhysxPxVec3Pod* p0Pod, PhysxPxQuatPod* q0Pod);

		public static PhysxPxTransformPod PxTransformNew5( PhysxPxVec3Pod* p0Pod,  PhysxPxQuatPod* q0Pod)
		{
			PhysxPxTransformPod ret = PxTransformNew5Native(p0Pod, q0Pod);
			return ret;
		}

		public static PhysxPxTransformPod PxTransformNew5( PhysxPxVec3Pod* p0Pod,  ref PhysxPxQuatPod q0Pod)
		{
			fixed (PhysxPxQuatPod* pq0Pod = &q0Pod)
			{
				PhysxPxTransformPod ret = PxTransformNew5Native(p0Pod, (PhysxPxQuatPod*)pq0Pod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_new_6")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformNew6Native(PhysxPxMat44Pod* mPod);

		public static PhysxPxTransformPod PxTransformNew6( PhysxPxMat44Pod* mPod)
		{
			PhysxPxTransformPod ret = PxTransformNew6Native(mPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_getInverse")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformGetInverseNative(PhysxPxTransformPod* selfPod);

		public static PhysxPxTransformPod PxTransformGetInverse( PhysxPxTransformPod* selfPod)
		{
			PhysxPxTransformPod ret = PxTransformGetInverseNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_transform")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxTransformTransformNative(PhysxPxTransformPod* selfPod, PhysxPxVec3Pod* inputPod);

		public static PhysxPxVec3Pod PxTransformTransform( PhysxPxTransformPod* selfPod,  PhysxPxVec3Pod* inputPod)
		{
			PhysxPxVec3Pod ret = PxTransformTransformNative(selfPod, inputPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxTransformTransform( PhysxPxTransformPod* selfPod,  ref PhysxPxVec3Pod inputPod)
		{
			fixed (PhysxPxVec3Pod* pinputPod = &inputPod)
			{
				PhysxPxVec3Pod ret = PxTransformTransformNative(selfPod, (PhysxPxVec3Pod*)pinputPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_transformInv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxTransformTransformInvNative(PhysxPxTransformPod* selfPod, PhysxPxVec3Pod* inputPod);

		public static PhysxPxVec3Pod PxTransformTransformInv( PhysxPxTransformPod* selfPod,  PhysxPxVec3Pod* inputPod)
		{
			PhysxPxVec3Pod ret = PxTransformTransformInvNative(selfPod, inputPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxTransformTransformInv( PhysxPxTransformPod* selfPod,  ref PhysxPxVec3Pod inputPod)
		{
			fixed (PhysxPxVec3Pod* pinputPod = &inputPod)
			{
				PhysxPxVec3Pod ret = PxTransformTransformInvNative(selfPod, (PhysxPxVec3Pod*)pinputPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_rotate")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxTransformRotateNative(PhysxPxTransformPod* selfPod, PhysxPxVec3Pod* inputPod);

		public static PhysxPxVec3Pod PxTransformRotate( PhysxPxTransformPod* selfPod,  PhysxPxVec3Pod* inputPod)
		{
			PhysxPxVec3Pod ret = PxTransformRotateNative(selfPod, inputPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxTransformRotate( PhysxPxTransformPod* selfPod,  ref PhysxPxVec3Pod inputPod)
		{
			fixed (PhysxPxVec3Pod* pinputPod = &inputPod)
			{
				PhysxPxVec3Pod ret = PxTransformRotateNative(selfPod, (PhysxPxVec3Pod*)pinputPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_rotateInv")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxTransformRotateInvNative(PhysxPxTransformPod* selfPod, PhysxPxVec3Pod* inputPod);

		public static PhysxPxVec3Pod PxTransformRotateInv( PhysxPxTransformPod* selfPod,  PhysxPxVec3Pod* inputPod)
		{
			PhysxPxVec3Pod ret = PxTransformRotateInvNative(selfPod, inputPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxTransformRotateInv( PhysxPxTransformPod* selfPod,  ref PhysxPxVec3Pod inputPod)
		{
			fixed (PhysxPxVec3Pod* pinputPod = &inputPod)
			{
				PhysxPxVec3Pod ret = PxTransformRotateInvNative(selfPod, (PhysxPxVec3Pod*)pinputPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_transform_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformTransform1Native(PhysxPxTransformPod* selfPod, PhysxPxTransformPod* srcPod);

		public static PhysxPxTransformPod PxTransformTransform1( PhysxPxTransformPod* selfPod,  PhysxPxTransformPod* srcPod)
		{
			PhysxPxTransformPod ret = PxTransformTransform1Native(selfPod, srcPod);
			return ret;
		}

		public static PhysxPxTransformPod PxTransformTransform1( PhysxPxTransformPod* selfPod,  ref PhysxPxTransformPod srcPod)
		{
			fixed (PhysxPxTransformPod* psrcPod = &srcPod)
			{
				PhysxPxTransformPod ret = PxTransformTransform1Native(selfPod, (PhysxPxTransformPod*)psrcPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxTransformIsValidNative(PhysxPxTransformPod* selfPod);

		public static bool PxTransformIsValid( PhysxPxTransformPod* selfPod)
		{
			byte ret = PxTransformIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_isSane")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxTransformIsSaneNative(PhysxPxTransformPod* selfPod);

		public static bool PxTransformIsSane( PhysxPxTransformPod* selfPod)
		{
			byte ret = PxTransformIsSaneNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_isFinite")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxTransformIsFiniteNative(PhysxPxTransformPod* selfPod);

		public static bool PxTransformIsFinite( PhysxPxTransformPod* selfPod)
		{
			byte ret = PxTransformIsFiniteNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_transformInv_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformTransformInv1Native(PhysxPxTransformPod* selfPod, PhysxPxTransformPod* srcPod);

		public static PhysxPxTransformPod PxTransformTransformInv1( PhysxPxTransformPod* selfPod,  PhysxPxTransformPod* srcPod)
		{
			PhysxPxTransformPod ret = PxTransformTransformInv1Native(selfPod, srcPod);
			return ret;
		}

		public static PhysxPxTransformPod PxTransformTransformInv1( PhysxPxTransformPod* selfPod,  ref PhysxPxTransformPod srcPod)
		{
			fixed (PhysxPxTransformPod* psrcPod = &srcPod)
			{
				PhysxPxTransformPod ret = PxTransformTransformInv1Native(selfPod, (PhysxPxTransformPod*)psrcPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTransform_getNormalized")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PxTransformGetNormalizedNative(PhysxPxTransformPod* selfPod);

		public static PhysxPxTransformPod PxTransformGetNormalized( PhysxPxTransformPod* selfPod)
		{
			PhysxPxTransformPod ret = PxTransformGetNormalizedNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33NewNative();

		public static PhysxPxMat33Pod PxMat33New()
		{
			PhysxPxMat33Pod ret = PxMat33NewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33New1Native(int anonparam0Pod);

		public static PhysxPxMat33Pod PxMat33New1( int anonparam0Pod)
		{
			PhysxPxMat33Pod ret = PxMat33New1Native(anonparam0Pod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_new_2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33New2Native(int anonparam0Pod);

		public static PhysxPxMat33Pod PxMat33New2( int anonparam0Pod)
		{
			PhysxPxMat33Pod ret = PxMat33New2Native(anonparam0Pod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_new_3")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33New3Native(PhysxPxVec3Pod* col0Pod, PhysxPxVec3Pod* col1Pod, PhysxPxVec3Pod* col2Pod);

		public static PhysxPxMat33Pod PxMat33New3( PhysxPxVec3Pod* col0Pod,  PhysxPxVec3Pod* col1Pod,  PhysxPxVec3Pod* col2Pod)
		{
			PhysxPxMat33Pod ret = PxMat33New3Native(col0Pod, col1Pod, col2Pod);
			return ret;
		}

		public static PhysxPxMat33Pod PxMat33New3( PhysxPxVec3Pod* col0Pod,  ref PhysxPxVec3Pod col1Pod,  PhysxPxVec3Pod* col2Pod)
		{
			fixed (PhysxPxVec3Pod* pcol1Pod = &col1Pod)
			{
				PhysxPxMat33Pod ret = PxMat33New3Native(col0Pod, (PhysxPxVec3Pod*)pcol1Pod, col2Pod);
				return ret;
			}
		}

		public static PhysxPxMat33Pod PxMat33New3( PhysxPxVec3Pod* col0Pod,  PhysxPxVec3Pod* col1Pod,  ref PhysxPxVec3Pod col2Pod)
		{
			fixed (PhysxPxVec3Pod* pcol2Pod = &col2Pod)
			{
				PhysxPxMat33Pod ret = PxMat33New3Native(col0Pod, col1Pod, (PhysxPxVec3Pod*)pcol2Pod);
				return ret;
			}
		}

		public static PhysxPxMat33Pod PxMat33New3( PhysxPxVec3Pod* col0Pod,  ref PhysxPxVec3Pod col1Pod,  ref PhysxPxVec3Pod col2Pod)
		{
			fixed (PhysxPxVec3Pod* pcol1Pod = &col1Pod)
			{
				fixed (PhysxPxVec3Pod* pcol2Pod = &col2Pod)
				{
					PhysxPxMat33Pod ret = PxMat33New3Native(col0Pod, (PhysxPxVec3Pod*)pcol1Pod, (PhysxPxVec3Pod*)pcol2Pod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_new_4")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33New4Native(float r);

		public static PhysxPxMat33Pod PxMat33New4( float r)
		{
			PhysxPxMat33Pod ret = PxMat33New4Native(r);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_new_5")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33New5Native(float* values);

		public static PhysxPxMat33Pod PxMat33New5( float* values)
		{
			PhysxPxMat33Pod ret = PxMat33New5Native(values);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_new_6")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33New6Native(PhysxPxQuatPod* qPod);

		public static PhysxPxMat33Pod PxMat33New6( PhysxPxQuatPod* qPod)
		{
			PhysxPxMat33Pod ret = PxMat33New6Native(qPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_createDiagonal")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33CreateDiagonalNative(PhysxPxVec3Pod* dPod);

		public static PhysxPxMat33Pod PxMat33CreateDiagonal( PhysxPxVec3Pod* dPod)
		{
			PhysxPxMat33Pod ret = PxMat33CreateDiagonalNative(dPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_outer")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33OuterNative(PhysxPxVec3Pod* aPod, PhysxPxVec3Pod* bPod);

		public static PhysxPxMat33Pod PxMat33Outer( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod)
		{
			PhysxPxMat33Pod ret = PxMat33OuterNative(aPod, bPod);
			return ret;
		}

		public static PhysxPxMat33Pod PxMat33Outer( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				PhysxPxMat33Pod ret = PxMat33OuterNative(aPod, (PhysxPxVec3Pod*)pbPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_getTranspose")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33GetTransposeNative(PhysxPxMat33Pod* selfPod);

		public static PhysxPxMat33Pod PxMat33GetTranspose( PhysxPxMat33Pod* selfPod)
		{
			PhysxPxMat33Pod ret = PxMat33GetTransposeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_getInverse")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMat33GetInverseNative(PhysxPxMat33Pod* selfPod);

		public static PhysxPxMat33Pod PxMat33GetInverse( PhysxPxMat33Pod* selfPod)
		{
			PhysxPxMat33Pod ret = PxMat33GetInverseNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_getDeterminant")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxMat33GetDeterminantNative(PhysxPxMat33Pod* selfPod);

		public static float PxMat33GetDeterminant( PhysxPxMat33Pod* selfPod)
		{
			float ret = PxMat33GetDeterminantNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_transform")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxMat33TransformNative(PhysxPxMat33Pod* selfPod, PhysxPxVec3Pod* otherPod);

		public static PhysxPxVec3Pod PxMat33Transform( PhysxPxMat33Pod* selfPod,  PhysxPxVec3Pod* otherPod)
		{
			PhysxPxVec3Pod ret = PxMat33TransformNative(selfPod, otherPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxMat33Transform( PhysxPxMat33Pod* selfPod,  ref PhysxPxVec3Pod otherPod)
		{
			fixed (PhysxPxVec3Pod* potherPod = &otherPod)
			{
				PhysxPxVec3Pod ret = PxMat33TransformNative(selfPod, (PhysxPxVec3Pod*)potherPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_transformTranspose")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxMat33TransformTransposeNative(PhysxPxMat33Pod* selfPod, PhysxPxVec3Pod* otherPod);

		public static PhysxPxVec3Pod PxMat33TransformTranspose( PhysxPxMat33Pod* selfPod,  PhysxPxVec3Pod* otherPod)
		{
			PhysxPxVec3Pod ret = PxMat33TransformTransposeNative(selfPod, otherPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxMat33TransformTranspose( PhysxPxMat33Pod* selfPod,  ref PhysxPxVec3Pod otherPod)
		{
			fixed (PhysxPxVec3Pod* potherPod = &otherPod)
			{
				PhysxPxVec3Pod ret = PxMat33TransformTransposeNative(selfPod, (PhysxPxVec3Pod*)potherPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat33_front")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float* PxMat33FrontNative(PhysxPxMat33Pod* selfPod);

		public static float* PxMat33Front( PhysxPxMat33Pod* selfPod)
		{
			float* ret = PxMat33FrontNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3NewNative();

		public static PhysxPxBounds3Pod PxBounds3New()
		{
			PhysxPxBounds3Pod ret = PxBounds3NewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3New1Native(PhysxPxVec3Pod* minimumPod, PhysxPxVec3Pod* maximumPod);

		public static PhysxPxBounds3Pod PxBounds3New1( PhysxPxVec3Pod* minimumPod,  PhysxPxVec3Pod* maximumPod)
		{
			PhysxPxBounds3Pod ret = PxBounds3New1Native(minimumPod, maximumPod);
			return ret;
		}

		public static PhysxPxBounds3Pod PxBounds3New1( PhysxPxVec3Pod* minimumPod,  ref PhysxPxVec3Pod maximumPod)
		{
			fixed (PhysxPxVec3Pod* pmaximumPod = &maximumPod)
			{
				PhysxPxBounds3Pod ret = PxBounds3New1Native(minimumPod, (PhysxPxVec3Pod*)pmaximumPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_empty")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3EmptyNative();

		public static PhysxPxBounds3Pod PxBounds3Empty()
		{
			PhysxPxBounds3Pod ret = PxBounds3EmptyNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_boundsOfPoints")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3BoundsOfPointsNative(PhysxPxVec3Pod* v0Pod, PhysxPxVec3Pod* v1Pod);

		public static PhysxPxBounds3Pod PxBounds3BoundsOfPoints( PhysxPxVec3Pod* v0Pod,  PhysxPxVec3Pod* v1Pod)
		{
			PhysxPxBounds3Pod ret = PxBounds3BoundsOfPointsNative(v0Pod, v1Pod);
			return ret;
		}

		public static PhysxPxBounds3Pod PxBounds3BoundsOfPoints( PhysxPxVec3Pod* v0Pod,  ref PhysxPxVec3Pod v1Pod)
		{
			fixed (PhysxPxVec3Pod* pv1Pod = &v1Pod)
			{
				PhysxPxBounds3Pod ret = PxBounds3BoundsOfPointsNative(v0Pod, (PhysxPxVec3Pod*)pv1Pod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_centerExtents")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3CenterExtentsNative(PhysxPxVec3Pod* centerPod, PhysxPxVec3Pod* extentPod);

		public static PhysxPxBounds3Pod PxBounds3CenterExtents( PhysxPxVec3Pod* centerPod,  PhysxPxVec3Pod* extentPod)
		{
			PhysxPxBounds3Pod ret = PxBounds3CenterExtentsNative(centerPod, extentPod);
			return ret;
		}

		public static PhysxPxBounds3Pod PxBounds3CenterExtents( PhysxPxVec3Pod* centerPod,  ref PhysxPxVec3Pod extentPod)
		{
			fixed (PhysxPxVec3Pod* pextentPod = &extentPod)
			{
				PhysxPxBounds3Pod ret = PxBounds3CenterExtentsNative(centerPod, (PhysxPxVec3Pod*)pextentPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_basisExtent")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3BasisExtentNative(PhysxPxVec3Pod* centerPod, PhysxPxMat33Pod* basisPod, PhysxPxVec3Pod* extentPod);

		public static PhysxPxBounds3Pod PxBounds3BasisExtent( PhysxPxVec3Pod* centerPod,  PhysxPxMat33Pod* basisPod,  PhysxPxVec3Pod* extentPod)
		{
			PhysxPxBounds3Pod ret = PxBounds3BasisExtentNative(centerPod, basisPod, extentPod);
			return ret;
		}

		public static PhysxPxBounds3Pod PxBounds3BasisExtent( PhysxPxVec3Pod* centerPod,  ref PhysxPxMat33Pod basisPod,  PhysxPxVec3Pod* extentPod)
		{
			fixed (PhysxPxMat33Pod* pbasisPod = &basisPod)
			{
				PhysxPxBounds3Pod ret = PxBounds3BasisExtentNative(centerPod, (PhysxPxMat33Pod*)pbasisPod, extentPod);
				return ret;
			}
		}

		public static PhysxPxBounds3Pod PxBounds3BasisExtent( PhysxPxVec3Pod* centerPod,  PhysxPxMat33Pod* basisPod,  ref PhysxPxVec3Pod extentPod)
		{
			fixed (PhysxPxVec3Pod* pextentPod = &extentPod)
			{
				PhysxPxBounds3Pod ret = PxBounds3BasisExtentNative(centerPod, basisPod, (PhysxPxVec3Pod*)pextentPod);
				return ret;
			}
		}

		public static PhysxPxBounds3Pod PxBounds3BasisExtent( PhysxPxVec3Pod* centerPod,  ref PhysxPxMat33Pod basisPod,  ref PhysxPxVec3Pod extentPod)
		{
			fixed (PhysxPxMat33Pod* pbasisPod = &basisPod)
			{
				fixed (PhysxPxVec3Pod* pextentPod = &extentPod)
				{
					PhysxPxBounds3Pod ret = PxBounds3BasisExtentNative(centerPod, (PhysxPxMat33Pod*)pbasisPod, (PhysxPxVec3Pod*)pextentPod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_poseExtent")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3PoseExtentNative(PhysxPxTransformPod* posePod, PhysxPxVec3Pod* extentPod);

		public static PhysxPxBounds3Pod PxBounds3PoseExtent( PhysxPxTransformPod* posePod,  PhysxPxVec3Pod* extentPod)
		{
			PhysxPxBounds3Pod ret = PxBounds3PoseExtentNative(posePod, extentPod);
			return ret;
		}

		public static PhysxPxBounds3Pod PxBounds3PoseExtent( PhysxPxTransformPod* posePod,  ref PhysxPxVec3Pod extentPod)
		{
			fixed (PhysxPxVec3Pod* pextentPod = &extentPod)
			{
				PhysxPxBounds3Pod ret = PxBounds3PoseExtentNative(posePod, (PhysxPxVec3Pod*)pextentPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_transformSafe")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3TransformSafeNative(PhysxPxMat33Pod* matrixPod, PhysxPxBounds3Pod* boundsPod);

		public static PhysxPxBounds3Pod PxBounds3TransformSafe( PhysxPxMat33Pod* matrixPod,  PhysxPxBounds3Pod* boundsPod)
		{
			PhysxPxBounds3Pod ret = PxBounds3TransformSafeNative(matrixPod, boundsPod);
			return ret;
		}

		public static PhysxPxBounds3Pod PxBounds3TransformSafe( PhysxPxMat33Pod* matrixPod,  ref PhysxPxBounds3Pod boundsPod)
		{
			fixed (PhysxPxBounds3Pod* pboundsPod = &boundsPod)
			{
				PhysxPxBounds3Pod ret = PxBounds3TransformSafeNative(matrixPod, (PhysxPxBounds3Pod*)pboundsPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_transformFast")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3TransformFastNative(PhysxPxMat33Pod* matrixPod, PhysxPxBounds3Pod* boundsPod);

		public static PhysxPxBounds3Pod PxBounds3TransformFast( PhysxPxMat33Pod* matrixPod,  PhysxPxBounds3Pod* boundsPod)
		{
			PhysxPxBounds3Pod ret = PxBounds3TransformFastNative(matrixPod, boundsPod);
			return ret;
		}

		public static PhysxPxBounds3Pod PxBounds3TransformFast( PhysxPxMat33Pod* matrixPod,  ref PhysxPxBounds3Pod boundsPod)
		{
			fixed (PhysxPxBounds3Pod* pboundsPod = &boundsPod)
			{
				PhysxPxBounds3Pod ret = PxBounds3TransformFastNative(matrixPod, (PhysxPxBounds3Pod*)pboundsPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_transformSafe_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3TransformSafe1Native(PhysxPxTransformPod* transformPod, PhysxPxBounds3Pod* boundsPod);

		public static PhysxPxBounds3Pod PxBounds3TransformSafe1( PhysxPxTransformPod* transformPod,  PhysxPxBounds3Pod* boundsPod)
		{
			PhysxPxBounds3Pod ret = PxBounds3TransformSafe1Native(transformPod, boundsPod);
			return ret;
		}

		public static PhysxPxBounds3Pod PxBounds3TransformSafe1( PhysxPxTransformPod* transformPod,  ref PhysxPxBounds3Pod boundsPod)
		{
			fixed (PhysxPxBounds3Pod* pboundsPod = &boundsPod)
			{
				PhysxPxBounds3Pod ret = PxBounds3TransformSafe1Native(transformPod, (PhysxPxBounds3Pod*)pboundsPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_transformFast_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxBounds3TransformFast1Native(PhysxPxTransformPod* transformPod, PhysxPxBounds3Pod* boundsPod);

		public static PhysxPxBounds3Pod PxBounds3TransformFast1( PhysxPxTransformPod* transformPod,  PhysxPxBounds3Pod* boundsPod)
		{
			PhysxPxBounds3Pod ret = PxBounds3TransformFast1Native(transformPod, boundsPod);
			return ret;
		}

		public static PhysxPxBounds3Pod PxBounds3TransformFast1( PhysxPxTransformPod* transformPod,  ref PhysxPxBounds3Pod boundsPod)
		{
			fixed (PhysxPxBounds3Pod* pboundsPod = &boundsPod)
			{
				PhysxPxBounds3Pod ret = PxBounds3TransformFast1Native(transformPod, (PhysxPxBounds3Pod*)pboundsPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_setEmpty_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBounds3SetEmptyMutNative(PhysxPxBounds3Pod* selfPod);

		public static void PxBounds3SetEmptyMut( PhysxPxBounds3Pod* selfPod)
		{
			PxBounds3SetEmptyMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_setMaximal_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBounds3SetMaximalMutNative(PhysxPxBounds3Pod* selfPod);

		public static void PxBounds3SetMaximalMut( PhysxPxBounds3Pod* selfPod)
		{
			PxBounds3SetMaximalMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_include_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBounds3IncludeMutNative(PhysxPxBounds3Pod* selfPod, PhysxPxVec3Pod* vPod);

		public static void PxBounds3IncludeMut( PhysxPxBounds3Pod* selfPod,  PhysxPxVec3Pod* vPod)
		{
			PxBounds3IncludeMutNative(selfPod, vPod);
		}

		public static void PxBounds3IncludeMut( PhysxPxBounds3Pod* selfPod,  ref PhysxPxVec3Pod vPod)
		{
			fixed (PhysxPxVec3Pod* pvPod = &vPod)
			{
				PxBounds3IncludeMutNative(selfPod, (PhysxPxVec3Pod*)pvPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_include_mut_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBounds3IncludeMut1Native(PhysxPxBounds3Pod* selfPod, PhysxPxBounds3Pod* bPod);

		public static void PxBounds3IncludeMut1( PhysxPxBounds3Pod* selfPod,  PhysxPxBounds3Pod* bPod)
		{
			PxBounds3IncludeMut1Native(selfPod, bPod);
		}

		public static void PxBounds3IncludeMut1( PhysxPxBounds3Pod* selfPod,  ref PhysxPxBounds3Pod bPod)
		{
			fixed (PhysxPxBounds3Pod* pbPod = &bPod)
			{
				PxBounds3IncludeMut1Native(selfPod, (PhysxPxBounds3Pod*)pbPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_isEmpty")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBounds3IsEmptyNative(PhysxPxBounds3Pod* selfPod);

		public static bool PxBounds3IsEmpty( PhysxPxBounds3Pod* selfPod)
		{
			byte ret = PxBounds3IsEmptyNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_intersects")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBounds3IntersectsNative(PhysxPxBounds3Pod* selfPod, PhysxPxBounds3Pod* bPod);

		public static bool PxBounds3Intersects( PhysxPxBounds3Pod* selfPod,  PhysxPxBounds3Pod* bPod)
		{
			byte ret = PxBounds3IntersectsNative(selfPod, bPod);
			return ret != 0;
		}

		public static bool PxBounds3Intersects( PhysxPxBounds3Pod* selfPod,  ref PhysxPxBounds3Pod bPod)
		{
			fixed (PhysxPxBounds3Pod* pbPod = &bPod)
			{
				byte ret = PxBounds3IntersectsNative(selfPod, (PhysxPxBounds3Pod*)pbPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_intersects1D")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBounds3Intersects1DNative(PhysxPxBounds3Pod* selfPod, PhysxPxBounds3Pod* aPod, uint axis);

		public static bool PxBounds3Intersects1D( PhysxPxBounds3Pod* selfPod,  PhysxPxBounds3Pod* aPod,  uint axis)
		{
			byte ret = PxBounds3Intersects1DNative(selfPod, aPod, axis);
			return ret != 0;
		}

		public static bool PxBounds3Intersects1D( PhysxPxBounds3Pod* selfPod,  ref PhysxPxBounds3Pod aPod,  uint axis)
		{
			fixed (PhysxPxBounds3Pod* paPod = &aPod)
			{
				byte ret = PxBounds3Intersects1DNative(selfPod, (PhysxPxBounds3Pod*)paPod, axis);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_contains")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBounds3ContainsNative(PhysxPxBounds3Pod* selfPod, PhysxPxVec3Pod* vPod);

		public static bool PxBounds3Contains( PhysxPxBounds3Pod* selfPod,  PhysxPxVec3Pod* vPod)
		{
			byte ret = PxBounds3ContainsNative(selfPod, vPod);
			return ret != 0;
		}

		public static bool PxBounds3Contains( PhysxPxBounds3Pod* selfPod,  ref PhysxPxVec3Pod vPod)
		{
			fixed (PhysxPxVec3Pod* pvPod = &vPod)
			{
				byte ret = PxBounds3ContainsNative(selfPod, (PhysxPxVec3Pod*)pvPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_isInside")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBounds3IsInsideNative(PhysxPxBounds3Pod* selfPod, PhysxPxBounds3Pod* boxPod);

		public static bool PxBounds3IsInside( PhysxPxBounds3Pod* selfPod,  PhysxPxBounds3Pod* boxPod)
		{
			byte ret = PxBounds3IsInsideNative(selfPod, boxPod);
			return ret != 0;
		}

		public static bool PxBounds3IsInside( PhysxPxBounds3Pod* selfPod,  ref PhysxPxBounds3Pod boxPod)
		{
			fixed (PhysxPxBounds3Pod* pboxPod = &boxPod)
			{
				byte ret = PxBounds3IsInsideNative(selfPod, (PhysxPxBounds3Pod*)pboxPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_getCenter")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxBounds3GetCenterNative(PhysxPxBounds3Pod* selfPod);

		public static PhysxPxVec3Pod PxBounds3GetCenter( PhysxPxBounds3Pod* selfPod)
		{
			PhysxPxVec3Pod ret = PxBounds3GetCenterNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_getCenter_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxBounds3GetCenter1Native(PhysxPxBounds3Pod* selfPod, uint axis);

		public static float PxBounds3GetCenter1( PhysxPxBounds3Pod* selfPod,  uint axis)
		{
			float ret = PxBounds3GetCenter1Native(selfPod, axis);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_getExtents")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxBounds3GetExtentsNative(PhysxPxBounds3Pod* selfPod, uint axis);

		public static float PxBounds3GetExtents( PhysxPxBounds3Pod* selfPod,  uint axis)
		{
			float ret = PxBounds3GetExtentsNative(selfPod, axis);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_getDimensions")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxBounds3GetDimensionsNative(PhysxPxBounds3Pod* selfPod);

		public static PhysxPxVec3Pod PxBounds3GetDimensions( PhysxPxBounds3Pod* selfPod)
		{
			PhysxPxVec3Pod ret = PxBounds3GetDimensionsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_getExtents_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxBounds3GetExtents1Native(PhysxPxBounds3Pod* selfPod);

		public static PhysxPxVec3Pod PxBounds3GetExtents1( PhysxPxBounds3Pod* selfPod)
		{
			PhysxPxVec3Pod ret = PxBounds3GetExtents1Native(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_scaleSafe_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBounds3ScaleSafeMutNative(PhysxPxBounds3Pod* selfPod, float scale);

		public static void PxBounds3ScaleSafeMut( PhysxPxBounds3Pod* selfPod,  float scale)
		{
			PxBounds3ScaleSafeMutNative(selfPod, scale);
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_scaleFast_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBounds3ScaleFastMutNative(PhysxPxBounds3Pod* selfPod, float scale);

		public static void PxBounds3ScaleFastMut( PhysxPxBounds3Pod* selfPod,  float scale)
		{
			PxBounds3ScaleFastMutNative(selfPod, scale);
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_fattenSafe_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBounds3FattenSafeMutNative(PhysxPxBounds3Pod* selfPod, float distance);

		public static void PxBounds3FattenSafeMut( PhysxPxBounds3Pod* selfPod,  float distance)
		{
			PxBounds3FattenSafeMutNative(selfPod, distance);
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_fattenFast_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBounds3FattenFastMutNative(PhysxPxBounds3Pod* selfPod, float distance);

		public static void PxBounds3FattenFastMut( PhysxPxBounds3Pod* selfPod,  float distance)
		{
			PxBounds3FattenFastMutNative(selfPod, distance);
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_isFinite")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBounds3IsFiniteNative(PhysxPxBounds3Pod* selfPod);

		public static bool PxBounds3IsFinite( PhysxPxBounds3Pod* selfPod)
		{
			byte ret = PxBounds3IsFiniteNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBounds3IsValidNative(PhysxPxBounds3Pod* selfPod);

		public static bool PxBounds3IsValid( PhysxPxBounds3Pod* selfPod)
		{
			byte ret = PxBounds3IsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxBounds3_closestPoint")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxBounds3ClosestPointNative(PhysxPxBounds3Pod* selfPod, PhysxPxVec3Pod* pPod);

		public static PhysxPxVec3Pod PxBounds3ClosestPoint( PhysxPxBounds3Pod* selfPod,  PhysxPxVec3Pod* pPod)
		{
			PhysxPxVec3Pod ret = PxBounds3ClosestPointNative(selfPod, pPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxBounds3ClosestPoint( PhysxPxBounds3Pod* selfPod,  ref PhysxPxVec3Pod pPod)
		{
			fixed (PhysxPxVec3Pod* ppPod = &pPod)
			{
				PhysxPxVec3Pod ret = PxBounds3ClosestPointNative(selfPod, (PhysxPxVec3Pod*)ppPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxErrorCallback_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxErrorCallbackDeleteNative(PhysxPxErrorCallbackPod* selfPod);

		public static void PxErrorCallbackDelete( PhysxPxErrorCallbackPod* selfPod)
		{
			PxErrorCallbackDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxErrorCallback_reportError_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxErrorCallbackReportErrorMutNative(PhysxPxErrorCallbackPod* selfPod, int codePod, byte* message, byte* file, int line);

		public static void PxErrorCallbackReportErrorMut( PhysxPxErrorCallbackPod* selfPod,  int codePod,  byte* message,  byte* file,  int line)
		{
			PxErrorCallbackReportErrorMutNative(selfPod, codePod, message, file, line);
		}

		public static void PxErrorCallbackReportErrorMut( PhysxPxErrorCallbackPod* selfPod,  int codePod,  ref byte message,  byte* file,  int line)
		{
			fixed (byte* pmessage = &message)
			{
				PxErrorCallbackReportErrorMutNative(selfPod, codePod, (byte*)pmessage, file, line);
			}
		}

		public static void PxErrorCallbackReportErrorMut( PhysxPxErrorCallbackPod* selfPod,  int codePod,  string message,  byte* file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (message != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(message);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(message, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxErrorCallbackReportErrorMutNative(selfPod, codePod, pStr0, file, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void PxErrorCallbackReportErrorMut( PhysxPxErrorCallbackPod* selfPod,  int codePod,  byte* message,  ref byte file,  int line)
		{
			fixed (byte* pfile = &file)
			{
				PxErrorCallbackReportErrorMutNative(selfPod, codePod, message, (byte*)pfile, line);
			}
		}

		public static void PxErrorCallbackReportErrorMut( PhysxPxErrorCallbackPod* selfPod,  int codePod,  byte* message,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (file != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(file);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(file, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxErrorCallbackReportErrorMutNative(selfPod, codePod, message, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void PxErrorCallbackReportErrorMut( PhysxPxErrorCallbackPod* selfPod,  int codePod,  ref byte message,  ref byte file,  int line)
		{
			fixed (byte* pmessage = &message)
			{
				fixed (byte* pfile = &file)
				{
					PxErrorCallbackReportErrorMutNative(selfPod, codePod, (byte*)pmessage, (byte*)pfile, line);
				}
			}
		}

		public static void PxErrorCallbackReportErrorMut( PhysxPxErrorCallbackPod* selfPod,  int codePod,  string message,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (message != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(message);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(message, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			byte* pStr1 = null;
			int pStrSize1 = 0;
			if (file != null)
			{
				pStrSize1 = Utils.GetByteCountUTF8(file);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<byte>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF8(file, pStr1, pStrSize1);
				pStr1[pStrOffset1] = 0;
			}
			PxErrorCallbackReportErrorMutNative(selfPod, codePod, pStr0, pStr1, line);
			if (pStrSize1 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr1);
			}
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxAllocationListener_onAllocation_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxAllocationListenerOnAllocationMutNative(PhysxPxAllocationListenerPod* selfPod, ulong sizePod, byte* typeName, byte* filename, int line, void* allocatedMemory);

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  ulong sizePod,  byte* typeName,  byte* filename,  int line,  void* allocatedMemory)
		{
			PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, typeName, filename, line, allocatedMemory);
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  nuint sizePod,  byte* typeName,  byte* filename,  int line,  void* allocatedMemory)
		{
			PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, typeName, filename, line, allocatedMemory);
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  ulong sizePod,  ref byte typeName,  byte* filename,  int line,  void* allocatedMemory)
		{
			fixed (byte* ptypeName = &typeName)
			{
				PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, (byte*)ptypeName, filename, line, allocatedMemory);
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  ulong sizePod,  string typeName,  byte* filename,  int line,  void* allocatedMemory)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (typeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(typeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(typeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, pStr0, filename, line, allocatedMemory);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  nuint sizePod,  ref byte typeName,  byte* filename,  int line,  void* allocatedMemory)
		{
			fixed (byte* ptypeName = &typeName)
			{
				PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, (byte*)ptypeName, filename, line, allocatedMemory);
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  nuint sizePod,  string typeName,  byte* filename,  int line,  void* allocatedMemory)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (typeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(typeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(typeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, pStr0, filename, line, allocatedMemory);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  ulong sizePod,  byte* typeName,  ref byte filename,  int line,  void* allocatedMemory)
		{
			fixed (byte* pfilename = &filename)
			{
				PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, typeName, (byte*)pfilename, line, allocatedMemory);
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  ulong sizePod,  byte* typeName,  string filename,  int line,  void* allocatedMemory)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (filename != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(filename);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(filename, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, typeName, pStr0, line, allocatedMemory);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  nuint sizePod,  byte* typeName,  ref byte filename,  int line,  void* allocatedMemory)
		{
			fixed (byte* pfilename = &filename)
			{
				PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, typeName, (byte*)pfilename, line, allocatedMemory);
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  nuint sizePod,  byte* typeName,  string filename,  int line,  void* allocatedMemory)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (filename != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(filename);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(filename, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, typeName, pStr0, line, allocatedMemory);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  ulong sizePod,  ref byte typeName,  ref byte filename,  int line,  void* allocatedMemory)
		{
			fixed (byte* ptypeName = &typeName)
			{
				fixed (byte* pfilename = &filename)
				{
					PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, (byte*)ptypeName, (byte*)pfilename, line, allocatedMemory);
				}
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  ulong sizePod,  string typeName,  string filename,  int line,  void* allocatedMemory)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (typeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(typeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(typeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			byte* pStr1 = null;
			int pStrSize1 = 0;
			if (filename != null)
			{
				pStrSize1 = Utils.GetByteCountUTF8(filename);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<byte>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF8(filename, pStr1, pStrSize1);
				pStr1[pStrOffset1] = 0;
			}
			PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, pStr0, pStr1, line, allocatedMemory);
			if (pStrSize1 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr1);
			}
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  nuint sizePod,  ref byte typeName,  ref byte filename,  int line,  void* allocatedMemory)
		{
			fixed (byte* ptypeName = &typeName)
			{
				fixed (byte* pfilename = &filename)
				{
					PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, (byte*)ptypeName, (byte*)pfilename, line, allocatedMemory);
				}
			}
		}

		public static void PxAllocationListenerOnAllocationMut( PhysxPxAllocationListenerPod* selfPod,  nuint sizePod,  string typeName,  string filename,  int line,  void* allocatedMemory)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (typeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(typeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(typeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			byte* pStr1 = null;
			int pStrSize1 = 0;
			if (filename != null)
			{
				pStrSize1 = Utils.GetByteCountUTF8(filename);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<byte>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF8(filename, pStr1, pStrSize1);
				pStr1[pStrOffset1] = 0;
			}
			PxAllocationListenerOnAllocationMutNative(selfPod, sizePod, pStr0, pStr1, line, allocatedMemory);
			if (pStrSize1 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr1);
			}
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxAllocationListener_onDeallocation_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxAllocationListenerOnDeallocationMutNative(PhysxPxAllocationListenerPod* selfPod, void* allocatedMemory);

		public static void PxAllocationListenerOnDeallocationMut( PhysxPxAllocationListenerPod* selfPod,  void* allocatedMemory)
		{
			PxAllocationListenerOnDeallocationMutNative(selfPod, allocatedMemory);
		}

		[LibraryImport(LibName, EntryPoint = "PxBroadcastingAllocator_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBroadcastingAllocatorPod* PxBroadcastingAllocatorNewAllocNative(PhysxPxAllocatorCallbackPod* allocatorPod, PhysxPxErrorCallbackPod* errorPod);

		public static PhysxPxBroadcastingAllocatorPod* PxBroadcastingAllocatorNewAlloc( PhysxPxAllocatorCallbackPod* allocatorPod,  PhysxPxErrorCallbackPod* errorPod)
		{
			PhysxPxBroadcastingAllocatorPod* ret = PxBroadcastingAllocatorNewAllocNative(allocatorPod, errorPod);
			return ret;
		}

		public static PhysxPxBroadcastingAllocatorPod* PxBroadcastingAllocatorNewAlloc( PhysxPxAllocatorCallbackPod* allocatorPod,  ref PhysxPxErrorCallbackPod errorPod)
		{
			fixed (PhysxPxErrorCallbackPod* perrorPod = &errorPod)
			{
				PhysxPxBroadcastingAllocatorPod* ret = PxBroadcastingAllocatorNewAllocNative(allocatorPod, (PhysxPxErrorCallbackPod*)perrorPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBroadcastingAllocator_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBroadcastingAllocatorDeleteNative(PhysxPxBroadcastingAllocatorPod* selfPod);

		public static void PxBroadcastingAllocatorDelete( PhysxPxBroadcastingAllocatorPod* selfPod)
		{
			PxBroadcastingAllocatorDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBroadcastingAllocator_allocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxBroadcastingAllocatorAllocateMutNative(PhysxPxBroadcastingAllocatorPod* selfPod, ulong sizePod, byte* typeName, byte* filename, int line);

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  ulong sizePod,  byte* typeName,  byte* filename,  int line)
		{
			void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, typeName, filename, line);
			return ret;
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  nuint sizePod,  byte* typeName,  byte* filename,  int line)
		{
			void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, typeName, filename, line);
			return ret;
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  ulong sizePod,  ref byte typeName,  byte* filename,  int line)
		{
			fixed (byte* ptypeName = &typeName)
			{
				void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, (byte*)ptypeName, filename, line);
				return ret;
			}
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  ulong sizePod,  string typeName,  byte* filename,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (typeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(typeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(typeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, pStr0, filename, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  nuint sizePod,  ref byte typeName,  byte* filename,  int line)
		{
			fixed (byte* ptypeName = &typeName)
			{
				void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, (byte*)ptypeName, filename, line);
				return ret;
			}
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  nuint sizePod,  string typeName,  byte* filename,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (typeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(typeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(typeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, pStr0, filename, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  ulong sizePod,  byte* typeName,  ref byte filename,  int line)
		{
			fixed (byte* pfilename = &filename)
			{
				void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, typeName, (byte*)pfilename, line);
				return ret;
			}
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  ulong sizePod,  byte* typeName,  string filename,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (filename != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(filename);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(filename, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, typeName, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  nuint sizePod,  byte* typeName,  ref byte filename,  int line)
		{
			fixed (byte* pfilename = &filename)
			{
				void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, typeName, (byte*)pfilename, line);
				return ret;
			}
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  nuint sizePod,  byte* typeName,  string filename,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (filename != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(filename);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(filename, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, typeName, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  ulong sizePod,  ref byte typeName,  ref byte filename,  int line)
		{
			fixed (byte* ptypeName = &typeName)
			{
				fixed (byte* pfilename = &filename)
				{
					void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, (byte*)ptypeName, (byte*)pfilename, line);
					return ret;
				}
			}
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  ulong sizePod,  string typeName,  string filename,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (typeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(typeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(typeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			byte* pStr1 = null;
			int pStrSize1 = 0;
			if (filename != null)
			{
				pStrSize1 = Utils.GetByteCountUTF8(filename);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<byte>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF8(filename, pStr1, pStrSize1);
				pStr1[pStrOffset1] = 0;
			}
			void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, pStr0, pStr1, line);
			if (pStrSize1 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr1);
			}
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  nuint sizePod,  ref byte typeName,  ref byte filename,  int line)
		{
			fixed (byte* ptypeName = &typeName)
			{
				fixed (byte* pfilename = &filename)
				{
					void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, (byte*)ptypeName, (byte*)pfilename, line);
					return ret;
				}
			}
		}

		public static void* PxBroadcastingAllocatorAllocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  nuint sizePod,  string typeName,  string filename,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (typeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(typeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(typeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			byte* pStr1 = null;
			int pStrSize1 = 0;
			if (filename != null)
			{
				pStrSize1 = Utils.GetByteCountUTF8(filename);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<byte>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF8(filename, pStr1, pStrSize1);
				pStr1[pStrOffset1] = 0;
			}
			void* ret = PxBroadcastingAllocatorAllocateMutNative(selfPod, sizePod, pStr0, pStr1, line);
			if (pStrSize1 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr1);
			}
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBroadcastingAllocator_deallocate_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBroadcastingAllocatorDeallocateMutNative(PhysxPxBroadcastingAllocatorPod* selfPod, void* ptr);

		public static void PxBroadcastingAllocatorDeallocateMut( PhysxPxBroadcastingAllocatorPod* selfPod,  void* ptr)
		{
			PxBroadcastingAllocatorDeallocateMutNative(selfPod, ptr);
		}

		[LibraryImport(LibName, EntryPoint = "PxBroadcastingErrorCallback_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBroadcastingErrorCallbackPod* PxBroadcastingErrorCallbackNewAllocNative(PhysxPxErrorCallbackPod* errorcallbackPod);

		public static PhysxPxBroadcastingErrorCallbackPod* PxBroadcastingErrorCallbackNewAlloc( PhysxPxErrorCallbackPod* errorcallbackPod)
		{
			PhysxPxBroadcastingErrorCallbackPod* ret = PxBroadcastingErrorCallbackNewAllocNative(errorcallbackPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBroadcastingErrorCallback_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBroadcastingErrorCallbackDeleteNative(PhysxPxBroadcastingErrorCallbackPod* selfPod);

		public static void PxBroadcastingErrorCallbackDelete( PhysxPxBroadcastingErrorCallbackPod* selfPod)
		{
			PxBroadcastingErrorCallbackDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBroadcastingErrorCallback_reportError_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBroadcastingErrorCallbackReportErrorMutNative(PhysxPxBroadcastingErrorCallbackPod* selfPod, int codePod, byte* message, byte* file, int line);

		public static void PxBroadcastingErrorCallbackReportErrorMut( PhysxPxBroadcastingErrorCallbackPod* selfPod,  int codePod,  byte* message,  byte* file,  int line)
		{
			PxBroadcastingErrorCallbackReportErrorMutNative(selfPod, codePod, message, file, line);
		}

		public static void PxBroadcastingErrorCallbackReportErrorMut( PhysxPxBroadcastingErrorCallbackPod* selfPod,  int codePod,  ref byte message,  byte* file,  int line)
		{
			fixed (byte* pmessage = &message)
			{
				PxBroadcastingErrorCallbackReportErrorMutNative(selfPod, codePod, (byte*)pmessage, file, line);
			}
		}

		public static void PxBroadcastingErrorCallbackReportErrorMut( PhysxPxBroadcastingErrorCallbackPod* selfPod,  int codePod,  string message,  byte* file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (message != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(message);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(message, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxBroadcastingErrorCallbackReportErrorMutNative(selfPod, codePod, pStr0, file, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void PxBroadcastingErrorCallbackReportErrorMut( PhysxPxBroadcastingErrorCallbackPod* selfPod,  int codePod,  byte* message,  ref byte file,  int line)
		{
			fixed (byte* pfile = &file)
			{
				PxBroadcastingErrorCallbackReportErrorMutNative(selfPod, codePod, message, (byte*)pfile, line);
			}
		}

		public static void PxBroadcastingErrorCallbackReportErrorMut( PhysxPxBroadcastingErrorCallbackPod* selfPod,  int codePod,  byte* message,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (file != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(file);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(file, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxBroadcastingErrorCallbackReportErrorMutNative(selfPod, codePod, message, pStr0, line);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void PxBroadcastingErrorCallbackReportErrorMut( PhysxPxBroadcastingErrorCallbackPod* selfPod,  int codePod,  ref byte message,  ref byte file,  int line)
		{
			fixed (byte* pmessage = &message)
			{
				fixed (byte* pfile = &file)
				{
					PxBroadcastingErrorCallbackReportErrorMutNative(selfPod, codePod, (byte*)pmessage, (byte*)pfile, line);
				}
			}
		}

		public static void PxBroadcastingErrorCallbackReportErrorMut( PhysxPxBroadcastingErrorCallbackPod* selfPod,  int codePod,  string message,  string file,  int line)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (message != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(message);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(message, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			byte* pStr1 = null;
			int pStrSize1 = 0;
			if (file != null)
			{
				pStrSize1 = Utils.GetByteCountUTF8(file);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<byte>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF8(file, pStr1, pStrSize1);
				pStr1[pStrOffset1] = 0;
			}
			PxBroadcastingErrorCallbackReportErrorMutNative(selfPod, codePod, pStr0, pStr1, line);
			if (pStrSize1 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr1);
			}
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxEnableFPExceptions")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxEnableFPExceptionsNative();

		public static void PhysPxEnableFPExceptions()
		{
			PhysPxEnableFPExceptionsNative();
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxDisableFPExceptions")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxDisableFPExceptionsNative();

		public static void PhysPxDisableFPExceptions()
		{
			PhysPxDisableFPExceptionsNative();
		}

		[LibraryImport(LibName, EntryPoint = "PxInputStream_read_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxInputStreamReadMutNative(PhysxPxInputStreamPod* selfPod, void* dest, uint count);

		public static uint PxInputStreamReadMut( PhysxPxInputStreamPod* selfPod,  void* dest,  uint count)
		{
			uint ret = PxInputStreamReadMutNative(selfPod, dest, count);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxInputStream_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxInputStreamDeleteNative(PhysxPxInputStreamPod* selfPod);

		public static void PxInputStreamDelete( PhysxPxInputStreamPod* selfPod)
		{
			PxInputStreamDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxInputData_getLength")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxInputDataGetLengthNative(PhysxPxInputDataPod* selfPod);

		public static uint PxInputDataGetLength( PhysxPxInputDataPod* selfPod)
		{
			uint ret = PxInputDataGetLengthNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxInputData_seek_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxInputDataSeekMutNative(PhysxPxInputDataPod* selfPod, uint offset);

		public static void PxInputDataSeekMut( PhysxPxInputDataPod* selfPod,  uint offset)
		{
			PxInputDataSeekMutNative(selfPod, offset);
		}

		[LibraryImport(LibName, EntryPoint = "PxInputData_tell")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxInputDataTellNative(PhysxPxInputDataPod* selfPod);

		public static uint PxInputDataTell( PhysxPxInputDataPod* selfPod)
		{
			uint ret = PxInputDataTellNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxInputData_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxInputDataDeleteNative(PhysxPxInputDataPod* selfPod);

		public static void PxInputDataDelete( PhysxPxInputDataPod* selfPod)
		{
			PxInputDataDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxOutputStream_write_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxOutputStreamWriteMutNative(PhysxPxOutputStreamPod* selfPod, void* src, uint count);

		public static uint PxOutputStreamWriteMut( PhysxPxOutputStreamPod* selfPod,  void* src,  uint count)
		{
			uint ret = PxOutputStreamWriteMutNative(selfPod, src, count);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxOutputStream_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxOutputStreamDeleteNative(PhysxPxOutputStreamPod* selfPod);

		public static void PxOutputStreamDelete( PhysxPxOutputStreamPod* selfPod)
		{
			PxOutputStreamDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxVec4NewNative();

		public static PhysxPxVec4Pod PxVec4New()
		{
			PhysxPxVec4Pod ret = PxVec4NewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxVec4New1Native(int anonparam0Pod);

		public static PhysxPxVec4Pod PxVec4New1( int anonparam0Pod)
		{
			PhysxPxVec4Pod ret = PxVec4New1Native(anonparam0Pod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_new_2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxVec4New2Native(float a);

		public static PhysxPxVec4Pod PxVec4New2( float a)
		{
			PhysxPxVec4Pod ret = PxVec4New2Native(a);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_new_3")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxVec4New3Native(float nx, float ny, float nz, float nw);

		public static PhysxPxVec4Pod PxVec4New3( float nx,  float ny,  float nz,  float nw)
		{
			PhysxPxVec4Pod ret = PxVec4New3Native(nx, ny, nz, nw);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_new_4")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxVec4New4Native(PhysxPxVec3Pod* vPod, float nw);

		public static PhysxPxVec4Pod PxVec4New4( PhysxPxVec3Pod* vPod,  float nw)
		{
			PhysxPxVec4Pod ret = PxVec4New4Native(vPod, nw);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_new_5")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxVec4New5Native(float* v);

		public static PhysxPxVec4Pod PxVec4New5( float* v)
		{
			PhysxPxVec4Pod ret = PxVec4New5Native(v);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_isZero")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxVec4IsZeroNative(PhysxPxVec4Pod* selfPod);

		public static bool PxVec4IsZero( PhysxPxVec4Pod* selfPod)
		{
			byte ret = PxVec4IsZeroNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_isFinite")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxVec4IsFiniteNative(PhysxPxVec4Pod* selfPod);

		public static bool PxVec4IsFinite( PhysxPxVec4Pod* selfPod)
		{
			byte ret = PxVec4IsFiniteNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_isNormalized")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxVec4IsNormalizedNative(PhysxPxVec4Pod* selfPod);

		public static bool PxVec4IsNormalized( PhysxPxVec4Pod* selfPod)
		{
			byte ret = PxVec4IsNormalizedNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_magnitudeSquared")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec4MagnitudeSquaredNative(PhysxPxVec4Pod* selfPod);

		public static float PxVec4MagnitudeSquared( PhysxPxVec4Pod* selfPod)
		{
			float ret = PxVec4MagnitudeSquaredNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_magnitude")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec4MagnitudeNative(PhysxPxVec4Pod* selfPod);

		public static float PxVec4Magnitude( PhysxPxVec4Pod* selfPod)
		{
			float ret = PxVec4MagnitudeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_dot")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec4DotNative(PhysxPxVec4Pod* selfPod, PhysxPxVec4Pod* vPod);

		public static float PxVec4Dot( PhysxPxVec4Pod* selfPod,  PhysxPxVec4Pod* vPod)
		{
			float ret = PxVec4DotNative(selfPod, vPod);
			return ret;
		}

		public static float PxVec4Dot( PhysxPxVec4Pod* selfPod,  ref PhysxPxVec4Pod vPod)
		{
			fixed (PhysxPxVec4Pod* pvPod = &vPod)
			{
				float ret = PxVec4DotNative(selfPod, (PhysxPxVec4Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_getNormalized")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxVec4GetNormalizedNative(PhysxPxVec4Pod* selfPod);

		public static PhysxPxVec4Pod PxVec4GetNormalized( PhysxPxVec4Pod* selfPod)
		{
			PhysxPxVec4Pod ret = PxVec4GetNormalizedNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_normalize_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec4NormalizeMutNative(PhysxPxVec4Pod* selfPod);

		public static float PxVec4NormalizeMut( PhysxPxVec4Pod* selfPod)
		{
			float ret = PxVec4NormalizeMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_multiply")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxVec4MultiplyNative(PhysxPxVec4Pod* selfPod, PhysxPxVec4Pod* aPod);

		public static PhysxPxVec4Pod PxVec4Multiply( PhysxPxVec4Pod* selfPod,  PhysxPxVec4Pod* aPod)
		{
			PhysxPxVec4Pod ret = PxVec4MultiplyNative(selfPod, aPod);
			return ret;
		}

		public static PhysxPxVec4Pod PxVec4Multiply( PhysxPxVec4Pod* selfPod,  ref PhysxPxVec4Pod aPod)
		{
			fixed (PhysxPxVec4Pod* paPod = &aPod)
			{
				PhysxPxVec4Pod ret = PxVec4MultiplyNative(selfPod, (PhysxPxVec4Pod*)paPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_minimum")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxVec4MinimumNative(PhysxPxVec4Pod* selfPod, PhysxPxVec4Pod* vPod);

		public static PhysxPxVec4Pod PxVec4Minimum( PhysxPxVec4Pod* selfPod,  PhysxPxVec4Pod* vPod)
		{
			PhysxPxVec4Pod ret = PxVec4MinimumNative(selfPod, vPod);
			return ret;
		}

		public static PhysxPxVec4Pod PxVec4Minimum( PhysxPxVec4Pod* selfPod,  ref PhysxPxVec4Pod vPod)
		{
			fixed (PhysxPxVec4Pod* pvPod = &vPod)
			{
				PhysxPxVec4Pod ret = PxVec4MinimumNative(selfPod, (PhysxPxVec4Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_maximum")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxVec4MaximumNative(PhysxPxVec4Pod* selfPod, PhysxPxVec4Pod* vPod);

		public static PhysxPxVec4Pod PxVec4Maximum( PhysxPxVec4Pod* selfPod,  PhysxPxVec4Pod* vPod)
		{
			PhysxPxVec4Pod ret = PxVec4MaximumNative(selfPod, vPod);
			return ret;
		}

		public static PhysxPxVec4Pod PxVec4Maximum( PhysxPxVec4Pod* selfPod,  ref PhysxPxVec4Pod vPod)
		{
			fixed (PhysxPxVec4Pod* pvPod = &vPod)
			{
				PhysxPxVec4Pod ret = PxVec4MaximumNative(selfPod, (PhysxPxVec4Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec4_getXYZ")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxVec4GetXYZNative(PhysxPxVec4Pod* selfPod);

		public static PhysxPxVec3Pod PxVec4GetXYZ( PhysxPxVec4Pod* selfPod)
		{
			PhysxPxVec3Pod ret = PxVec4GetXYZNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44NewNative();

		public static PhysxPxMat44Pod PxMat44New()
		{
			PhysxPxMat44Pod ret = PxMat44NewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44New1Native(int anonparam0Pod);

		public static PhysxPxMat44Pod PxMat44New1( int anonparam0Pod)
		{
			PhysxPxMat44Pod ret = PxMat44New1Native(anonparam0Pod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new_2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44New2Native(int anonparam0Pod);

		public static PhysxPxMat44Pod PxMat44New2( int anonparam0Pod)
		{
			PhysxPxMat44Pod ret = PxMat44New2Native(anonparam0Pod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new_3")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44New3Native(PhysxPxVec4Pod* col0Pod, PhysxPxVec4Pod* col1Pod, PhysxPxVec4Pod* col2Pod, PhysxPxVec4Pod* col3Pod);

		public static PhysxPxMat44Pod PxMat44New3( PhysxPxVec4Pod* col0Pod,  PhysxPxVec4Pod* col1Pod,  PhysxPxVec4Pod* col2Pod,  PhysxPxVec4Pod* col3Pod)
		{
			PhysxPxMat44Pod ret = PxMat44New3Native(col0Pod, col1Pod, col2Pod, col3Pod);
			return ret;
		}

		public static PhysxPxMat44Pod PxMat44New3( PhysxPxVec4Pod* col0Pod,  ref PhysxPxVec4Pod col1Pod,  PhysxPxVec4Pod* col2Pod,  PhysxPxVec4Pod* col3Pod)
		{
			fixed (PhysxPxVec4Pod* pcol1Pod = &col1Pod)
			{
				PhysxPxMat44Pod ret = PxMat44New3Native(col0Pod, (PhysxPxVec4Pod*)pcol1Pod, col2Pod, col3Pod);
				return ret;
			}
		}

		public static PhysxPxMat44Pod PxMat44New3( PhysxPxVec4Pod* col0Pod,  PhysxPxVec4Pod* col1Pod,  ref PhysxPxVec4Pod col2Pod,  PhysxPxVec4Pod* col3Pod)
		{
			fixed (PhysxPxVec4Pod* pcol2Pod = &col2Pod)
			{
				PhysxPxMat44Pod ret = PxMat44New3Native(col0Pod, col1Pod, (PhysxPxVec4Pod*)pcol2Pod, col3Pod);
				return ret;
			}
		}

		public static PhysxPxMat44Pod PxMat44New3( PhysxPxVec4Pod* col0Pod,  ref PhysxPxVec4Pod col1Pod,  ref PhysxPxVec4Pod col2Pod,  PhysxPxVec4Pod* col3Pod)
		{
			fixed (PhysxPxVec4Pod* pcol1Pod = &col1Pod)
			{
				fixed (PhysxPxVec4Pod* pcol2Pod = &col2Pod)
				{
					PhysxPxMat44Pod ret = PxMat44New3Native(col0Pod, (PhysxPxVec4Pod*)pcol1Pod, (PhysxPxVec4Pod*)pcol2Pod, col3Pod);
					return ret;
				}
			}
		}

		public static PhysxPxMat44Pod PxMat44New3( PhysxPxVec4Pod* col0Pod,  PhysxPxVec4Pod* col1Pod,  PhysxPxVec4Pod* col2Pod,  ref PhysxPxVec4Pod col3Pod)
		{
			fixed (PhysxPxVec4Pod* pcol3Pod = &col3Pod)
			{
				PhysxPxMat44Pod ret = PxMat44New3Native(col0Pod, col1Pod, col2Pod, (PhysxPxVec4Pod*)pcol3Pod);
				return ret;
			}
		}

		public static PhysxPxMat44Pod PxMat44New3( PhysxPxVec4Pod* col0Pod,  ref PhysxPxVec4Pod col1Pod,  PhysxPxVec4Pod* col2Pod,  ref PhysxPxVec4Pod col3Pod)
		{
			fixed (PhysxPxVec4Pod* pcol1Pod = &col1Pod)
			{
				fixed (PhysxPxVec4Pod* pcol3Pod = &col3Pod)
				{
					PhysxPxMat44Pod ret = PxMat44New3Native(col0Pod, (PhysxPxVec4Pod*)pcol1Pod, col2Pod, (PhysxPxVec4Pod*)pcol3Pod);
					return ret;
				}
			}
		}

		public static PhysxPxMat44Pod PxMat44New3( PhysxPxVec4Pod* col0Pod,  PhysxPxVec4Pod* col1Pod,  ref PhysxPxVec4Pod col2Pod,  ref PhysxPxVec4Pod col3Pod)
		{
			fixed (PhysxPxVec4Pod* pcol2Pod = &col2Pod)
			{
				fixed (PhysxPxVec4Pod* pcol3Pod = &col3Pod)
				{
					PhysxPxMat44Pod ret = PxMat44New3Native(col0Pod, col1Pod, (PhysxPxVec4Pod*)pcol2Pod, (PhysxPxVec4Pod*)pcol3Pod);
					return ret;
				}
			}
		}

		public static PhysxPxMat44Pod PxMat44New3( PhysxPxVec4Pod* col0Pod,  ref PhysxPxVec4Pod col1Pod,  ref PhysxPxVec4Pod col2Pod,  ref PhysxPxVec4Pod col3Pod)
		{
			fixed (PhysxPxVec4Pod* pcol1Pod = &col1Pod)
			{
				fixed (PhysxPxVec4Pod* pcol2Pod = &col2Pod)
				{
					fixed (PhysxPxVec4Pod* pcol3Pod = &col3Pod)
					{
						PhysxPxMat44Pod ret = PxMat44New3Native(col0Pod, (PhysxPxVec4Pod*)pcol1Pod, (PhysxPxVec4Pod*)pcol2Pod, (PhysxPxVec4Pod*)pcol3Pod);
						return ret;
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new_4")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44New4Native(float r);

		public static PhysxPxMat44Pod PxMat44New4( float r)
		{
			PhysxPxMat44Pod ret = PxMat44New4Native(r);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new_5")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44New5Native(PhysxPxVec3Pod* col0Pod, PhysxPxVec3Pod* col1Pod, PhysxPxVec3Pod* col2Pod, PhysxPxVec3Pod* col3Pod);

		public static PhysxPxMat44Pod PxMat44New5( PhysxPxVec3Pod* col0Pod,  PhysxPxVec3Pod* col1Pod,  PhysxPxVec3Pod* col2Pod,  PhysxPxVec3Pod* col3Pod)
		{
			PhysxPxMat44Pod ret = PxMat44New5Native(col0Pod, col1Pod, col2Pod, col3Pod);
			return ret;
		}

		public static PhysxPxMat44Pod PxMat44New5( PhysxPxVec3Pod* col0Pod,  ref PhysxPxVec3Pod col1Pod,  PhysxPxVec3Pod* col2Pod,  PhysxPxVec3Pod* col3Pod)
		{
			fixed (PhysxPxVec3Pod* pcol1Pod = &col1Pod)
			{
				PhysxPxMat44Pod ret = PxMat44New5Native(col0Pod, (PhysxPxVec3Pod*)pcol1Pod, col2Pod, col3Pod);
				return ret;
			}
		}

		public static PhysxPxMat44Pod PxMat44New5( PhysxPxVec3Pod* col0Pod,  PhysxPxVec3Pod* col1Pod,  ref PhysxPxVec3Pod col2Pod,  PhysxPxVec3Pod* col3Pod)
		{
			fixed (PhysxPxVec3Pod* pcol2Pod = &col2Pod)
			{
				PhysxPxMat44Pod ret = PxMat44New5Native(col0Pod, col1Pod, (PhysxPxVec3Pod*)pcol2Pod, col3Pod);
				return ret;
			}
		}

		public static PhysxPxMat44Pod PxMat44New5( PhysxPxVec3Pod* col0Pod,  ref PhysxPxVec3Pod col1Pod,  ref PhysxPxVec3Pod col2Pod,  PhysxPxVec3Pod* col3Pod)
		{
			fixed (PhysxPxVec3Pod* pcol1Pod = &col1Pod)
			{
				fixed (PhysxPxVec3Pod* pcol2Pod = &col2Pod)
				{
					PhysxPxMat44Pod ret = PxMat44New5Native(col0Pod, (PhysxPxVec3Pod*)pcol1Pod, (PhysxPxVec3Pod*)pcol2Pod, col3Pod);
					return ret;
				}
			}
		}

		public static PhysxPxMat44Pod PxMat44New5( PhysxPxVec3Pod* col0Pod,  PhysxPxVec3Pod* col1Pod,  PhysxPxVec3Pod* col2Pod,  ref PhysxPxVec3Pod col3Pod)
		{
			fixed (PhysxPxVec3Pod* pcol3Pod = &col3Pod)
			{
				PhysxPxMat44Pod ret = PxMat44New5Native(col0Pod, col1Pod, col2Pod, (PhysxPxVec3Pod*)pcol3Pod);
				return ret;
			}
		}

		public static PhysxPxMat44Pod PxMat44New5( PhysxPxVec3Pod* col0Pod,  ref PhysxPxVec3Pod col1Pod,  PhysxPxVec3Pod* col2Pod,  ref PhysxPxVec3Pod col3Pod)
		{
			fixed (PhysxPxVec3Pod* pcol1Pod = &col1Pod)
			{
				fixed (PhysxPxVec3Pod* pcol3Pod = &col3Pod)
				{
					PhysxPxMat44Pod ret = PxMat44New5Native(col0Pod, (PhysxPxVec3Pod*)pcol1Pod, col2Pod, (PhysxPxVec3Pod*)pcol3Pod);
					return ret;
				}
			}
		}

		public static PhysxPxMat44Pod PxMat44New5( PhysxPxVec3Pod* col0Pod,  PhysxPxVec3Pod* col1Pod,  ref PhysxPxVec3Pod col2Pod,  ref PhysxPxVec3Pod col3Pod)
		{
			fixed (PhysxPxVec3Pod* pcol2Pod = &col2Pod)
			{
				fixed (PhysxPxVec3Pod* pcol3Pod = &col3Pod)
				{
					PhysxPxMat44Pod ret = PxMat44New5Native(col0Pod, col1Pod, (PhysxPxVec3Pod*)pcol2Pod, (PhysxPxVec3Pod*)pcol3Pod);
					return ret;
				}
			}
		}

		public static PhysxPxMat44Pod PxMat44New5( PhysxPxVec3Pod* col0Pod,  ref PhysxPxVec3Pod col1Pod,  ref PhysxPxVec3Pod col2Pod,  ref PhysxPxVec3Pod col3Pod)
		{
			fixed (PhysxPxVec3Pod* pcol1Pod = &col1Pod)
			{
				fixed (PhysxPxVec3Pod* pcol2Pod = &col2Pod)
				{
					fixed (PhysxPxVec3Pod* pcol3Pod = &col3Pod)
					{
						PhysxPxMat44Pod ret = PxMat44New5Native(col0Pod, (PhysxPxVec3Pod*)pcol1Pod, (PhysxPxVec3Pod*)pcol2Pod, (PhysxPxVec3Pod*)pcol3Pod);
						return ret;
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new_6")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44New6Native(float* values);

		public static PhysxPxMat44Pod PxMat44New6( float* values)
		{
			PhysxPxMat44Pod ret = PxMat44New6Native(values);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new_7")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44New7Native(PhysxPxQuatPod* qPod);

		public static PhysxPxMat44Pod PxMat44New7( PhysxPxQuatPod* qPod)
		{
			PhysxPxMat44Pod ret = PxMat44New7Native(qPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new_8")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44New8Native(PhysxPxVec4Pod* diagonalPod);

		public static PhysxPxMat44Pod PxMat44New8( PhysxPxVec4Pod* diagonalPod)
		{
			PhysxPxMat44Pod ret = PxMat44New8Native(diagonalPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new_9")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44New9Native(PhysxPxMat33Pod* axesPod, PhysxPxVec3Pod* positionPod);

		public static PhysxPxMat44Pod PxMat44New9( PhysxPxMat33Pod* axesPod,  PhysxPxVec3Pod* positionPod)
		{
			PhysxPxMat44Pod ret = PxMat44New9Native(axesPod, positionPod);
			return ret;
		}

		public static PhysxPxMat44Pod PxMat44New9( PhysxPxMat33Pod* axesPod,  ref PhysxPxVec3Pod positionPod)
		{
			fixed (PhysxPxVec3Pod* ppositionPod = &positionPod)
			{
				PhysxPxMat44Pod ret = PxMat44New9Native(axesPod, (PhysxPxVec3Pod*)ppositionPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_new_10")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44New10Native(PhysxPxTransformPod* tPod);

		public static PhysxPxMat44Pod PxMat44New10( PhysxPxTransformPod* tPod)
		{
			PhysxPxMat44Pod ret = PxMat44New10Native(tPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_getTranspose")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44GetTransposeNative(PhysxPxMat44Pod* selfPod);

		public static PhysxPxMat44Pod PxMat44GetTranspose( PhysxPxMat44Pod* selfPod)
		{
			PhysxPxMat44Pod ret = PxMat44GetTransposeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_transform")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxMat44TransformNative(PhysxPxMat44Pod* selfPod, PhysxPxVec4Pod* otherPod);

		public static PhysxPxVec4Pod PxMat44Transform( PhysxPxMat44Pod* selfPod,  PhysxPxVec4Pod* otherPod)
		{
			PhysxPxVec4Pod ret = PxMat44TransformNative(selfPod, otherPod);
			return ret;
		}

		public static PhysxPxVec4Pod PxMat44Transform( PhysxPxMat44Pod* selfPod,  ref PhysxPxVec4Pod otherPod)
		{
			fixed (PhysxPxVec4Pod* potherPod = &otherPod)
			{
				PhysxPxVec4Pod ret = PxMat44TransformNative(selfPod, (PhysxPxVec4Pod*)potherPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_transform_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxMat44Transform1Native(PhysxPxMat44Pod* selfPod, PhysxPxVec3Pod* otherPod);

		public static PhysxPxVec3Pod PxMat44Transform1( PhysxPxMat44Pod* selfPod,  PhysxPxVec3Pod* otherPod)
		{
			PhysxPxVec3Pod ret = PxMat44Transform1Native(selfPod, otherPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxMat44Transform1( PhysxPxMat44Pod* selfPod,  ref PhysxPxVec3Pod otherPod)
		{
			fixed (PhysxPxVec3Pod* potherPod = &otherPod)
			{
				PhysxPxVec3Pod ret = PxMat44Transform1Native(selfPod, (PhysxPxVec3Pod*)potherPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_rotate")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec4Pod PxMat44RotateNative(PhysxPxMat44Pod* selfPod, PhysxPxVec4Pod* otherPod);

		public static PhysxPxVec4Pod PxMat44Rotate( PhysxPxMat44Pod* selfPod,  PhysxPxVec4Pod* otherPod)
		{
			PhysxPxVec4Pod ret = PxMat44RotateNative(selfPod, otherPod);
			return ret;
		}

		public static PhysxPxVec4Pod PxMat44Rotate( PhysxPxMat44Pod* selfPod,  ref PhysxPxVec4Pod otherPod)
		{
			fixed (PhysxPxVec4Pod* potherPod = &otherPod)
			{
				PhysxPxVec4Pod ret = PxMat44RotateNative(selfPod, (PhysxPxVec4Pod*)potherPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_rotate_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxMat44Rotate1Native(PhysxPxMat44Pod* selfPod, PhysxPxVec3Pod* otherPod);

		public static PhysxPxVec3Pod PxMat44Rotate1( PhysxPxMat44Pod* selfPod,  PhysxPxVec3Pod* otherPod)
		{
			PhysxPxVec3Pod ret = PxMat44Rotate1Native(selfPod, otherPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxMat44Rotate1( PhysxPxMat44Pod* selfPod,  ref PhysxPxVec3Pod otherPod)
		{
			fixed (PhysxPxVec3Pod* potherPod = &otherPod)
			{
				PhysxPxVec3Pod ret = PxMat44Rotate1Native(selfPod, (PhysxPxVec3Pod*)potherPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_getBasis")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxMat44GetBasisNative(PhysxPxMat44Pod* selfPod, uint num);

		public static PhysxPxVec3Pod PxMat44GetBasis( PhysxPxMat44Pod* selfPod,  uint num)
		{
			PhysxPxVec3Pod ret = PxMat44GetBasisNative(selfPod, num);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_getPosition")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxMat44GetPositionNative(PhysxPxMat44Pod* selfPod);

		public static PhysxPxVec3Pod PxMat44GetPosition( PhysxPxMat44Pod* selfPod)
		{
			PhysxPxVec3Pod ret = PxMat44GetPositionNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_setPosition_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxMat44SetPositionMutNative(PhysxPxMat44Pod* selfPod, PhysxPxVec3Pod* positionPod);

		public static void PxMat44SetPositionMut( PhysxPxMat44Pod* selfPod,  PhysxPxVec3Pod* positionPod)
		{
			PxMat44SetPositionMutNative(selfPod, positionPod);
		}

		public static void PxMat44SetPositionMut( PhysxPxMat44Pod* selfPod,  ref PhysxPxVec3Pod positionPod)
		{
			fixed (PhysxPxVec3Pod* ppositionPod = &positionPod)
			{
				PxMat44SetPositionMutNative(selfPod, (PhysxPxVec3Pod*)ppositionPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_front")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float* PxMat44FrontNative(PhysxPxMat44Pod* selfPod);

		public static float* PxMat44Front( PhysxPxMat44Pod* selfPod)
		{
			float* ret = PxMat44FrontNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_scale_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxMat44ScaleMutNative(PhysxPxMat44Pod* selfPod, PhysxPxVec4Pod* pPod);

		public static void PxMat44ScaleMut( PhysxPxMat44Pod* selfPod,  PhysxPxVec4Pod* pPod)
		{
			PxMat44ScaleMutNative(selfPod, pPod);
		}

		public static void PxMat44ScaleMut( PhysxPxMat44Pod* selfPod,  ref PhysxPxVec4Pod pPod)
		{
			fixed (PhysxPxVec4Pod* ppPod = &pPod)
			{
				PxMat44ScaleMutNative(selfPod, (PhysxPxVec4Pod*)ppPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_inverseRT")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat44Pod PxMat44InverseRNative(PhysxPxMat44Pod* selfPod);

		public static PhysxPxMat44Pod PxMat44InverseR( PhysxPxMat44Pod* selfPod)
		{
			PhysxPxMat44Pod ret = PxMat44InverseRNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMat44_isFinite")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxMat44IsFiniteNative(PhysxPxMat44Pod* selfPod);

		public static bool PxMat44IsFinite( PhysxPxMat44Pod* selfPod)
		{
			byte ret = PxMat44IsFiniteNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxPlanePod PxPlaneNewNative();

		public static PhysxPxPlanePod PxPlaneNew()
		{
			PhysxPxPlanePod ret = PxPlaneNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxPlanePod PxPlaneNew1Native(float nx, float ny, float nz, float distance);

		public static PhysxPxPlanePod PxPlaneNew1( float nx,  float ny,  float nz,  float distance)
		{
			PhysxPxPlanePod ret = PxPlaneNew1Native(nx, ny, nz, distance);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_new_2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxPlanePod PxPlaneNew2Native(PhysxPxVec3Pod* normalPod, float distance);

		public static PhysxPxPlanePod PxPlaneNew2( PhysxPxVec3Pod* normalPod,  float distance)
		{
			PhysxPxPlanePod ret = PxPlaneNew2Native(normalPod, distance);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_new_3")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxPlanePod PxPlaneNew3Native(PhysxPxVec3Pod* pointPod, PhysxPxVec3Pod* normalPod);

		public static PhysxPxPlanePod PxPlaneNew3( PhysxPxVec3Pod* pointPod,  PhysxPxVec3Pod* normalPod)
		{
			PhysxPxPlanePod ret = PxPlaneNew3Native(pointPod, normalPod);
			return ret;
		}

		public static PhysxPxPlanePod PxPlaneNew3( PhysxPxVec3Pod* pointPod,  ref PhysxPxVec3Pod normalPod)
		{
			fixed (PhysxPxVec3Pod* pnormalPod = &normalPod)
			{
				PhysxPxPlanePod ret = PxPlaneNew3Native(pointPod, (PhysxPxVec3Pod*)pnormalPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_new_4")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxPlanePod PxPlaneNew4Native(PhysxPxVec3Pod* p0Pod, PhysxPxVec3Pod* p1Pod, PhysxPxVec3Pod* p2Pod);

		public static PhysxPxPlanePod PxPlaneNew4( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  PhysxPxVec3Pod* p2Pod)
		{
			PhysxPxPlanePod ret = PxPlaneNew4Native(p0Pod, p1Pod, p2Pod);
			return ret;
		}

		public static PhysxPxPlanePod PxPlaneNew4( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  PhysxPxVec3Pod* p2Pod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				PhysxPxPlanePod ret = PxPlaneNew4Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, p2Pod);
				return ret;
			}
		}

		public static PhysxPxPlanePod PxPlaneNew4( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref PhysxPxVec3Pod p2Pod)
		{
			fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
			{
				PhysxPxPlanePod ret = PxPlaneNew4Native(p0Pod, p1Pod, (PhysxPxVec3Pod*)pp2Pod);
				return ret;
			}
		}

		public static PhysxPxPlanePod PxPlaneNew4( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref PhysxPxVec3Pod p2Pod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
				{
					PhysxPxPlanePod ret = PxPlaneNew4Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (PhysxPxVec3Pod*)pp2Pod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_distance")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxPlaneDistanceNative(PhysxPxPlanePod* selfPod, PhysxPxVec3Pod* pPod);

		public static float PxPlaneDistance( PhysxPxPlanePod* selfPod,  PhysxPxVec3Pod* pPod)
		{
			float ret = PxPlaneDistanceNative(selfPod, pPod);
			return ret;
		}

		public static float PxPlaneDistance( PhysxPxPlanePod* selfPod,  ref PhysxPxVec3Pod pPod)
		{
			fixed (PhysxPxVec3Pod* ppPod = &pPod)
			{
				float ret = PxPlaneDistanceNative(selfPod, (PhysxPxVec3Pod*)ppPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_contains")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxPlaneContainsNative(PhysxPxPlanePod* selfPod, PhysxPxVec3Pod* pPod);

		public static bool PxPlaneContains( PhysxPxPlanePod* selfPod,  PhysxPxVec3Pod* pPod)
		{
			byte ret = PxPlaneContainsNative(selfPod, pPod);
			return ret != 0;
		}

		public static bool PxPlaneContains( PhysxPxPlanePod* selfPod,  ref PhysxPxVec3Pod pPod)
		{
			fixed (PhysxPxVec3Pod* ppPod = &pPod)
			{
				byte ret = PxPlaneContainsNative(selfPod, (PhysxPxVec3Pod*)ppPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_project")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxPlaneProjectNative(PhysxPxPlanePod* selfPod, PhysxPxVec3Pod* pPod);

		public static PhysxPxVec3Pod PxPlaneProject( PhysxPxPlanePod* selfPod,  PhysxPxVec3Pod* pPod)
		{
			PhysxPxVec3Pod ret = PxPlaneProjectNative(selfPod, pPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxPlaneProject( PhysxPxPlanePod* selfPod,  ref PhysxPxVec3Pod pPod)
		{
			fixed (PhysxPxVec3Pod* ppPod = &pPod)
			{
				PhysxPxVec3Pod ret = PxPlaneProjectNative(selfPod, (PhysxPxVec3Pod*)ppPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_pointInPlane")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxPlanePointInPlaneNative(PhysxPxPlanePod* selfPod);

		public static PhysxPxVec3Pod PxPlanePointInPlane( PhysxPxPlanePod* selfPod)
		{
			PhysxPxVec3Pod ret = PxPlanePointInPlaneNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_normalize_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxPlaneNormalizeMutNative(PhysxPxPlanePod* selfPod);

		public static void PxPlaneNormalizeMut( PhysxPxPlanePod* selfPod)
		{
			PxPlaneNormalizeMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_transform")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxPlanePod PxPlaneTransformNative(PhysxPxPlanePod* selfPod, PhysxPxTransformPod* posePod);

		public static PhysxPxPlanePod PxPlaneTransform( PhysxPxPlanePod* selfPod,  PhysxPxTransformPod* posePod)
		{
			PhysxPxPlanePod ret = PxPlaneTransformNative(selfPod, posePod);
			return ret;
		}

		public static PhysxPxPlanePod PxPlaneTransform( PhysxPxPlanePod* selfPod,  ref PhysxPxTransformPod posePod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				PhysxPxPlanePod ret = PxPlaneTransformNative(selfPod, (PhysxPxTransformPod*)pposePod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxPlane_inverseTransform")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxPlanePod PxPlaneInverseTransformNative(PhysxPxPlanePod* selfPod, PhysxPxTransformPod* posePod);

		public static PhysxPxPlanePod PxPlaneInverseTransform( PhysxPxPlanePod* selfPod,  PhysxPxTransformPod* posePod)
		{
			PhysxPxPlanePod ret = PxPlaneInverseTransformNative(selfPod, posePod);
			return ret;
		}

		public static PhysxPxPlanePod PxPlaneInverseTransform( PhysxPxPlanePod* selfPod,  ref PhysxPxTransformPod posePod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				PhysxPxPlanePod ret = PxPlaneInverseTransformNative(selfPod, (PhysxPxTransformPod*)pposePod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxShortestRotation")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PhysPxShortestRotationNative(PhysxPxVec3Pod* fromPod, PhysxPxVec3Pod* targetPod);

		public static PhysxPxQuatPod PhysPxShortestRotation( PhysxPxVec3Pod* fromPod,  PhysxPxVec3Pod* targetPod)
		{
			PhysxPxQuatPod ret = PhysPxShortestRotationNative(fromPod, targetPod);
			return ret;
		}

		public static PhysxPxQuatPod PhysPxShortestRotation( PhysxPxVec3Pod* fromPod,  ref PhysxPxVec3Pod targetPod)
		{
			fixed (PhysxPxVec3Pod* ptargetPod = &targetPod)
			{
				PhysxPxQuatPod ret = PhysPxShortestRotationNative(fromPod, (PhysxPxVec3Pod*)ptargetPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxDiagonalize")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PhysPxDiagonalizeNative(PhysxPxMat33Pod* mPod, PhysxPxQuatPod* axesPod);

		public static PhysxPxVec3Pod PhysPxDiagonalize( PhysxPxMat33Pod* mPod,  PhysxPxQuatPod* axesPod)
		{
			PhysxPxVec3Pod ret = PhysPxDiagonalizeNative(mPod, axesPod);
			return ret;
		}

		public static PhysxPxVec3Pod PhysPxDiagonalize( PhysxPxMat33Pod* mPod,  ref PhysxPxQuatPod axesPod)
		{
			fixed (PhysxPxQuatPod* paxesPod = &axesPod)
			{
				PhysxPxVec3Pod ret = PhysPxDiagonalizeNative(mPod, (PhysxPxQuatPod*)paxesPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxTransformFromSegment")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PhysPxTransformFromSegmentNative(PhysxPxVec3Pod* p0Pod, PhysxPxVec3Pod* p1Pod, float* halfHeight);

		public static PhysxPxTransformPod PhysPxTransformFromSegment( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  float* halfHeight)
		{
			PhysxPxTransformPod ret = PhysPxTransformFromSegmentNative(p0Pod, p1Pod, halfHeight);
			return ret;
		}

		public static PhysxPxTransformPod PhysPxTransformFromSegment( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  float* halfHeight)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				PhysxPxTransformPod ret = PhysPxTransformFromSegmentNative(p0Pod, (PhysxPxVec3Pod*)pp1Pod, halfHeight);
				return ret;
			}
		}

		public static PhysxPxTransformPod PhysPxTransformFromSegment( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref float halfHeight)
		{
			fixed (float* phalfHeight = &halfHeight)
			{
				PhysxPxTransformPod ret = PhysPxTransformFromSegmentNative(p0Pod, p1Pod, (float*)phalfHeight);
				return ret;
			}
		}

		public static PhysxPxTransformPod PhysPxTransformFromSegment( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref float halfHeight)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (float* phalfHeight = &halfHeight)
				{
					PhysxPxTransformPod ret = PhysPxTransformFromSegmentNative(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (float*)phalfHeight);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxTransformFromPlaneEquation")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTransformPod PhysPxTransformFromPlaneEquationNative(PhysxPxPlanePod* planePod);

		public static PhysxPxTransformPod PhysPxTransformFromPlaneEquation( PhysxPxPlanePod* planePod)
		{
			PhysxPxTransformPod ret = PhysPxTransformFromPlaneEquationNative(planePod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxPlaneEquationFromTransform")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxPlanePod PhysPxPlaneEquationFromTransformNative(PhysxPxTransformPod* posePod);

		public static PhysxPxPlanePod PhysPxPlaneEquationFromTransform( PhysxPxTransformPod* posePod)
		{
			PhysxPxPlanePod ret = PhysPxPlaneEquationFromTransformNative(posePod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxSlerp")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PhysPxSlerpNative(float t, PhysxPxQuatPod* leftPod, PhysxPxQuatPod* rightPod);

		public static PhysxPxQuatPod PhysPxSlerp( float t,  PhysxPxQuatPod* leftPod,  PhysxPxQuatPod* rightPod)
		{
			PhysxPxQuatPod ret = PhysPxSlerpNative(t, leftPod, rightPod);
			return ret;
		}

		public static PhysxPxQuatPod PhysPxSlerp( float t,  ref PhysxPxQuatPod leftPod,  PhysxPxQuatPod* rightPod)
		{
			fixed (PhysxPxQuatPod* pleftPod = &leftPod)
			{
				PhysxPxQuatPod ret = PhysPxSlerpNative(t, (PhysxPxQuatPod*)pleftPod, rightPod);
				return ret;
			}
		}

		public static PhysxPxQuatPod PhysPxSlerp( float t,  PhysxPxQuatPod* leftPod,  ref PhysxPxQuatPod rightPod)
		{
			fixed (PhysxPxQuatPod* prightPod = &rightPod)
			{
				PhysxPxQuatPod ret = PhysPxSlerpNative(t, leftPod, (PhysxPxQuatPod*)prightPod);
				return ret;
			}
		}

		public static PhysxPxQuatPod PhysPxSlerp( float t,  ref PhysxPxQuatPod leftPod,  ref PhysxPxQuatPod rightPod)
		{
			fixed (PhysxPxQuatPod* pleftPod = &leftPod)
			{
				fixed (PhysxPxQuatPod* prightPod = &rightPod)
				{
					PhysxPxQuatPod ret = PhysPxSlerpNative(t, (PhysxPxQuatPod*)pleftPod, (PhysxPxQuatPod*)prightPod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxIntegrateTransform")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxIntegrateTransformNative(PhysxPxTransformPod* curtransPod, PhysxPxVec3Pod* linvelPod, PhysxPxVec3Pod* angvelPod, float timeStep, PhysxPxTransformPod* resultPod);

		public static void PhysPxIntegrateTransform( PhysxPxTransformPod* curtransPod,  PhysxPxVec3Pod* linvelPod,  PhysxPxVec3Pod* angvelPod,  float timeStep,  PhysxPxTransformPod* resultPod)
		{
			PhysPxIntegrateTransformNative(curtransPod, linvelPod, angvelPod, timeStep, resultPod);
		}

		public static void PhysPxIntegrateTransform( PhysxPxTransformPod* curtransPod,  ref PhysxPxVec3Pod linvelPod,  PhysxPxVec3Pod* angvelPod,  float timeStep,  PhysxPxTransformPod* resultPod)
		{
			fixed (PhysxPxVec3Pod* plinvelPod = &linvelPod)
			{
				PhysPxIntegrateTransformNative(curtransPod, (PhysxPxVec3Pod*)plinvelPod, angvelPod, timeStep, resultPod);
			}
		}

		public static void PhysPxIntegrateTransform( PhysxPxTransformPod* curtransPod,  PhysxPxVec3Pod* linvelPod,  ref PhysxPxVec3Pod angvelPod,  float timeStep,  PhysxPxTransformPod* resultPod)
		{
			fixed (PhysxPxVec3Pod* pangvelPod = &angvelPod)
			{
				PhysPxIntegrateTransformNative(curtransPod, linvelPod, (PhysxPxVec3Pod*)pangvelPod, timeStep, resultPod);
			}
		}

		public static void PhysPxIntegrateTransform( PhysxPxTransformPod* curtransPod,  ref PhysxPxVec3Pod linvelPod,  ref PhysxPxVec3Pod angvelPod,  float timeStep,  PhysxPxTransformPod* resultPod)
		{
			fixed (PhysxPxVec3Pod* plinvelPod = &linvelPod)
			{
				fixed (PhysxPxVec3Pod* pangvelPod = &angvelPod)
				{
					PhysPxIntegrateTransformNative(curtransPod, (PhysxPxVec3Pod*)plinvelPod, (PhysxPxVec3Pod*)pangvelPod, timeStep, resultPod);
				}
			}
		}

		public static void PhysPxIntegrateTransform( PhysxPxTransformPod* curtransPod,  PhysxPxVec3Pod* linvelPod,  PhysxPxVec3Pod* angvelPod,  float timeStep,  ref PhysxPxTransformPod resultPod)
		{
			fixed (PhysxPxTransformPod* presultPod = &resultPod)
			{
				PhysPxIntegrateTransformNative(curtransPod, linvelPod, angvelPod, timeStep, (PhysxPxTransformPod*)presultPod);
			}
		}

		public static void PhysPxIntegrateTransform( PhysxPxTransformPod* curtransPod,  ref PhysxPxVec3Pod linvelPod,  PhysxPxVec3Pod* angvelPod,  float timeStep,  ref PhysxPxTransformPod resultPod)
		{
			fixed (PhysxPxVec3Pod* plinvelPod = &linvelPod)
			{
				fixed (PhysxPxTransformPod* presultPod = &resultPod)
				{
					PhysPxIntegrateTransformNative(curtransPod, (PhysxPxVec3Pod*)plinvelPod, angvelPod, timeStep, (PhysxPxTransformPod*)presultPod);
				}
			}
		}

		public static void PhysPxIntegrateTransform( PhysxPxTransformPod* curtransPod,  PhysxPxVec3Pod* linvelPod,  ref PhysxPxVec3Pod angvelPod,  float timeStep,  ref PhysxPxTransformPod resultPod)
		{
			fixed (PhysxPxVec3Pod* pangvelPod = &angvelPod)
			{
				fixed (PhysxPxTransformPod* presultPod = &resultPod)
				{
					PhysPxIntegrateTransformNative(curtransPod, linvelPod, (PhysxPxVec3Pod*)pangvelPod, timeStep, (PhysxPxTransformPod*)presultPod);
				}
			}
		}

		public static void PhysPxIntegrateTransform( PhysxPxTransformPod* curtransPod,  ref PhysxPxVec3Pod linvelPod,  ref PhysxPxVec3Pod angvelPod,  float timeStep,  ref PhysxPxTransformPod resultPod)
		{
			fixed (PhysxPxVec3Pod* plinvelPod = &linvelPod)
			{
				fixed (PhysxPxVec3Pod* pangvelPod = &angvelPod)
				{
					fixed (PhysxPxTransformPod* presultPod = &resultPod)
					{
						PhysPxIntegrateTransformNative(curtransPod, (PhysxPxVec3Pod*)plinvelPod, (PhysxPxVec3Pod*)pangvelPod, timeStep, (PhysxPxTransformPod*)presultPod);
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxExp")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQuatPod PhysPxExpNative(PhysxPxVec3Pod* vPod);

		public static PhysxPxQuatPod PhysPxExp( PhysxPxVec3Pod* vPod)
		{
			PhysxPxQuatPod ret = PhysPxExpNative(vPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxOptimizeBoundingBox")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PhysPxOptimizeBoundingBoxNative(PhysxPxMat33Pod* basisPod);

		public static PhysxPxVec3Pod PhysPxOptimizeBoundingBox( PhysxPxMat33Pod* basisPod)
		{
			PhysxPxVec3Pod ret = PhysPxOptimizeBoundingBoxNative(basisPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxLog")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PhysPxLogNative(PhysxPxQuatPod* qPod);

		public static PhysxPxVec3Pod PhysPxLog( PhysxPxQuatPod* qPod)
		{
			PhysxPxVec3Pod ret = PhysPxLogNative(qPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxLargestAxis")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxLargestAxisNative(PhysxPxVec3Pod* vPod);

		public static uint PhysPxLargestAxis( PhysxPxVec3Pod* vPod)
		{
			uint ret = PhysPxLargestAxisNative(vPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxTanHalf")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PhysPxTanHalfNative(float sin, float cos);

		public static float PhysPxTanHalf( float sin,  float cos)
		{
			float ret = PhysPxTanHalfNative(sin, cos);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxEllipseClamp")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PhysPxEllipseClampNative(PhysxPxVec3Pod* pointPod, PhysxPxVec3Pod* radiiPod);

		public static PhysxPxVec3Pod PhysPxEllipseClamp( PhysxPxVec3Pod* pointPod,  PhysxPxVec3Pod* radiiPod)
		{
			PhysxPxVec3Pod ret = PhysPxEllipseClampNative(pointPod, radiiPod);
			return ret;
		}

		public static PhysxPxVec3Pod PhysPxEllipseClamp( PhysxPxVec3Pod* pointPod,  ref PhysxPxVec3Pod radiiPod)
		{
			fixed (PhysxPxVec3Pod* pradiiPod = &radiiPod)
			{
				PhysxPxVec3Pod ret = PhysPxEllipseClampNative(pointPod, (PhysxPxVec3Pod*)pradiiPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxSeparateSwingTwist")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxSeparateSwingTwistNative(PhysxPxQuatPod* qPod, PhysxPxQuatPod* swingPod, PhysxPxQuatPod* twistPod);

		public static void PhysPxSeparateSwingTwist( PhysxPxQuatPod* qPod,  PhysxPxQuatPod* swingPod,  PhysxPxQuatPod* twistPod)
		{
			PhysPxSeparateSwingTwistNative(qPod, swingPod, twistPod);
		}

		public static void PhysPxSeparateSwingTwist( PhysxPxQuatPod* qPod,  ref PhysxPxQuatPod swingPod,  PhysxPxQuatPod* twistPod)
		{
			fixed (PhysxPxQuatPod* pswingPod = &swingPod)
			{
				PhysPxSeparateSwingTwistNative(qPod, (PhysxPxQuatPod*)pswingPod, twistPod);
			}
		}

		public static void PhysPxSeparateSwingTwist( PhysxPxQuatPod* qPod,  PhysxPxQuatPod* swingPod,  ref PhysxPxQuatPod twistPod)
		{
			fixed (PhysxPxQuatPod* ptwistPod = &twistPod)
			{
				PhysPxSeparateSwingTwistNative(qPod, swingPod, (PhysxPxQuatPod*)ptwistPod);
			}
		}

		public static void PhysPxSeparateSwingTwist( PhysxPxQuatPod* qPod,  ref PhysxPxQuatPod swingPod,  ref PhysxPxQuatPod twistPod)
		{
			fixed (PhysxPxQuatPod* pswingPod = &swingPod)
			{
				fixed (PhysxPxQuatPod* ptwistPod = &twistPod)
				{
					PhysPxSeparateSwingTwistNative(qPod, (PhysxPxQuatPod*)pswingPod, (PhysxPxQuatPod*)ptwistPod);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxComputeAngle")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PhysPxComputeAngleNative(PhysxPxVec3Pod* v0Pod, PhysxPxVec3Pod* v1Pod);

		public static float PhysPxComputeAngle( PhysxPxVec3Pod* v0Pod,  PhysxPxVec3Pod* v1Pod)
		{
			float ret = PhysPxComputeAngleNative(v0Pod, v1Pod);
			return ret;
		}

		public static float PhysPxComputeAngle( PhysxPxVec3Pod* v0Pod,  ref PhysxPxVec3Pod v1Pod)
		{
			fixed (PhysxPxVec3Pod* pv1Pod = &v1Pod)
			{
				float ret = PhysPxComputeAngleNative(v0Pod, (PhysxPxVec3Pod*)pv1Pod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxComputeBasisVectors")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxComputeBasisVectorsNative(PhysxPxVec3Pod* dirPod, PhysxPxVec3Pod* rightPod, PhysxPxVec3Pod* upPod);

		public static void PhysPxComputeBasisVectors( PhysxPxVec3Pod* dirPod,  PhysxPxVec3Pod* rightPod,  PhysxPxVec3Pod* upPod)
		{
			PhysPxComputeBasisVectorsNative(dirPod, rightPod, upPod);
		}

		public static void PhysPxComputeBasisVectors( PhysxPxVec3Pod* dirPod,  ref PhysxPxVec3Pod rightPod,  PhysxPxVec3Pod* upPod)
		{
			fixed (PhysxPxVec3Pod* prightPod = &rightPod)
			{
				PhysPxComputeBasisVectorsNative(dirPod, (PhysxPxVec3Pod*)prightPod, upPod);
			}
		}

		public static void PhysPxComputeBasisVectors( PhysxPxVec3Pod* dirPod,  PhysxPxVec3Pod* rightPod,  ref PhysxPxVec3Pod upPod)
		{
			fixed (PhysxPxVec3Pod* pupPod = &upPod)
			{
				PhysPxComputeBasisVectorsNative(dirPod, rightPod, (PhysxPxVec3Pod*)pupPod);
			}
		}

		public static void PhysPxComputeBasisVectors( PhysxPxVec3Pod* dirPod,  ref PhysxPxVec3Pod rightPod,  ref PhysxPxVec3Pod upPod)
		{
			fixed (PhysxPxVec3Pod* prightPod = &rightPod)
			{
				fixed (PhysxPxVec3Pod* pupPod = &upPod)
				{
					PhysPxComputeBasisVectorsNative(dirPod, (PhysxPxVec3Pod*)prightPod, (PhysxPxVec3Pod*)pupPod);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxComputeBasisVectors_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxComputeBasisVectors1Native(PhysxPxVec3Pod* p0Pod, PhysxPxVec3Pod* p1Pod, PhysxPxVec3Pod* dirPod, PhysxPxVec3Pod* rightPod, PhysxPxVec3Pod* upPod);

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  PhysxPxVec3Pod* dirPod,  PhysxPxVec3Pod* rightPod,  PhysxPxVec3Pod* upPod)
		{
			PhysPxComputeBasisVectors1Native(p0Pod, p1Pod, dirPod, rightPod, upPod);
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  PhysxPxVec3Pod* dirPod,  PhysxPxVec3Pod* rightPod,  PhysxPxVec3Pod* upPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				PhysPxComputeBasisVectors1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, dirPod, rightPod, upPod);
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref PhysxPxVec3Pod dirPod,  PhysxPxVec3Pod* rightPod,  PhysxPxVec3Pod* upPod)
		{
			fixed (PhysxPxVec3Pod* pdirPod = &dirPod)
			{
				PhysPxComputeBasisVectors1Native(p0Pod, p1Pod, (PhysxPxVec3Pod*)pdirPod, rightPod, upPod);
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref PhysxPxVec3Pod dirPod,  PhysxPxVec3Pod* rightPod,  PhysxPxVec3Pod* upPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pdirPod = &dirPod)
				{
					PhysPxComputeBasisVectors1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (PhysxPxVec3Pod*)pdirPod, rightPod, upPod);
				}
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  PhysxPxVec3Pod* dirPod,  ref PhysxPxVec3Pod rightPod,  PhysxPxVec3Pod* upPod)
		{
			fixed (PhysxPxVec3Pod* prightPod = &rightPod)
			{
				PhysPxComputeBasisVectors1Native(p0Pod, p1Pod, dirPod, (PhysxPxVec3Pod*)prightPod, upPod);
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  PhysxPxVec3Pod* dirPod,  ref PhysxPxVec3Pod rightPod,  PhysxPxVec3Pod* upPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* prightPod = &rightPod)
				{
					PhysPxComputeBasisVectors1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, dirPod, (PhysxPxVec3Pod*)prightPod, upPod);
				}
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref PhysxPxVec3Pod dirPod,  ref PhysxPxVec3Pod rightPod,  PhysxPxVec3Pod* upPod)
		{
			fixed (PhysxPxVec3Pod* pdirPod = &dirPod)
			{
				fixed (PhysxPxVec3Pod* prightPod = &rightPod)
				{
					PhysPxComputeBasisVectors1Native(p0Pod, p1Pod, (PhysxPxVec3Pod*)pdirPod, (PhysxPxVec3Pod*)prightPod, upPod);
				}
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref PhysxPxVec3Pod dirPod,  ref PhysxPxVec3Pod rightPod,  PhysxPxVec3Pod* upPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pdirPod = &dirPod)
				{
					fixed (PhysxPxVec3Pod* prightPod = &rightPod)
					{
						PhysPxComputeBasisVectors1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (PhysxPxVec3Pod*)pdirPod, (PhysxPxVec3Pod*)prightPod, upPod);
					}
				}
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  PhysxPxVec3Pod* dirPod,  PhysxPxVec3Pod* rightPod,  ref PhysxPxVec3Pod upPod)
		{
			fixed (PhysxPxVec3Pod* pupPod = &upPod)
			{
				PhysPxComputeBasisVectors1Native(p0Pod, p1Pod, dirPod, rightPod, (PhysxPxVec3Pod*)pupPod);
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  PhysxPxVec3Pod* dirPod,  PhysxPxVec3Pod* rightPod,  ref PhysxPxVec3Pod upPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pupPod = &upPod)
				{
					PhysPxComputeBasisVectors1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, dirPod, rightPod, (PhysxPxVec3Pod*)pupPod);
				}
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref PhysxPxVec3Pod dirPod,  PhysxPxVec3Pod* rightPod,  ref PhysxPxVec3Pod upPod)
		{
			fixed (PhysxPxVec3Pod* pdirPod = &dirPod)
			{
				fixed (PhysxPxVec3Pod* pupPod = &upPod)
				{
					PhysPxComputeBasisVectors1Native(p0Pod, p1Pod, (PhysxPxVec3Pod*)pdirPod, rightPod, (PhysxPxVec3Pod*)pupPod);
				}
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref PhysxPxVec3Pod dirPod,  PhysxPxVec3Pod* rightPod,  ref PhysxPxVec3Pod upPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pdirPod = &dirPod)
				{
					fixed (PhysxPxVec3Pod* pupPod = &upPod)
					{
						PhysPxComputeBasisVectors1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (PhysxPxVec3Pod*)pdirPod, rightPod, (PhysxPxVec3Pod*)pupPod);
					}
				}
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  PhysxPxVec3Pod* dirPod,  ref PhysxPxVec3Pod rightPod,  ref PhysxPxVec3Pod upPod)
		{
			fixed (PhysxPxVec3Pod* prightPod = &rightPod)
			{
				fixed (PhysxPxVec3Pod* pupPod = &upPod)
				{
					PhysPxComputeBasisVectors1Native(p0Pod, p1Pod, dirPod, (PhysxPxVec3Pod*)prightPod, (PhysxPxVec3Pod*)pupPod);
				}
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  PhysxPxVec3Pod* dirPod,  ref PhysxPxVec3Pod rightPod,  ref PhysxPxVec3Pod upPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* prightPod = &rightPod)
				{
					fixed (PhysxPxVec3Pod* pupPod = &upPod)
					{
						PhysPxComputeBasisVectors1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, dirPod, (PhysxPxVec3Pod*)prightPod, (PhysxPxVec3Pod*)pupPod);
					}
				}
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref PhysxPxVec3Pod dirPod,  ref PhysxPxVec3Pod rightPod,  ref PhysxPxVec3Pod upPod)
		{
			fixed (PhysxPxVec3Pod* pdirPod = &dirPod)
			{
				fixed (PhysxPxVec3Pod* prightPod = &rightPod)
				{
					fixed (PhysxPxVec3Pod* pupPod = &upPod)
					{
						PhysPxComputeBasisVectors1Native(p0Pod, p1Pod, (PhysxPxVec3Pod*)pdirPod, (PhysxPxVec3Pod*)prightPod, (PhysxPxVec3Pod*)pupPod);
					}
				}
			}
		}

		public static void PhysPxComputeBasisVectors1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref PhysxPxVec3Pod dirPod,  ref PhysxPxVec3Pod rightPod,  ref PhysxPxVec3Pod upPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pdirPod = &dirPod)
				{
					fixed (PhysxPxVec3Pod* prightPod = &rightPod)
					{
						fixed (PhysxPxVec3Pod* pupPod = &upPod)
						{
							PhysPxComputeBasisVectors1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (PhysxPxVec3Pod*)pdirPod, (PhysxPxVec3Pod*)prightPod, (PhysxPxVec3Pod*)pupPod);
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetNextIndex3")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxGetNextIndex3Native(uint i);

		public static uint PhysPxGetNextIndex3( uint i)
		{
			uint ret = PhysPxGetNextIndex3Native(i);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_computeBarycentric")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysComputeBarycentricNative(PhysxPxVec3Pod* aPod, PhysxPxVec3Pod* bPod, PhysxPxVec3Pod* cPod, PhysxPxVec3Pod* dPod, PhysxPxVec3Pod* pPod, PhysxPxVec4Pod* baryPod);

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* dPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			PhysComputeBarycentricNative(aPod, bPod, cPod, dPod, pPod, baryPod);
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* dPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, cPod, dPod, pPod, baryPod);
			}
		}
	}
}
