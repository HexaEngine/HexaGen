// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.PhysX
{
	public unsafe partial class PhysX
	{

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  PhysxPxQueryThreadContextPod* threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, threadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  PhysxPxQueryThreadContextPod* threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, threadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  PhysxPxQueryThreadContextPod* threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, threadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  PhysxPxQueryThreadContextPod* threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, threadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  PhysxPxQueryThreadContextPod* threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, threadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  PhysxPxQueryThreadContextPod* threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
						{
							fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
							{
								byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, threadcontextPod);
								return ret != 0;
							}
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
			{
				byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, pose0Pod, geom1Pod, pose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
				return ret != 0;
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
				{
					byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, geom1Pod, pose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
				{
					byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, pose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, pose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
			{
				fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
				{
					byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
			{
				fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
				{
					byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, pose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
						{
							fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
							{
								byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, sweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
								return ret != 0;
							}
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
			{
				fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
				{
					byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, pose0Pod, geom1Pod, pose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
				{
					fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, geom1Pod, pose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
				{
					fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, pose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, pose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
			{
				fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
				{
					fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
						{
							fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
							{
								byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
								return ret != 0;
							}
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
			{
				fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
				{
					fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
					{
						byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, pose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
						{
							fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
							{
								byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
								return ret != 0;
							}
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
						{
							byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
						{
							fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
							{
								byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
								return ret != 0;
							}
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
						{
							fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
							{
								byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
								return ret != 0;
							}
						}
					}
				}
			}
		}

		public static bool PxGeometryQuerySweep( PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  float inflation,  uint queryflagsPod,  ref PhysxPxQueryThreadContextPod threadcontextPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
						{
							fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
							{
								fixed (PhysxPxQueryThreadContextPod* pthreadcontextPod = &threadcontextPod)
								{
									byte ret = PxGeometryQuerySweepNative(unitdirPod, maxDist, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, inflation, queryflagsPod, (PhysxPxQueryThreadContextPod*)pthreadcontextPod);
									return ret != 0;
								}
							}
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxGeometryQuery_computePenetration")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxGeometryQueryComputePenetrationNative(PhysxPxVec3Pod* directionPod, float* depthPod, PhysxPxGeometryPod* geom0Pod, PhysxPxTransformPod* pose0Pod, PhysxPxGeometryPod* geom1Pod, PhysxPxTransformPod* pose1Pod, uint queryflagsPod);

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, geom0Pod, pose0Pod, geom1Pod, pose1Pod, queryflagsPod);
			return ret != 0;
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, geom0Pod, pose0Pod, geom1Pod, pose1Pod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, geom1Pod, pose1Pod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
				{
					byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, geom1Pod, pose1Pod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, pose1Pod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, pose1Pod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, pose1Pod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
				{
					fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
					{
						byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, pose1Pod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
			{
				byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, geom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, geom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  PhysxPxTransformPod* pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
				{
					fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
					{
						fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
						{
							byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, pose1Pod, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
			{
				byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, geom0Pod, pose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, geom0Pod, pose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  PhysxPxGeometryPod* geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
				{
					fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
					{
						fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
						{
							byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, geom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
			{
				fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
				{
					byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, geom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  PhysxPxGeometryPod* geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, geom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  ref PhysxPxGeometryPod geom0Pod,  PhysxPxTransformPod* pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
						{
							byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, (PhysxPxGeometryPod*)pgeom0Pod, pose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
			{
				fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
				{
					fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
					{
						byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  PhysxPxGeometryPod* geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
						{
							byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, geom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  float* depthPod,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
			{
				fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
				{
					fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
					{
						fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
						{
							byte ret = PxGeometryQueryComputePenetrationNative(directionPod, depthPod, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxGeometryQueryComputePenetration( PhysxPxVec3Pod* directionPod,  ref float depthPod,  ref PhysxPxGeometryPod geom0Pod,  ref PhysxPxTransformPod pose0Pod,  ref PhysxPxGeometryPod geom1Pod,  ref PhysxPxTransformPod pose1Pod,  uint queryflagsPod)
		{
			fixed (float* pdepthPod = &depthPod)
			{
				fixed (PhysxPxGeometryPod* pgeom0Pod = &geom0Pod)
				{
					fixed (PhysxPxTransformPod* ppose0Pod = &pose0Pod)
					{
						fixed (PhysxPxGeometryPod* pgeom1Pod = &geom1Pod)
						{
							fixed (PhysxPxTransformPod* ppose1Pod = &pose1Pod)
							{
								byte ret = PxGeometryQueryComputePenetrationNative(directionPod, (float*)pdepthPod, (PhysxPxGeometryPod*)pgeom0Pod, (PhysxPxTransformPod*)ppose0Pod, (PhysxPxGeometryPod*)pgeom1Pod, (PhysxPxTransformPod*)ppose1Pod, queryflagsPod);
								return ret != 0;
							}
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxGeometryQuery_pointDistance")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxGeometryQueryPointDistanceNative(PhysxPxVec3Pod* pointPod, PhysxPxGeometryPod* geomPod, PhysxPxTransformPod* posePod, PhysxPxVec3Pod* closestpointPod, uint* closestIndex, uint queryflagsPod);

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  PhysxPxVec3Pod* closestpointPod,  uint* closestIndex,  uint queryflagsPod)
		{
			float ret = PxGeometryQueryPointDistanceNative(pointPod, geomPod, posePod, closestpointPod, closestIndex, queryflagsPod);
			return ret;
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  PhysxPxVec3Pod* closestpointPod,  uint* closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				float ret = PxGeometryQueryPointDistanceNative(pointPod, (PhysxPxGeometryPod*)pgeomPod, posePod, closestpointPod, closestIndex, queryflagsPod);
				return ret;
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  PhysxPxVec3Pod* closestpointPod,  uint* closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				float ret = PxGeometryQueryPointDistanceNative(pointPod, geomPod, (PhysxPxTransformPod*)pposePod, closestpointPod, closestIndex, queryflagsPod);
				return ret;
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  PhysxPxVec3Pod* closestpointPod,  uint* closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					float ret = PxGeometryQueryPointDistanceNative(pointPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, closestpointPod, closestIndex, queryflagsPod);
					return ret;
				}
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  ref PhysxPxVec3Pod closestpointPod,  uint* closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxVec3Pod* pclosestpointPod = &closestpointPod)
			{
				float ret = PxGeometryQueryPointDistanceNative(pointPod, geomPod, posePod, (PhysxPxVec3Pod*)pclosestpointPod, closestIndex, queryflagsPod);
				return ret;
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  ref PhysxPxVec3Pod closestpointPod,  uint* closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxVec3Pod* pclosestpointPod = &closestpointPod)
				{
					float ret = PxGeometryQueryPointDistanceNative(pointPod, (PhysxPxGeometryPod*)pgeomPod, posePod, (PhysxPxVec3Pod*)pclosestpointPod, closestIndex, queryflagsPod);
					return ret;
				}
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  ref PhysxPxVec3Pod closestpointPod,  uint* closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxVec3Pod* pclosestpointPod = &closestpointPod)
				{
					float ret = PxGeometryQueryPointDistanceNative(pointPod, geomPod, (PhysxPxTransformPod*)pposePod, (PhysxPxVec3Pod*)pclosestpointPod, closestIndex, queryflagsPod);
					return ret;
				}
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  ref PhysxPxVec3Pod closestpointPod,  uint* closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxVec3Pod* pclosestpointPod = &closestpointPod)
					{
						float ret = PxGeometryQueryPointDistanceNative(pointPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, (PhysxPxVec3Pod*)pclosestpointPod, closestIndex, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  PhysxPxVec3Pod* closestpointPod,  ref uint closestIndex,  uint queryflagsPod)
		{
			fixed (uint* pclosestIndex = &closestIndex)
			{
				float ret = PxGeometryQueryPointDistanceNative(pointPod, geomPod, posePod, closestpointPod, (uint*)pclosestIndex, queryflagsPod);
				return ret;
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  PhysxPxVec3Pod* closestpointPod,  ref uint closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (uint* pclosestIndex = &closestIndex)
				{
					float ret = PxGeometryQueryPointDistanceNative(pointPod, (PhysxPxGeometryPod*)pgeomPod, posePod, closestpointPod, (uint*)pclosestIndex, queryflagsPod);
					return ret;
				}
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  PhysxPxVec3Pod* closestpointPod,  ref uint closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (uint* pclosestIndex = &closestIndex)
				{
					float ret = PxGeometryQueryPointDistanceNative(pointPod, geomPod, (PhysxPxTransformPod*)pposePod, closestpointPod, (uint*)pclosestIndex, queryflagsPod);
					return ret;
				}
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  PhysxPxVec3Pod* closestpointPod,  ref uint closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (uint* pclosestIndex = &closestIndex)
					{
						float ret = PxGeometryQueryPointDistanceNative(pointPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, closestpointPod, (uint*)pclosestIndex, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  ref PhysxPxVec3Pod closestpointPod,  ref uint closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxVec3Pod* pclosestpointPod = &closestpointPod)
			{
				fixed (uint* pclosestIndex = &closestIndex)
				{
					float ret = PxGeometryQueryPointDistanceNative(pointPod, geomPod, posePod, (PhysxPxVec3Pod*)pclosestpointPod, (uint*)pclosestIndex, queryflagsPod);
					return ret;
				}
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  ref PhysxPxVec3Pod closestpointPod,  ref uint closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxVec3Pod* pclosestpointPod = &closestpointPod)
				{
					fixed (uint* pclosestIndex = &closestIndex)
					{
						float ret = PxGeometryQueryPointDistanceNative(pointPod, (PhysxPxGeometryPod*)pgeomPod, posePod, (PhysxPxVec3Pod*)pclosestpointPod, (uint*)pclosestIndex, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  ref PhysxPxVec3Pod closestpointPod,  ref uint closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxVec3Pod* pclosestpointPod = &closestpointPod)
				{
					fixed (uint* pclosestIndex = &closestIndex)
					{
						float ret = PxGeometryQueryPointDistanceNative(pointPod, geomPod, (PhysxPxTransformPod*)pposePod, (PhysxPxVec3Pod*)pclosestpointPod, (uint*)pclosestIndex, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static float PxGeometryQueryPointDistance( PhysxPxVec3Pod* pointPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  ref PhysxPxVec3Pod closestpointPod,  ref uint closestIndex,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxVec3Pod* pclosestpointPod = &closestpointPod)
					{
						fixed (uint* pclosestIndex = &closestIndex)
						{
							float ret = PxGeometryQueryPointDistanceNative(pointPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, (PhysxPxVec3Pod*)pclosestpointPod, (uint*)pclosestIndex, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxGeometryQuery_computeGeomBounds")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxGeometryQueryComputeGeomBoundsNative(PhysxPxBounds3Pod* boundsPod, PhysxPxGeometryPod* geomPod, PhysxPxTransformPod* posePod, float offset, float inflation, uint queryflagsPod);

		public static void PxGeometryQueryComputeGeomBounds( PhysxPxBounds3Pod* boundsPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  float offset,  float inflation,  uint queryflagsPod)
		{
			PxGeometryQueryComputeGeomBoundsNative(boundsPod, geomPod, posePod, offset, inflation, queryflagsPod);
		}

		public static void PxGeometryQueryComputeGeomBounds( PhysxPxBounds3Pod* boundsPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  float offset,  float inflation,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				PxGeometryQueryComputeGeomBoundsNative(boundsPod, (PhysxPxGeometryPod*)pgeomPod, posePod, offset, inflation, queryflagsPod);
			}
		}

		public static void PxGeometryQueryComputeGeomBounds( PhysxPxBounds3Pod* boundsPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  float offset,  float inflation,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				PxGeometryQueryComputeGeomBoundsNative(boundsPod, geomPod, (PhysxPxTransformPod*)pposePod, offset, inflation, queryflagsPod);
			}
		}

		public static void PxGeometryQueryComputeGeomBounds( PhysxPxBounds3Pod* boundsPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  float offset,  float inflation,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					PxGeometryQueryComputeGeomBoundsNative(boundsPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, offset, inflation, queryflagsPod);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxGeometryQuery_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxGeometryQueryIsValidNative(PhysxPxGeometryPod* geomPod);

		public static bool PxGeometryQueryIsValid( PhysxPxGeometryPod* geomPod)
		{
			byte ret = PxGeometryQueryIsValidNative(geomPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightFieldSample_tessFlag")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxHeightFieldSampleTessFlagNative(PhysxPxHeightFieldSamplePod* selfPod);

		public static byte PxHeightFieldSampleTessFlag( PhysxPxHeightFieldSamplePod* selfPod)
		{
			byte ret = PxHeightFieldSampleTessFlagNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightFieldSample_setTessFlag_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxHeightFieldSampleSetTessFlagMutNative(PhysxPxHeightFieldSamplePod* selfPod);

		public static void PxHeightFieldSampleSetTessFlagMut( PhysxPxHeightFieldSamplePod* selfPod)
		{
			PxHeightFieldSampleSetTessFlagMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightFieldSample_clearTessFlag_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxHeightFieldSampleClearTessFlagMutNative(PhysxPxHeightFieldSamplePod* selfPod);

		public static void PxHeightFieldSampleClearTessFlagMut( PhysxPxHeightFieldSamplePod* selfPod)
		{
			PxHeightFieldSampleClearTessFlagMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxHeightFieldReleaseMutNative(PhysxPxHeightFieldPod* selfPod);

		public static void PxHeightFieldReleaseMut( PhysxPxHeightFieldPod* selfPod)
		{
			PxHeightFieldReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_saveCells")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxHeightFieldSaveCellsNative(PhysxPxHeightFieldPod* selfPod, void* destBuffer, uint destBufferSize);

		public static uint PxHeightFieldSaveCells( PhysxPxHeightFieldPod* selfPod,  void* destBuffer,  uint destBufferSize)
		{
			uint ret = PxHeightFieldSaveCellsNative(selfPod, destBuffer, destBufferSize);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_modifySamples_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxHeightFieldModifySamplesMutNative(PhysxPxHeightFieldPod* selfPod, int startCol, int startRow, PhysxPxHeightFieldDescPod* subfielddescPod, byte shrinkBounds);

		public static bool PxHeightFieldModifySamplesMut( PhysxPxHeightFieldPod* selfPod,  int startCol,  int startRow,  PhysxPxHeightFieldDescPod* subfielddescPod,  bool shrinkBounds)
		{
			byte ret = PxHeightFieldModifySamplesMutNative(selfPod, startCol, startRow, subfielddescPod, shrinkBounds ? (byte)1 : (byte)0);
			return ret != 0;
		}

		public static bool PxHeightFieldModifySamplesMut( PhysxPxHeightFieldPod* selfPod,  int startCol,  int startRow,  ref PhysxPxHeightFieldDescPod subfielddescPod,  bool shrinkBounds)
		{
			fixed (PhysxPxHeightFieldDescPod* psubfielddescPod = &subfielddescPod)
			{
				byte ret = PxHeightFieldModifySamplesMutNative(selfPod, startCol, startRow, (PhysxPxHeightFieldDescPod*)psubfielddescPod, shrinkBounds ? (byte)1 : (byte)0);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getNbRows")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxHeightFieldGetNbRowsNative(PhysxPxHeightFieldPod* selfPod);

		public static uint PxHeightFieldGetNbRows( PhysxPxHeightFieldPod* selfPod)
		{
			uint ret = PxHeightFieldGetNbRowsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getNbColumns")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxHeightFieldGetNbColumnsNative(PhysxPxHeightFieldPod* selfPod);

		public static uint PxHeightFieldGetNbColumns( PhysxPxHeightFieldPod* selfPod)
		{
			uint ret = PxHeightFieldGetNbColumnsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getFormat")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int PxHeightFieldGetFormatNative(PhysxPxHeightFieldPod* selfPod);

		public static int PxHeightFieldGetFormat( PhysxPxHeightFieldPod* selfPod)
		{
			int ret = PxHeightFieldGetFormatNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getSampleStride")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxHeightFieldGetSampleStrideNative(PhysxPxHeightFieldPod* selfPod);

		public static uint PxHeightFieldGetSampleStride( PhysxPxHeightFieldPod* selfPod)
		{
			uint ret = PxHeightFieldGetSampleStrideNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getConvexEdgeThreshold")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxHeightFieldGetConvexEdgeThresholdNative(PhysxPxHeightFieldPod* selfPod);

		public static float PxHeightFieldGetConvexEdgeThreshold( PhysxPxHeightFieldPod* selfPod)
		{
			float ret = PxHeightFieldGetConvexEdgeThresholdNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getFlags")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ushort PxHeightFieldGetFlagsNative(PhysxPxHeightFieldPod* selfPod);

		public static ushort PxHeightFieldGetFlags( PhysxPxHeightFieldPod* selfPod)
		{
			ushort ret = PxHeightFieldGetFlagsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getHeight")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxHeightFieldGetHeightNative(PhysxPxHeightFieldPod* selfPod, float x, float z);

		public static float PxHeightFieldGetHeight( PhysxPxHeightFieldPod* selfPod,  float x,  float z)
		{
			float ret = PxHeightFieldGetHeightNative(selfPod, x, z);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getTriangleMaterialIndex")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ushort PxHeightFieldGetTriangleMaterialIndexNative(PhysxPxHeightFieldPod* selfPod, uint triangleIndex);

		public static ushort PxHeightFieldGetTriangleMaterialIndex( PhysxPxHeightFieldPod* selfPod,  uint triangleIndex)
		{
			ushort ret = PxHeightFieldGetTriangleMaterialIndexNative(selfPod, triangleIndex);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getTriangleNormal")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxHeightFieldGetTriangleNormalNative(PhysxPxHeightFieldPod* selfPod, uint triangleIndex);

		public static PhysxPxVec3Pod PxHeightFieldGetTriangleNormal( PhysxPxHeightFieldPod* selfPod,  uint triangleIndex)
		{
			PhysxPxVec3Pod ret = PxHeightFieldGetTriangleNormalNative(selfPod, triangleIndex);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getSample")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxHeightFieldSamplePod* PxHeightFieldGetSampleNative(PhysxPxHeightFieldPod* selfPod, uint row, uint column);

		public static PhysxPxHeightFieldSamplePod* PxHeightFieldGetSample( PhysxPxHeightFieldPod* selfPod,  uint row,  uint column)
		{
			PhysxPxHeightFieldSamplePod* ret = PxHeightFieldGetSampleNative(selfPod, row, column);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getTimestamp")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxHeightFieldGetTimestampNative(PhysxPxHeightFieldPod* selfPod);

		public static uint PxHeightFieldGetTimestamp( PhysxPxHeightFieldPod* selfPod)
		{
			uint ret = PxHeightFieldGetTimestampNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightField_getConcreteTypeName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxHeightFieldGetConcreteTypeNameNative(PhysxPxHeightFieldPod* selfPod);

		public static byte* PxHeightFieldGetConcreteTypeName( PhysxPxHeightFieldPod* selfPod)
		{
			byte* ret = PxHeightFieldGetConcreteTypeNameNative(selfPod);
			return ret;
		}

		public static string PxHeightFieldGetConcreteTypeNameS( PhysxPxHeightFieldPod* selfPod)
		{
			string ret = Utils.DecodeStringUTF8(PxHeightFieldGetConcreteTypeNameNative(selfPod));
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightFieldDesc_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxHeightFieldDescPod PxHeightFieldDescNewNative();

		public static PhysxPxHeightFieldDescPod PxHeightFieldDescNew()
		{
			PhysxPxHeightFieldDescPod ret = PxHeightFieldDescNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightFieldDesc_setToDefault_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxHeightFieldDescSetToDefaultMutNative(PhysxPxHeightFieldDescPod* selfPod);

		public static void PxHeightFieldDescSetToDefaultMut( PhysxPxHeightFieldDescPod* selfPod)
		{
			PxHeightFieldDescSetToDefaultMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightFieldDesc_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxHeightFieldDescIsValidNative(PhysxPxHeightFieldDescPod* selfPod);

		public static bool PxHeightFieldDescIsValid( PhysxPxHeightFieldDescPod* selfPod)
		{
			byte ret = PxHeightFieldDescIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshQuery_getTriangle")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxMeshQueryGetTriangleNative(PhysxPxTriangleMeshGeometryPod* trigeomPod, PhysxPxTransformPod* transformPod, uint triangleIndex, PhysxPxTrianglePod* trianglePod, uint* vertexIndices, uint* adjacencyIndices);

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  uint* vertexIndices,  uint* adjacencyIndices)
		{
			PxMeshQueryGetTriangleNative(trigeomPod, transformPod, triangleIndex, trianglePod, vertexIndices, adjacencyIndices);
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  uint* vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				PxMeshQueryGetTriangleNative(trigeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, trianglePod, vertexIndices, adjacencyIndices);
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  uint* vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
			{
				PxMeshQueryGetTriangleNative(trigeomPod, transformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, vertexIndices, adjacencyIndices);
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  uint* vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
				{
					PxMeshQueryGetTriangleNative(trigeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, vertexIndices, adjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  ref uint vertexIndices,  uint* adjacencyIndices)
		{
			fixed (uint* pvertexIndices = &vertexIndices)
			{
				PxMeshQueryGetTriangleNative(trigeomPod, transformPod, triangleIndex, trianglePod, (uint*)pvertexIndices, adjacencyIndices);
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  ref uint vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (uint* pvertexIndices = &vertexIndices)
				{
					PxMeshQueryGetTriangleNative(trigeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, trianglePod, (uint*)pvertexIndices, adjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  ref uint vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
			{
				fixed (uint* pvertexIndices = &vertexIndices)
				{
					PxMeshQueryGetTriangleNative(trigeomPod, transformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, (uint*)pvertexIndices, adjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  ref uint vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
				{
					fixed (uint* pvertexIndices = &vertexIndices)
					{
						PxMeshQueryGetTriangleNative(trigeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, (uint*)pvertexIndices, adjacencyIndices);
					}
				}
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  uint* vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (uint* padjacencyIndices = &adjacencyIndices)
			{
				PxMeshQueryGetTriangleNative(trigeomPod, transformPod, triangleIndex, trianglePod, vertexIndices, (uint*)padjacencyIndices);
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  uint* vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (uint* padjacencyIndices = &adjacencyIndices)
				{
					PxMeshQueryGetTriangleNative(trigeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, trianglePod, vertexIndices, (uint*)padjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  uint* vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
			{
				fixed (uint* padjacencyIndices = &adjacencyIndices)
				{
					PxMeshQueryGetTriangleNative(trigeomPod, transformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, vertexIndices, (uint*)padjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  uint* vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
				{
					fixed (uint* padjacencyIndices = &adjacencyIndices)
					{
						PxMeshQueryGetTriangleNative(trigeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, vertexIndices, (uint*)padjacencyIndices);
					}
				}
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  ref uint vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (uint* pvertexIndices = &vertexIndices)
			{
				fixed (uint* padjacencyIndices = &adjacencyIndices)
				{
					PxMeshQueryGetTriangleNative(trigeomPod, transformPod, triangleIndex, trianglePod, (uint*)pvertexIndices, (uint*)padjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  ref uint vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (uint* pvertexIndices = &vertexIndices)
				{
					fixed (uint* padjacencyIndices = &adjacencyIndices)
					{
						PxMeshQueryGetTriangleNative(trigeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, trianglePod, (uint*)pvertexIndices, (uint*)padjacencyIndices);
					}
				}
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  ref uint vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
			{
				fixed (uint* pvertexIndices = &vertexIndices)
				{
					fixed (uint* padjacencyIndices = &adjacencyIndices)
					{
						PxMeshQueryGetTriangleNative(trigeomPod, transformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, (uint*)pvertexIndices, (uint*)padjacencyIndices);
					}
				}
			}
		}

		public static void PxMeshQueryGetTriangle( PhysxPxTriangleMeshGeometryPod* trigeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  ref uint vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
				{
					fixed (uint* pvertexIndices = &vertexIndices)
					{
						fixed (uint* padjacencyIndices = &adjacencyIndices)
						{
							PxMeshQueryGetTriangleNative(trigeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, (uint*)pvertexIndices, (uint*)padjacencyIndices);
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshQuery_getTriangle_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxMeshQueryGetTriangle1Native(PhysxPxHeightFieldGeometryPod* hfgeomPod, PhysxPxTransformPod* transformPod, uint triangleIndex, PhysxPxTrianglePod* trianglePod, uint* vertexIndices, uint* adjacencyIndices);

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  uint* vertexIndices,  uint* adjacencyIndices)
		{
			PxMeshQueryGetTriangle1Native(hfgeomPod, transformPod, triangleIndex, trianglePod, vertexIndices, adjacencyIndices);
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  uint* vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				PxMeshQueryGetTriangle1Native(hfgeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, trianglePod, vertexIndices, adjacencyIndices);
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  uint* vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
			{
				PxMeshQueryGetTriangle1Native(hfgeomPod, transformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, vertexIndices, adjacencyIndices);
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  uint* vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
				{
					PxMeshQueryGetTriangle1Native(hfgeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, vertexIndices, adjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  ref uint vertexIndices,  uint* adjacencyIndices)
		{
			fixed (uint* pvertexIndices = &vertexIndices)
			{
				PxMeshQueryGetTriangle1Native(hfgeomPod, transformPod, triangleIndex, trianglePod, (uint*)pvertexIndices, adjacencyIndices);
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  ref uint vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (uint* pvertexIndices = &vertexIndices)
				{
					PxMeshQueryGetTriangle1Native(hfgeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, trianglePod, (uint*)pvertexIndices, adjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  ref uint vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
			{
				fixed (uint* pvertexIndices = &vertexIndices)
				{
					PxMeshQueryGetTriangle1Native(hfgeomPod, transformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, (uint*)pvertexIndices, adjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  ref uint vertexIndices,  uint* adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
				{
					fixed (uint* pvertexIndices = &vertexIndices)
					{
						PxMeshQueryGetTriangle1Native(hfgeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, (uint*)pvertexIndices, adjacencyIndices);
					}
				}
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  uint* vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (uint* padjacencyIndices = &adjacencyIndices)
			{
				PxMeshQueryGetTriangle1Native(hfgeomPod, transformPod, triangleIndex, trianglePod, vertexIndices, (uint*)padjacencyIndices);
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  uint* vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (uint* padjacencyIndices = &adjacencyIndices)
				{
					PxMeshQueryGetTriangle1Native(hfgeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, trianglePod, vertexIndices, (uint*)padjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  uint* vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
			{
				fixed (uint* padjacencyIndices = &adjacencyIndices)
				{
					PxMeshQueryGetTriangle1Native(hfgeomPod, transformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, vertexIndices, (uint*)padjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  uint* vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
				{
					fixed (uint* padjacencyIndices = &adjacencyIndices)
					{
						PxMeshQueryGetTriangle1Native(hfgeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, vertexIndices, (uint*)padjacencyIndices);
					}
				}
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  ref uint vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (uint* pvertexIndices = &vertexIndices)
			{
				fixed (uint* padjacencyIndices = &adjacencyIndices)
				{
					PxMeshQueryGetTriangle1Native(hfgeomPod, transformPod, triangleIndex, trianglePod, (uint*)pvertexIndices, (uint*)padjacencyIndices);
				}
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  PhysxPxTrianglePod* trianglePod,  ref uint vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (uint* pvertexIndices = &vertexIndices)
				{
					fixed (uint* padjacencyIndices = &adjacencyIndices)
					{
						PxMeshQueryGetTriangle1Native(hfgeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, trianglePod, (uint*)pvertexIndices, (uint*)padjacencyIndices);
					}
				}
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  ref uint vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
			{
				fixed (uint* pvertexIndices = &vertexIndices)
				{
					fixed (uint* padjacencyIndices = &adjacencyIndices)
					{
						PxMeshQueryGetTriangle1Native(hfgeomPod, transformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, (uint*)pvertexIndices, (uint*)padjacencyIndices);
					}
				}
			}
		}

		public static void PxMeshQueryGetTriangle1( PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod transformPod,  uint triangleIndex,  ref PhysxPxTrianglePod trianglePod,  ref uint vertexIndices,  ref uint adjacencyIndices)
		{
			fixed (PhysxPxTransformPod* ptransformPod = &transformPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglePod = &trianglePod)
				{
					fixed (uint* pvertexIndices = &vertexIndices)
					{
						fixed (uint* padjacencyIndices = &adjacencyIndices)
						{
							PxMeshQueryGetTriangle1Native(hfgeomPod, (PhysxPxTransformPod*)ptransformPod, triangleIndex, (PhysxPxTrianglePod*)ptrianglePod, (uint*)pvertexIndices, (uint*)padjacencyIndices);
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshQuery_findOverlapTriangleMesh")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxMeshQueryFindOverlapTriangleMeshNative(PhysxPxGeometryPod* geomPod, PhysxPxTransformPod* geomposePod, PhysxPxTriangleMeshGeometryPod* meshgeomPod, PhysxPxTransformPod* meshposePod, uint* results, uint maxResults, uint startIndex, byte* overflowPod, uint queryflagsPod);

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  PhysxPxTransformPod* meshposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, meshgeomPod, meshposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
			return ret;
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  PhysxPxTransformPod* meshposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, meshgeomPod, meshposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
				return ret;
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  PhysxPxTransformPod* meshposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
			{
				uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, meshposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
				return ret;
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  PhysxPxTransformPod* meshposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
				{
					uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, meshposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  ref PhysxPxTransformPod meshposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
			{
				uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, meshgeomPod, (PhysxPxTransformPod*)pmeshposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
				return ret;
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  ref PhysxPxTransformPod meshposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
				{
					uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, meshgeomPod, (PhysxPxTransformPod*)pmeshposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  ref PhysxPxTransformPod meshposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
			{
				fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
				{
					uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, (PhysxPxTransformPod*)pmeshposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  ref PhysxPxTransformPod meshposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
				{
					fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
					{
						uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, (PhysxPxTransformPod*)pmeshposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  PhysxPxTransformPod* meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (uint* presults = &results)
			{
				uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, meshgeomPod, meshposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
				return ret;
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  PhysxPxTransformPod* meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (uint* presults = &results)
				{
					uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, meshgeomPod, meshposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  PhysxPxTransformPod* meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
			{
				fixed (uint* presults = &results)
				{
					uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, meshposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  PhysxPxTransformPod* meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
				{
					fixed (uint* presults = &results)
					{
						uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, meshposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  ref PhysxPxTransformPod meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
			{
				fixed (uint* presults = &results)
				{
					uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, meshgeomPod, (PhysxPxTransformPod*)pmeshposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  ref PhysxPxTransformPod meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
				{
					fixed (uint* presults = &results)
					{
						uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, meshgeomPod, (PhysxPxTransformPod*)pmeshposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  ref PhysxPxTransformPod meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
			{
				fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
				{
					fixed (uint* presults = &results)
					{
						uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, (PhysxPxTransformPod*)pmeshposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  ref PhysxPxTransformPod meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
				{
					fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
					{
						fixed (uint* presults = &results)
						{
							uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, (PhysxPxTransformPod*)pmeshposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  PhysxPxTransformPod* meshposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (byte* poverflowPod = &overflowPod)
			{
				uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, meshgeomPod, meshposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
				return ret;
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  PhysxPxTransformPod* meshposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (byte* poverflowPod = &overflowPod)
				{
					uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, meshgeomPod, meshposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  PhysxPxTransformPod* meshposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
			{
				fixed (byte* poverflowPod = &overflowPod)
				{
					uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, meshposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  PhysxPxTransformPod* meshposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, meshposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  ref PhysxPxTransformPod meshposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
			{
				fixed (byte* poverflowPod = &overflowPod)
				{
					uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, meshgeomPod, (PhysxPxTransformPod*)pmeshposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  ref PhysxPxTransformPod meshposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, meshgeomPod, (PhysxPxTransformPod*)pmeshposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  ref PhysxPxTransformPod meshposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
			{
				fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, (PhysxPxTransformPod*)pmeshposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  ref PhysxPxTransformPod meshposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
				{
					fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
					{
						fixed (byte* poverflowPod = &overflowPod)
						{
							uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, (PhysxPxTransformPod*)pmeshposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  PhysxPxTransformPod* meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (uint* presults = &results)
			{
				fixed (byte* poverflowPod = &overflowPod)
				{
					uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, meshgeomPod, meshposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  PhysxPxTransformPod* meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (uint* presults = &results)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, meshgeomPod, meshposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  PhysxPxTransformPod* meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
			{
				fixed (uint* presults = &results)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, meshposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  PhysxPxTransformPod* meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
				{
					fixed (uint* presults = &results)
					{
						fixed (byte* poverflowPod = &overflowPod)
						{
							uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, meshposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  ref PhysxPxTransformPod meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
			{
				fixed (uint* presults = &results)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, meshgeomPod, (PhysxPxTransformPod*)pmeshposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxTriangleMeshGeometryPod* meshgeomPod,  ref PhysxPxTransformPod meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
				{
					fixed (uint* presults = &results)
					{
						fixed (byte* poverflowPod = &overflowPod)
						{
							uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, meshgeomPod, (PhysxPxTransformPod*)pmeshposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  ref PhysxPxTransformPod meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
			{
				fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
				{
					fixed (uint* presults = &results)
					{
						fixed (byte* poverflowPod = &overflowPod)
						{
							uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, geomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, (PhysxPxTransformPod*)pmeshposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapTriangleMesh( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxTriangleMeshGeometryPod meshgeomPod,  ref PhysxPxTransformPod meshposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTriangleMeshGeometryPod* pmeshgeomPod = &meshgeomPod)
				{
					fixed (PhysxPxTransformPod* pmeshposePod = &meshposePod)
					{
						fixed (uint* presults = &results)
						{
							fixed (byte* poverflowPod = &overflowPod)
							{
								uint ret = PxMeshQueryFindOverlapTriangleMeshNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxTriangleMeshGeometryPod*)pmeshgeomPod, (PhysxPxTransformPod*)pmeshposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
								return ret;
							}
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshQuery_findOverlapHeightField")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxMeshQueryFindOverlapHeightFieldNative(PhysxPxGeometryPod* geomPod, PhysxPxTransformPod* geomposePod, PhysxPxHeightFieldGeometryPod* hfgeomPod, PhysxPxTransformPod* hfposePod, uint* results, uint maxResults, uint startIndex, byte* overflowPod, uint queryflagsPod);

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* hfposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, hfgeomPod, hfposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
			return ret;
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* hfposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, hfgeomPod, hfposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
				return ret;
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  PhysxPxTransformPod* hfposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
			{
				uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, hfposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
				return ret;
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  PhysxPxTransformPod* hfposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
				{
					uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, hfposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod hfposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
			{
				uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, hfgeomPod, (PhysxPxTransformPod*)phfposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
				return ret;
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod hfposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
				{
					uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, hfgeomPod, (PhysxPxTransformPod*)phfposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  ref PhysxPxTransformPod hfposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
			{
				fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
				{
					uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, (PhysxPxTransformPod*)phfposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  ref PhysxPxTransformPod hfposePod,  uint* results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
				{
					fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
					{
						uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, (PhysxPxTransformPod*)phfposePod, results, maxResults, startIndex, overflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (uint* presults = &results)
			{
				uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, hfgeomPod, hfposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
				return ret;
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (uint* presults = &results)
				{
					uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, hfgeomPod, hfposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  PhysxPxTransformPod* hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
			{
				fixed (uint* presults = &results)
				{
					uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, hfposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  PhysxPxTransformPod* hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
				{
					fixed (uint* presults = &results)
					{
						uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, hfposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
			{
				fixed (uint* presults = &results)
				{
					uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, hfgeomPod, (PhysxPxTransformPod*)phfposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
				{
					fixed (uint* presults = &results)
					{
						uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, hfgeomPod, (PhysxPxTransformPod*)phfposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  ref PhysxPxTransformPod hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
			{
				fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
				{
					fixed (uint* presults = &results)
					{
						uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, (PhysxPxTransformPod*)phfposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  ref PhysxPxTransformPod hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  byte* overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
				{
					fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
					{
						fixed (uint* presults = &results)
						{
							uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, (PhysxPxTransformPod*)phfposePod, (uint*)presults, maxResults, startIndex, overflowPod, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* hfposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (byte* poverflowPod = &overflowPod)
			{
				uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, hfgeomPod, hfposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
				return ret;
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* hfposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (byte* poverflowPod = &overflowPod)
				{
					uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, hfgeomPod, hfposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  PhysxPxTransformPod* hfposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
			{
				fixed (byte* poverflowPod = &overflowPod)
				{
					uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, hfposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  PhysxPxTransformPod* hfposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, hfposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod hfposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
			{
				fixed (byte* poverflowPod = &overflowPod)
				{
					uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, hfgeomPod, (PhysxPxTransformPod*)phfposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod hfposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, hfgeomPod, (PhysxPxTransformPod*)phfposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  ref PhysxPxTransformPod hfposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
			{
				fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, (PhysxPxTransformPod*)phfposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  ref PhysxPxTransformPod hfposePod,  uint* results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
				{
					fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
					{
						fixed (byte* poverflowPod = &overflowPod)
						{
							uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, (PhysxPxTransformPod*)phfposePod, results, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (uint* presults = &results)
			{
				fixed (byte* poverflowPod = &overflowPod)
				{
					uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, hfgeomPod, hfposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
					return ret;
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  PhysxPxTransformPod* hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (uint* presults = &results)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, hfgeomPod, hfposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  PhysxPxTransformPod* hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
			{
				fixed (uint* presults = &results)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, hfposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  PhysxPxTransformPod* hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
				{
					fixed (uint* presults = &results)
					{
						fixed (byte* poverflowPod = &overflowPod)
						{
							uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, hfposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
			{
				fixed (uint* presults = &results)
				{
					fixed (byte* poverflowPod = &overflowPod)
					{
						uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, hfgeomPod, (PhysxPxTransformPod*)phfposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
						return ret;
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  PhysxPxHeightFieldGeometryPod* hfgeomPod,  ref PhysxPxTransformPod hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
				{
					fixed (uint* presults = &results)
					{
						fixed (byte* poverflowPod = &overflowPod)
						{
							uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, hfgeomPod, (PhysxPxTransformPod*)phfposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  ref PhysxPxTransformPod hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
			{
				fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
				{
					fixed (uint* presults = &results)
					{
						fixed (byte* poverflowPod = &overflowPod)
						{
							uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, geomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, (PhysxPxTransformPod*)phfposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
							return ret;
						}
					}
				}
			}
		}

		public static uint PxMeshQueryFindOverlapHeightField( PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod geomposePod,  ref PhysxPxHeightFieldGeometryPod hfgeomPod,  ref PhysxPxTransformPod hfposePod,  ref uint results,  uint maxResults,  uint startIndex,  ref byte overflowPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pgeomposePod = &geomposePod)
			{
				fixed (PhysxPxHeightFieldGeometryPod* phfgeomPod = &hfgeomPod)
				{
					fixed (PhysxPxTransformPod* phfposePod = &hfposePod)
					{
						fixed (uint* presults = &results)
						{
							fixed (byte* poverflowPod = &overflowPod)
							{
								uint ret = PxMeshQueryFindOverlapHeightFieldNative(geomPod, (PhysxPxTransformPod*)pgeomposePod, (PhysxPxHeightFieldGeometryPod*)phfgeomPod, (PhysxPxTransformPod*)phfposePod, (uint*)presults, maxResults, startIndex, (byte*)poverflowPod, queryflagsPod);
								return ret;
							}
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshQuery_sweep")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxMeshQuerySweepNative(PhysxPxVec3Pod* unitdirPod, float distance, PhysxPxGeometryPod* geomPod, PhysxPxTransformPod* posePod, uint triangleCount, PhysxPxTrianglePod* trianglesPod, PhysxPxGeomSweepHitPod* sweephitPod, ushort hitflagsPod, uint* cachedIndex, float inflation, byte doubleSided, uint queryflagsPod);

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, posePod, triangleCount, trianglesPod, sweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
			return ret != 0;
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, posePod, triangleCount, trianglesPod, sweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, (PhysxPxTransformPod*)pposePod, triangleCount, trianglesPod, sweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, triangleCount, trianglesPod, sweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
			{
				byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, posePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, sweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
				{
					byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, posePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, sweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
				{
					byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, (PhysxPxTransformPod*)pposePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, sweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
					{
						byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, sweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
			{
				byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, posePod, triangleCount, trianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
				{
					byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, posePod, triangleCount, trianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
				{
					byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, (PhysxPxTransformPod*)pposePod, triangleCount, trianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, triangleCount, trianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
			{
				fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
				{
					byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, posePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, posePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, (PhysxPxTransformPod*)pposePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  uint* cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
					{
						fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
						{
							byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, cachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (uint* pcachedIndex = &cachedIndex)
			{
				byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, posePod, triangleCount, trianglesPod, sweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (uint* pcachedIndex = &cachedIndex)
				{
					byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, posePod, triangleCount, trianglesPod, sweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (uint* pcachedIndex = &cachedIndex)
				{
					byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, (PhysxPxTransformPod*)pposePod, triangleCount, trianglesPod, sweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (uint* pcachedIndex = &cachedIndex)
					{
						byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, triangleCount, trianglesPod, sweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
			{
				fixed (uint* pcachedIndex = &cachedIndex)
				{
					byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, posePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, sweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
				{
					fixed (uint* pcachedIndex = &cachedIndex)
					{
						byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, posePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, sweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
				{
					fixed (uint* pcachedIndex = &cachedIndex)
					{
						byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, (PhysxPxTransformPod*)pposePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, sweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  PhysxPxGeomSweepHitPod* sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
					{
						fixed (uint* pcachedIndex = &cachedIndex)
						{
							byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, sweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
			{
				fixed (uint* pcachedIndex = &cachedIndex)
				{
					byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, posePod, triangleCount, trianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
				{
					fixed (uint* pcachedIndex = &cachedIndex)
					{
						byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, posePod, triangleCount, trianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
				{
					fixed (uint* pcachedIndex = &cachedIndex)
					{
						byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, (PhysxPxTransformPod*)pposePod, triangleCount, trianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  PhysxPxTrianglePod* trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						fixed (uint* pcachedIndex = &cachedIndex)
						{
							byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, triangleCount, trianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
			{
				fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
				{
					fixed (uint* pcachedIndex = &cachedIndex)
					{
						byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, posePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						fixed (uint* pcachedIndex = &cachedIndex)
						{
							byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, posePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
				{
					fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
					{
						fixed (uint* pcachedIndex = &cachedIndex)
						{
							byte ret = PxMeshQuerySweepNative(unitdirPod, distance, geomPod, (PhysxPxTransformPod*)pposePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		public static bool PxMeshQuerySweep( PhysxPxVec3Pod* unitdirPod,  float distance,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  uint triangleCount,  ref PhysxPxTrianglePod trianglesPod,  ref PhysxPxGeomSweepHitPod sweephitPod,  ushort hitflagsPod,  ref uint cachedIndex,  float inflation,  bool doubleSided,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxTrianglePod* ptrianglesPod = &trianglesPod)
					{
						fixed (PhysxPxGeomSweepHitPod* psweephitPod = &sweephitPod)
						{
							fixed (uint* pcachedIndex = &cachedIndex)
							{
								byte ret = PxMeshQuerySweepNative(unitdirPod, distance, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, triangleCount, (PhysxPxTrianglePod*)ptrianglesPod, (PhysxPxGeomSweepHitPod*)psweephitPod, hitflagsPod, (uint*)pcachedIndex, inflation, doubleSided ? (byte)1 : (byte)0, queryflagsPod);
								return ret != 0;
							}
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSimpleTriangleMesh_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSimpleTriangleMeshPod PxSimpleTriangleMeshNewNative();

		public static PhysxPxSimpleTriangleMeshPod PxSimpleTriangleMeshNew()
		{
			PhysxPxSimpleTriangleMeshPod ret = PxSimpleTriangleMeshNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSimpleTriangleMesh_setToDefault_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSimpleTriangleMeshSetToDefaultMutNative(PhysxPxSimpleTriangleMeshPod* selfPod);

		public static void PxSimpleTriangleMeshSetToDefaultMut( PhysxPxSimpleTriangleMeshPod* selfPod)
		{
			PxSimpleTriangleMeshSetToDefaultMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSimpleTriangleMesh_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxSimpleTriangleMeshIsValidNative(PhysxPxSimpleTriangleMeshPod* selfPod);

		public static bool PxSimpleTriangleMeshIsValid( PhysxPxSimpleTriangleMeshPod* selfPod)
		{
			byte ret = PxSimpleTriangleMeshIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangle_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTrianglePod* PxTriangleNewAllocNative();

		public static PhysxPxTrianglePod* PxTriangleNewAlloc()
		{
			PhysxPxTrianglePod* ret = PxTriangleNewAllocNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangle_new_alloc_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTrianglePod* PxTriangleNewAlloc1Native(PhysxPxVec3Pod* p0Pod, PhysxPxVec3Pod* p1Pod, PhysxPxVec3Pod* p2Pod);

		public static PhysxPxTrianglePod* PxTriangleNewAlloc1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  PhysxPxVec3Pod* p2Pod)
		{
			PhysxPxTrianglePod* ret = PxTriangleNewAlloc1Native(p0Pod, p1Pod, p2Pod);
			return ret;
		}

		public static PhysxPxTrianglePod* PxTriangleNewAlloc1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  PhysxPxVec3Pod* p2Pod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				PhysxPxTrianglePod* ret = PxTriangleNewAlloc1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, p2Pod);
				return ret;
			}
		}

		public static PhysxPxTrianglePod* PxTriangleNewAlloc1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref PhysxPxVec3Pod p2Pod)
		{
			fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
			{
				PhysxPxTrianglePod* ret = PxTriangleNewAlloc1Native(p0Pod, p1Pod, (PhysxPxVec3Pod*)pp2Pod);
				return ret;
			}
		}

		public static PhysxPxTrianglePod* PxTriangleNewAlloc1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref PhysxPxVec3Pod p2Pod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
				{
					PhysxPxTrianglePod* ret = PxTriangleNewAlloc1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (PhysxPxVec3Pod*)pp2Pod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangle_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTriangleDeleteNative(PhysxPxTrianglePod* selfPod);

		public static void PxTriangleDelete( PhysxPxTrianglePod* selfPod)
		{
			PxTriangleDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangle_normal")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTriangleNormalNative(PhysxPxTrianglePod* selfPod, PhysxPxVec3Pod* NormalPod);

		public static void PxTriangleNormal( PhysxPxTrianglePod* selfPod,  PhysxPxVec3Pod* NormalPod)
		{
			PxTriangleNormalNative(selfPod, NormalPod);
		}

		public static void PxTriangleNormal( PhysxPxTrianglePod* selfPod,  ref PhysxPxVec3Pod NormalPod)
		{
			fixed (PhysxPxVec3Pod* pNormalPod = &NormalPod)
			{
				PxTriangleNormalNative(selfPod, (PhysxPxVec3Pod*)pNormalPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangle_denormalizedNormal")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTriangleDenormalizedNormalNative(PhysxPxTrianglePod* selfPod, PhysxPxVec3Pod* NormalPod);

		public static void PxTriangleDenormalizedNormal( PhysxPxTrianglePod* selfPod,  PhysxPxVec3Pod* NormalPod)
		{
			PxTriangleDenormalizedNormalNative(selfPod, NormalPod);
		}

		public static void PxTriangleDenormalizedNormal( PhysxPxTrianglePod* selfPod,  ref PhysxPxVec3Pod NormalPod)
		{
			fixed (PhysxPxVec3Pod* pNormalPod = &NormalPod)
			{
				PxTriangleDenormalizedNormalNative(selfPod, (PhysxPxVec3Pod*)pNormalPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangle_area")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxTriangleAreaNative(PhysxPxTrianglePod* selfPod);

		public static float PxTriangleArea( PhysxPxTrianglePod* selfPod)
		{
			float ret = PxTriangleAreaNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangle_pointFromUV")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxTrianglePointFromUVNative(PhysxPxTrianglePod* selfPod, float u, float v);

		public static PhysxPxVec3Pod PxTrianglePointFromUV( PhysxPxTrianglePod* selfPod,  float u,  float v)
		{
			PhysxPxVec3Pod ret = PxTrianglePointFromUVNative(selfPod, u, v);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTrianglePadded_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTrianglePaddedPod* PxTrianglePaddedNewAllocNative();

		public static PhysxPxTrianglePaddedPod* PxTrianglePaddedNewAlloc()
		{
			PhysxPxTrianglePaddedPod* ret = PxTrianglePaddedNewAllocNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTrianglePadded_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTrianglePaddedDeleteNative(PhysxPxTrianglePaddedPod* selfPod);

		public static void PxTrianglePaddedDelete( PhysxPxTrianglePaddedPod* selfPod)
		{
			PxTrianglePaddedDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getNbVertices")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxTriangleMeshGetNbVerticesNative(PhysxPxTriangleMeshPod* selfPod);

		public static uint PxTriangleMeshGetNbVertices( PhysxPxTriangleMeshPod* selfPod)
		{
			uint ret = PxTriangleMeshGetNbVerticesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getVertices")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod* PxTriangleMeshGetVerticesNative(PhysxPxTriangleMeshPod* selfPod);

		public static PhysxPxVec3Pod* PxTriangleMeshGetVertices( PhysxPxTriangleMeshPod* selfPod)
		{
			PhysxPxVec3Pod* ret = PxTriangleMeshGetVerticesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getVerticesForModification_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod* PxTriangleMeshGetVerticesForModificationMutNative(PhysxPxTriangleMeshPod* selfPod);

		public static PhysxPxVec3Pod* PxTriangleMeshGetVerticesForModificationMut( PhysxPxTriangleMeshPod* selfPod)
		{
			PhysxPxVec3Pod* ret = PxTriangleMeshGetVerticesForModificationMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_refitBVH_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxTriangleMeshRefitBVHMutNative(PhysxPxTriangleMeshPod* selfPod);

		public static PhysxPxBounds3Pod PxTriangleMeshRefitBVHMut( PhysxPxTriangleMeshPod* selfPod)
		{
			PhysxPxBounds3Pod ret = PxTriangleMeshRefitBVHMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getNbTriangles")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxTriangleMeshGetNbTrianglesNative(PhysxPxTriangleMeshPod* selfPod);

		public static uint PxTriangleMeshGetNbTriangles( PhysxPxTriangleMeshPod* selfPod)
		{
			uint ret = PxTriangleMeshGetNbTrianglesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getTriangles")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxTriangleMeshGetTrianglesNative(PhysxPxTriangleMeshPod* selfPod);

		public static void* PxTriangleMeshGetTriangles( PhysxPxTriangleMeshPod* selfPod)
		{
			void* ret = PxTriangleMeshGetTrianglesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getTriangleMeshFlags")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxTriangleMeshGetTriangleMeshFlagsNative(PhysxPxTriangleMeshPod* selfPod);

		public static byte PxTriangleMeshGetTriangleMeshFlags( PhysxPxTriangleMeshPod* selfPod)
		{
			byte ret = PxTriangleMeshGetTriangleMeshFlagsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getTrianglesRemap")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint* PxTriangleMeshGetTrianglesRemapNative(PhysxPxTriangleMeshPod* selfPod);

		public static uint* PxTriangleMeshGetTrianglesRemap( PhysxPxTriangleMeshPod* selfPod)
		{
			uint* ret = PxTriangleMeshGetTrianglesRemapNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTriangleMeshReleaseMutNative(PhysxPxTriangleMeshPod* selfPod);

		public static void PxTriangleMeshReleaseMut( PhysxPxTriangleMeshPod* selfPod)
		{
			PxTriangleMeshReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getTriangleMaterialIndex")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ushort PxTriangleMeshGetTriangleMaterialIndexNative(PhysxPxTriangleMeshPod* selfPod, uint triangleIndex);

		public static ushort PxTriangleMeshGetTriangleMaterialIndex( PhysxPxTriangleMeshPod* selfPod,  uint triangleIndex)
		{
			ushort ret = PxTriangleMeshGetTriangleMaterialIndexNative(selfPod, triangleIndex);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getLocalBounds")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxTriangleMeshGetLocalBoundsNative(PhysxPxTriangleMeshPod* selfPod);

		public static PhysxPxBounds3Pod PxTriangleMeshGetLocalBounds( PhysxPxTriangleMeshPod* selfPod)
		{
			PhysxPxBounds3Pod ret = PxTriangleMeshGetLocalBoundsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getSDF")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float* PxTriangleMeshGetSDFNative(PhysxPxTriangleMeshPod* selfPod);

		public static float* PxTriangleMeshGetSDF( PhysxPxTriangleMeshPod* selfPod)
		{
			float* ret = PxTriangleMeshGetSDFNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getSDFDimensions")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTriangleMeshGetSDFDimensionsNative(PhysxPxTriangleMeshPod* selfPod, uint* numxPod, uint* numyPod, uint* numzPod);

		public static void PxTriangleMeshGetSDFDimensions( PhysxPxTriangleMeshPod* selfPod,  uint* numxPod,  uint* numyPod,  uint* numzPod)
		{
			PxTriangleMeshGetSDFDimensionsNative(selfPod, numxPod, numyPod, numzPod);
		}

		public static void PxTriangleMeshGetSDFDimensions( PhysxPxTriangleMeshPod* selfPod,  ref uint numxPod,  uint* numyPod,  uint* numzPod)
		{
			fixed (uint* pnumxPod = &numxPod)
			{
				PxTriangleMeshGetSDFDimensionsNative(selfPod, (uint*)pnumxPod, numyPod, numzPod);
			}
		}

		public static void PxTriangleMeshGetSDFDimensions( PhysxPxTriangleMeshPod* selfPod,  uint* numxPod,  ref uint numyPod,  uint* numzPod)
		{
			fixed (uint* pnumyPod = &numyPod)
			{
				PxTriangleMeshGetSDFDimensionsNative(selfPod, numxPod, (uint*)pnumyPod, numzPod);
			}
		}

		public static void PxTriangleMeshGetSDFDimensions( PhysxPxTriangleMeshPod* selfPod,  ref uint numxPod,  ref uint numyPod,  uint* numzPod)
		{
			fixed (uint* pnumxPod = &numxPod)
			{
				fixed (uint* pnumyPod = &numyPod)
				{
					PxTriangleMeshGetSDFDimensionsNative(selfPod, (uint*)pnumxPod, (uint*)pnumyPod, numzPod);
				}
			}
		}

		public static void PxTriangleMeshGetSDFDimensions( PhysxPxTriangleMeshPod* selfPod,  uint* numxPod,  uint* numyPod,  ref uint numzPod)
		{
			fixed (uint* pnumzPod = &numzPod)
			{
				PxTriangleMeshGetSDFDimensionsNative(selfPod, numxPod, numyPod, (uint*)pnumzPod);
			}
		}

		public static void PxTriangleMeshGetSDFDimensions( PhysxPxTriangleMeshPod* selfPod,  ref uint numxPod,  uint* numyPod,  ref uint numzPod)
		{
			fixed (uint* pnumxPod = &numxPod)
			{
				fixed (uint* pnumzPod = &numzPod)
				{
					PxTriangleMeshGetSDFDimensionsNative(selfPod, (uint*)pnumxPod, numyPod, (uint*)pnumzPod);
				}
			}
		}

		public static void PxTriangleMeshGetSDFDimensions( PhysxPxTriangleMeshPod* selfPod,  uint* numxPod,  ref uint numyPod,  ref uint numzPod)
		{
			fixed (uint* pnumyPod = &numyPod)
			{
				fixed (uint* pnumzPod = &numzPod)
				{
					PxTriangleMeshGetSDFDimensionsNative(selfPod, numxPod, (uint*)pnumyPod, (uint*)pnumzPod);
				}
			}
		}

		public static void PxTriangleMeshGetSDFDimensions( PhysxPxTriangleMeshPod* selfPod,  ref uint numxPod,  ref uint numyPod,  ref uint numzPod)
		{
			fixed (uint* pnumxPod = &numxPod)
			{
				fixed (uint* pnumyPod = &numyPod)
				{
					fixed (uint* pnumzPod = &numzPod)
					{
						PxTriangleMeshGetSDFDimensionsNative(selfPod, (uint*)pnumxPod, (uint*)pnumyPod, (uint*)pnumzPod);
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_setPreferSDFProjection_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTriangleMeshSetPreferSDFProjectionMutNative(PhysxPxTriangleMeshPod* selfPod, byte preferProjection);

		public static void PxTriangleMeshSetPreferSDFProjectionMut( PhysxPxTriangleMeshPod* selfPod,  bool preferProjection)
		{
			PxTriangleMeshSetPreferSDFProjectionMutNative(selfPod, preferProjection ? (byte)1 : (byte)0);
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getPreferSDFProjection")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxTriangleMeshGetPreferSDFProjectionNative(PhysxPxTriangleMeshPod* selfPod);

		public static bool PxTriangleMeshGetPreferSDFProjection( PhysxPxTriangleMeshPod* selfPod)
		{
			byte ret = PxTriangleMeshGetPreferSDFProjectionNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMesh_getMassInformation")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTriangleMeshGetMassInformationNative(PhysxPxTriangleMeshPod* selfPod, float* massPod, PhysxPxMat33Pod* localinertiaPod, PhysxPxVec3Pod* localcenterofmassPod);

		public static void PxTriangleMeshGetMassInformation( PhysxPxTriangleMeshPod* selfPod,  float* massPod,  PhysxPxMat33Pod* localinertiaPod,  PhysxPxVec3Pod* localcenterofmassPod)
		{
			PxTriangleMeshGetMassInformationNative(selfPod, massPod, localinertiaPod, localcenterofmassPod);
		}

		public static void PxTriangleMeshGetMassInformation( PhysxPxTriangleMeshPod* selfPod,  ref float massPod,  PhysxPxMat33Pod* localinertiaPod,  PhysxPxVec3Pod* localcenterofmassPod)
		{
			fixed (float* pmassPod = &massPod)
			{
				PxTriangleMeshGetMassInformationNative(selfPod, (float*)pmassPod, localinertiaPod, localcenterofmassPod);
			}
		}

		public static void PxTriangleMeshGetMassInformation( PhysxPxTriangleMeshPod* selfPod,  float* massPod,  ref PhysxPxMat33Pod localinertiaPod,  PhysxPxVec3Pod* localcenterofmassPod)
		{
			fixed (PhysxPxMat33Pod* plocalinertiaPod = &localinertiaPod)
			{
				PxTriangleMeshGetMassInformationNative(selfPod, massPod, (PhysxPxMat33Pod*)plocalinertiaPod, localcenterofmassPod);
			}
		}

		public static void PxTriangleMeshGetMassInformation( PhysxPxTriangleMeshPod* selfPod,  ref float massPod,  ref PhysxPxMat33Pod localinertiaPod,  PhysxPxVec3Pod* localcenterofmassPod)
		{
			fixed (float* pmassPod = &massPod)
			{
				fixed (PhysxPxMat33Pod* plocalinertiaPod = &localinertiaPod)
				{
					PxTriangleMeshGetMassInformationNative(selfPod, (float*)pmassPod, (PhysxPxMat33Pod*)plocalinertiaPod, localcenterofmassPod);
				}
			}
		}

		public static void PxTriangleMeshGetMassInformation( PhysxPxTriangleMeshPod* selfPod,  float* massPod,  PhysxPxMat33Pod* localinertiaPod,  ref PhysxPxVec3Pod localcenterofmassPod)
		{
			fixed (PhysxPxVec3Pod* plocalcenterofmassPod = &localcenterofmassPod)
			{
				PxTriangleMeshGetMassInformationNative(selfPod, massPod, localinertiaPod, (PhysxPxVec3Pod*)plocalcenterofmassPod);
			}
		}

		public static void PxTriangleMeshGetMassInformation( PhysxPxTriangleMeshPod* selfPod,  ref float massPod,  PhysxPxMat33Pod* localinertiaPod,  ref PhysxPxVec3Pod localcenterofmassPod)
		{
			fixed (float* pmassPod = &massPod)
			{
				fixed (PhysxPxVec3Pod* plocalcenterofmassPod = &localcenterofmassPod)
				{
					PxTriangleMeshGetMassInformationNative(selfPod, (float*)pmassPod, localinertiaPod, (PhysxPxVec3Pod*)plocalcenterofmassPod);
				}
			}
		}

		public static void PxTriangleMeshGetMassInformation( PhysxPxTriangleMeshPod* selfPod,  float* massPod,  ref PhysxPxMat33Pod localinertiaPod,  ref PhysxPxVec3Pod localcenterofmassPod)
		{
			fixed (PhysxPxMat33Pod* plocalinertiaPod = &localinertiaPod)
			{
				fixed (PhysxPxVec3Pod* plocalcenterofmassPod = &localcenterofmassPod)
				{
					PxTriangleMeshGetMassInformationNative(selfPod, massPod, (PhysxPxMat33Pod*)plocalinertiaPod, (PhysxPxVec3Pod*)plocalcenterofmassPod);
				}
			}
		}

		public static void PxTriangleMeshGetMassInformation( PhysxPxTriangleMeshPod* selfPod,  ref float massPod,  ref PhysxPxMat33Pod localinertiaPod,  ref PhysxPxVec3Pod localcenterofmassPod)
		{
			fixed (float* pmassPod = &massPod)
			{
				fixed (PhysxPxMat33Pod* plocalinertiaPod = &localinertiaPod)
				{
					fixed (PhysxPxVec3Pod* plocalcenterofmassPod = &localcenterofmassPod)
					{
						PxTriangleMeshGetMassInformationNative(selfPod, (float*)pmassPod, (PhysxPxMat33Pod*)plocalinertiaPod, (PhysxPxVec3Pod*)plocalcenterofmassPod);
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedron_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTetrahedronPod* PxTetrahedronNewAllocNative();

		public static PhysxPxTetrahedronPod* PxTetrahedronNewAlloc()
		{
			PhysxPxTetrahedronPod* ret = PxTetrahedronNewAllocNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedron_new_alloc_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTetrahedronPod* PxTetrahedronNewAlloc1Native(PhysxPxVec3Pod* p0Pod, PhysxPxVec3Pod* p1Pod, PhysxPxVec3Pod* p2Pod, PhysxPxVec3Pod* p3Pod);

		public static PhysxPxTetrahedronPod* PxTetrahedronNewAlloc1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  PhysxPxVec3Pod* p2Pod,  PhysxPxVec3Pod* p3Pod)
		{
			PhysxPxTetrahedronPod* ret = PxTetrahedronNewAlloc1Native(p0Pod, p1Pod, p2Pod, p3Pod);
			return ret;
		}

		public static PhysxPxTetrahedronPod* PxTetrahedronNewAlloc1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  PhysxPxVec3Pod* p2Pod,  PhysxPxVec3Pod* p3Pod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				PhysxPxTetrahedronPod* ret = PxTetrahedronNewAlloc1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, p2Pod, p3Pod);
				return ret;
			}
		}

		public static PhysxPxTetrahedronPod* PxTetrahedronNewAlloc1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref PhysxPxVec3Pod p2Pod,  PhysxPxVec3Pod* p3Pod)
		{
			fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
			{
				PhysxPxTetrahedronPod* ret = PxTetrahedronNewAlloc1Native(p0Pod, p1Pod, (PhysxPxVec3Pod*)pp2Pod, p3Pod);
				return ret;
			}
		}

		public static PhysxPxTetrahedronPod* PxTetrahedronNewAlloc1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref PhysxPxVec3Pod p2Pod,  PhysxPxVec3Pod* p3Pod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
				{
					PhysxPxTetrahedronPod* ret = PxTetrahedronNewAlloc1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (PhysxPxVec3Pod*)pp2Pod, p3Pod);
					return ret;
				}
			}
		}

		public static PhysxPxTetrahedronPod* PxTetrahedronNewAlloc1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  PhysxPxVec3Pod* p2Pod,  ref PhysxPxVec3Pod p3Pod)
		{
			fixed (PhysxPxVec3Pod* pp3Pod = &p3Pod)
			{
				PhysxPxTetrahedronPod* ret = PxTetrahedronNewAlloc1Native(p0Pod, p1Pod, p2Pod, (PhysxPxVec3Pod*)pp3Pod);
				return ret;
			}
		}

		public static PhysxPxTetrahedronPod* PxTetrahedronNewAlloc1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  PhysxPxVec3Pod* p2Pod,  ref PhysxPxVec3Pod p3Pod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pp3Pod = &p3Pod)
				{
					PhysxPxTetrahedronPod* ret = PxTetrahedronNewAlloc1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, p2Pod, (PhysxPxVec3Pod*)pp3Pod);
					return ret;
				}
			}
		}

		public static PhysxPxTetrahedronPod* PxTetrahedronNewAlloc1( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref PhysxPxVec3Pod p2Pod,  ref PhysxPxVec3Pod p3Pod)
		{
			fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
			{
				fixed (PhysxPxVec3Pod* pp3Pod = &p3Pod)
				{
					PhysxPxTetrahedronPod* ret = PxTetrahedronNewAlloc1Native(p0Pod, p1Pod, (PhysxPxVec3Pod*)pp2Pod, (PhysxPxVec3Pod*)pp3Pod);
					return ret;
				}
			}
		}

		public static PhysxPxTetrahedronPod* PxTetrahedronNewAlloc1( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref PhysxPxVec3Pod p2Pod,  ref PhysxPxVec3Pod p3Pod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
				{
					fixed (PhysxPxVec3Pod* pp3Pod = &p3Pod)
					{
						PhysxPxTetrahedronPod* ret = PxTetrahedronNewAlloc1Native(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (PhysxPxVec3Pod*)pp2Pod, (PhysxPxVec3Pod*)pp3Pod);
						return ret;
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedron_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTetrahedronDeleteNative(PhysxPxTetrahedronPod* selfPod);

		public static void PxTetrahedronDelete( PhysxPxTetrahedronPod* selfPod)
		{
			PxTetrahedronDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSoftBodyAuxData_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSoftBodyAuxDataReleaseMutNative(PhysxPxSoftBodyAuxDataPod* selfPod);

		public static void PxSoftBodyAuxDataReleaseMut( PhysxPxSoftBodyAuxDataPod* selfPod)
		{
			PxSoftBodyAuxDataReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedronMesh_getNbVertices")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxTetrahedronMeshGetNbVerticesNative(PhysxPxTetrahedronMeshPod* selfPod);

		public static uint PxTetrahedronMeshGetNbVertices( PhysxPxTetrahedronMeshPod* selfPod)
		{
			uint ret = PxTetrahedronMeshGetNbVerticesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedronMesh_getVertices")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod* PxTetrahedronMeshGetVerticesNative(PhysxPxTetrahedronMeshPod* selfPod);

		public static PhysxPxVec3Pod* PxTetrahedronMeshGetVertices( PhysxPxTetrahedronMeshPod* selfPod)
		{
			PhysxPxVec3Pod* ret = PxTetrahedronMeshGetVerticesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedronMesh_getNbTetrahedrons")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxTetrahedronMeshGetNbTetrahedronsNative(PhysxPxTetrahedronMeshPod* selfPod);

		public static uint PxTetrahedronMeshGetNbTetrahedrons( PhysxPxTetrahedronMeshPod* selfPod)
		{
			uint ret = PxTetrahedronMeshGetNbTetrahedronsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedronMesh_getTetrahedrons")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxTetrahedronMeshGetTetrahedronsNative(PhysxPxTetrahedronMeshPod* selfPod);

		public static void* PxTetrahedronMeshGetTetrahedrons( PhysxPxTetrahedronMeshPod* selfPod)
		{
			void* ret = PxTetrahedronMeshGetTetrahedronsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedronMesh_getTetrahedronMeshFlags")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxTetrahedronMeshGetTetrahedronMeshFlagsNative(PhysxPxTetrahedronMeshPod* selfPod);

		public static byte PxTetrahedronMeshGetTetrahedronMeshFlags( PhysxPxTetrahedronMeshPod* selfPod)
		{
			byte ret = PxTetrahedronMeshGetTetrahedronMeshFlagsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedronMesh_getTetrahedraRemap")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint* PxTetrahedronMeshGetTetrahedraRemapNative(PhysxPxTetrahedronMeshPod* selfPod);

		public static uint* PxTetrahedronMeshGetTetrahedraRemap( PhysxPxTetrahedronMeshPod* selfPod)
		{
			uint* ret = PxTetrahedronMeshGetTetrahedraRemapNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedronMesh_getLocalBounds")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxTetrahedronMeshGetLocalBoundsNative(PhysxPxTetrahedronMeshPod* selfPod);

		public static PhysxPxBounds3Pod PxTetrahedronMeshGetLocalBounds( PhysxPxTetrahedronMeshPod* selfPod)
		{
			PhysxPxBounds3Pod ret = PxTetrahedronMeshGetLocalBoundsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedronMesh_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTetrahedronMeshReleaseMutNative(PhysxPxTetrahedronMeshPod* selfPod);

		public static void PxTetrahedronMeshReleaseMut( PhysxPxTetrahedronMeshPod* selfPod)
		{
			PxTetrahedronMeshReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSoftBodyMesh_getCollisionMesh")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTetrahedronMeshPod* PxSoftBodyMeshGetCollisionMeshNative(PhysxPxSoftBodyMeshPod* selfPod);

		public static PhysxPxTetrahedronMeshPod* PxSoftBodyMeshGetCollisionMesh( PhysxPxSoftBodyMeshPod* selfPod)
		{
			PhysxPxTetrahedronMeshPod* ret = PxSoftBodyMeshGetCollisionMeshNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSoftBodyMesh_getCollisionMesh_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTetrahedronMeshPod* PxSoftBodyMeshGetCollisionMeshMutNative(PhysxPxSoftBodyMeshPod* selfPod);

		public static PhysxPxTetrahedronMeshPod* PxSoftBodyMeshGetCollisionMeshMut( PhysxPxSoftBodyMeshPod* selfPod)
		{
			PhysxPxTetrahedronMeshPod* ret = PxSoftBodyMeshGetCollisionMeshMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSoftBodyMesh_getSimulationMesh")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTetrahedronMeshPod* PxSoftBodyMeshGetSimulationMeshNative(PhysxPxSoftBodyMeshPod* selfPod);

		public static PhysxPxTetrahedronMeshPod* PxSoftBodyMeshGetSimulationMesh( PhysxPxSoftBodyMeshPod* selfPod)
		{
			PhysxPxTetrahedronMeshPod* ret = PxSoftBodyMeshGetSimulationMeshNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSoftBodyMesh_getSimulationMesh_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTetrahedronMeshPod* PxSoftBodyMeshGetSimulationMeshMutNative(PhysxPxSoftBodyMeshPod* selfPod);

		public static PhysxPxTetrahedronMeshPod* PxSoftBodyMeshGetSimulationMeshMut( PhysxPxSoftBodyMeshPod* selfPod)
		{
			PhysxPxTetrahedronMeshPod* ret = PxSoftBodyMeshGetSimulationMeshMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSoftBodyMesh_getSoftBodyAuxData")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSoftBodyAuxDataPod* PxSoftBodyMeshGetSoftBodyAuxDataNative(PhysxPxSoftBodyMeshPod* selfPod);

		public static PhysxPxSoftBodyAuxDataPod* PxSoftBodyMeshGetSoftBodyAuxData( PhysxPxSoftBodyMeshPod* selfPod)
		{
			PhysxPxSoftBodyAuxDataPod* ret = PxSoftBodyMeshGetSoftBodyAuxDataNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSoftBodyMesh_getSoftBodyAuxData_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSoftBodyAuxDataPod* PxSoftBodyMeshGetSoftBodyAuxDataMutNative(PhysxPxSoftBodyMeshPod* selfPod);

		public static PhysxPxSoftBodyAuxDataPod* PxSoftBodyMeshGetSoftBodyAuxDataMut( PhysxPxSoftBodyMeshPod* selfPod)
		{
			PhysxPxSoftBodyAuxDataPod* ret = PxSoftBodyMeshGetSoftBodyAuxDataMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSoftBodyMesh_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSoftBodyMeshReleaseMutNative(PhysxPxSoftBodyMeshPod* selfPod);

		public static void PxSoftBodyMeshReleaseMut( PhysxPxSoftBodyMeshPod* selfPod)
		{
			PxSoftBodyMeshReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxCollisionMeshMappingData_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCollisionMeshMappingDataReleaseMutNative(PhysxPxCollisionMeshMappingDataPod* selfPod);

		public static void PxCollisionMeshMappingDataReleaseMut( PhysxPxCollisionMeshMappingDataPod* selfPod)
		{
			PxCollisionMeshMappingDataReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxCollisionTetrahedronMeshData_getMesh")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTetrahedronMeshDataPod* PxCollisionTetrahedronMeshDataGetMeshNative(PhysxPxCollisionTetrahedronMeshDataPod* selfPod);

		public static PhysxPxTetrahedronMeshDataPod* PxCollisionTetrahedronMeshDataGetMesh( PhysxPxCollisionTetrahedronMeshDataPod* selfPod)
		{
			PhysxPxTetrahedronMeshDataPod* ret = PxCollisionTetrahedronMeshDataGetMeshNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCollisionTetrahedronMeshData_getMesh_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTetrahedronMeshDataPod* PxCollisionTetrahedronMeshDataGetMeshMutNative(PhysxPxCollisionTetrahedronMeshDataPod* selfPod);

		public static PhysxPxTetrahedronMeshDataPod* PxCollisionTetrahedronMeshDataGetMeshMut( PhysxPxCollisionTetrahedronMeshDataPod* selfPod)
		{
			PhysxPxTetrahedronMeshDataPod* ret = PxCollisionTetrahedronMeshDataGetMeshMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCollisionTetrahedronMeshData_getData")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSoftBodyCollisionDataPod* PxCollisionTetrahedronMeshDataGetDataNative(PhysxPxCollisionTetrahedronMeshDataPod* selfPod);

		public static PhysxPxSoftBodyCollisionDataPod* PxCollisionTetrahedronMeshDataGetData( PhysxPxCollisionTetrahedronMeshDataPod* selfPod)
		{
			PhysxPxSoftBodyCollisionDataPod* ret = PxCollisionTetrahedronMeshDataGetDataNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCollisionTetrahedronMeshData_getData_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSoftBodyCollisionDataPod* PxCollisionTetrahedronMeshDataGetDataMutNative(PhysxPxCollisionTetrahedronMeshDataPod* selfPod);

		public static PhysxPxSoftBodyCollisionDataPod* PxCollisionTetrahedronMeshDataGetDataMut( PhysxPxCollisionTetrahedronMeshDataPod* selfPod)
		{
			PhysxPxSoftBodyCollisionDataPod* ret = PxCollisionTetrahedronMeshDataGetDataMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCollisionTetrahedronMeshData_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCollisionTetrahedronMeshDataReleaseMutNative(PhysxPxCollisionTetrahedronMeshDataPod* selfPod);

		public static void PxCollisionTetrahedronMeshDataReleaseMut( PhysxPxCollisionTetrahedronMeshDataPod* selfPod)
		{
			PxCollisionTetrahedronMeshDataReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSimulationTetrahedronMeshData_getMesh_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTetrahedronMeshDataPod* PxSimulationTetrahedronMeshDataGetMeshMutNative(PhysxPxSimulationTetrahedronMeshDataPod* selfPod);

		public static PhysxPxTetrahedronMeshDataPod* PxSimulationTetrahedronMeshDataGetMeshMut( PhysxPxSimulationTetrahedronMeshDataPod* selfPod)
		{
			PhysxPxTetrahedronMeshDataPod* ret = PxSimulationTetrahedronMeshDataGetMeshMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSimulationTetrahedronMeshData_getData_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSoftBodySimulationDataPod* PxSimulationTetrahedronMeshDataGetDataMutNative(PhysxPxSimulationTetrahedronMeshDataPod* selfPod);

		public static PhysxPxSoftBodySimulationDataPod* PxSimulationTetrahedronMeshDataGetDataMut( PhysxPxSimulationTetrahedronMeshDataPod* selfPod)
		{
			PhysxPxSoftBodySimulationDataPod* ret = PxSimulationTetrahedronMeshDataGetDataMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSimulationTetrahedronMeshData_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSimulationTetrahedronMeshDataReleaseMutNative(PhysxPxSimulationTetrahedronMeshDataPod* selfPod);

		public static void PxSimulationTetrahedronMeshDataReleaseMut( PhysxPxSimulationTetrahedronMeshDataPod* selfPod)
		{
			PxSimulationTetrahedronMeshDataReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxActorReleaseMutNative(PhysxPxActorPod* selfPod);

		public static void PxActorReleaseMut( PhysxPxActorPod* selfPod)
		{
			PxActorReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_getType")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int PxActorGetTypeNative(PhysxPxActorPod* selfPod);

		public static int PxActorGetType( PhysxPxActorPod* selfPod)
		{
			int ret = PxActorGetTypeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_getScene")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxScenePod* PxActorGetSceneNative(PhysxPxActorPod* selfPod);

		public static PhysxPxScenePod* PxActorGetScene( PhysxPxActorPod* selfPod)
		{
			PhysxPxScenePod* ret = PxActorGetSceneNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_setName_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxActorSetNameMutNative(PhysxPxActorPod* selfPod, byte* name);

		public static void PxActorSetNameMut( PhysxPxActorPod* selfPod,  byte* name)
		{
			PxActorSetNameMutNative(selfPod, name);
		}

		public static void PxActorSetNameMut( PhysxPxActorPod* selfPod,  ref byte name)
		{
			fixed (byte* pname = &name)
			{
				PxActorSetNameMutNative(selfPod, (byte*)pname);
			}
		}

		public static void PxActorSetNameMut( PhysxPxActorPod* selfPod,  string name)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxActorSetNameMutNative(selfPod, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_getName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxActorGetNameNative(PhysxPxActorPod* selfPod);

		public static byte* PxActorGetName( PhysxPxActorPod* selfPod)
		{
			byte* ret = PxActorGetNameNative(selfPod);
			return ret;
		}

		public static string PxActorGetNameS( PhysxPxActorPod* selfPod)
		{
			string ret = Utils.DecodeStringUTF8(PxActorGetNameNative(selfPod));
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_getWorldBounds")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxActorGetWorldBoundsNative(PhysxPxActorPod* selfPod, float inflation);

		public static PhysxPxBounds3Pod PxActorGetWorldBounds( PhysxPxActorPod* selfPod,  float inflation)
		{
			PhysxPxBounds3Pod ret = PxActorGetWorldBoundsNative(selfPod, inflation);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_setActorFlag_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxActorSetActorFlagMutNative(PhysxPxActorPod* selfPod, int flagPod, byte value);

		public static void PxActorSetActorFlagMut( PhysxPxActorPod* selfPod,  int flagPod,  bool value)
		{
			PxActorSetActorFlagMutNative(selfPod, flagPod, value ? (byte)1 : (byte)0);
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_setActorFlags_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxActorSetActorFlagsMutNative(PhysxPxActorPod* selfPod, byte inflagsPod);

		public static void PxActorSetActorFlagsMut( PhysxPxActorPod* selfPod,  byte inflagsPod)
		{
			PxActorSetActorFlagsMutNative(selfPod, inflagsPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_getActorFlags")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxActorGetActorFlagsNative(PhysxPxActorPod* selfPod);

		public static byte PxActorGetActorFlags( PhysxPxActorPod* selfPod)
		{
			byte ret = PxActorGetActorFlagsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_setDominanceGroup_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxActorSetDominanceGroupMutNative(PhysxPxActorPod* selfPod, byte dominanceGroup);

		public static void PxActorSetDominanceGroupMut( PhysxPxActorPod* selfPod,  byte dominanceGroup)
		{
			PxActorSetDominanceGroupMutNative(selfPod, dominanceGroup);
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_getDominanceGroup")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxActorGetDominanceGroupNative(PhysxPxActorPod* selfPod);

		public static byte PxActorGetDominanceGroup( PhysxPxActorPod* selfPod)
		{
			byte ret = PxActorGetDominanceGroupNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_setOwnerClient_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxActorSetOwnerClientMutNative(PhysxPxActorPod* selfPod, byte inClient);

		public static void PxActorSetOwnerClientMut( PhysxPxActorPod* selfPod,  byte inClient)
		{
			PxActorSetOwnerClientMutNative(selfPod, inClient);
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_getOwnerClient")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxActorGetOwnerClientNative(PhysxPxActorPod* selfPod);

		public static byte PxActorGetOwnerClient( PhysxPxActorPod* selfPod)
		{
			byte ret = PxActorGetOwnerClientNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxActor_getAggregate")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxAggregatePod* PxActorGetAggregateNative(PhysxPxActorPod* selfPod);

		public static PhysxPxAggregatePod* PxActorGetAggregate( PhysxPxActorPod* selfPod)
		{
			PhysxPxAggregatePod* ret = PxActorGetAggregateNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetAggregateFilterHint")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxGetAggregateFilterHintNative(int typePod, byte enableSelfCollision);

		public static uint PhysPxGetAggregateFilterHint( int typePod,  bool enableSelfCollision)
		{
			uint ret = PhysPxGetAggregateFilterHintNative(typePod, enableSelfCollision ? (byte)1 : (byte)0);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetAggregateSelfCollisionBit")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxGetAggregateSelfCollisionBitNative(uint hint);

		public static uint PhysPxGetAggregateSelfCollisionBit( uint hint)
		{
			uint ret = PhysPxGetAggregateSelfCollisionBitNative(hint);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxGetAggregateType")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int PhysPxGetAggregateTypeNative(uint hint);

		public static int PhysPxGetAggregateType( uint hint)
		{
			int ret = PhysPxGetAggregateTypeNative(hint);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxAggregateReleaseMutNative(PhysxPxAggregatePod* selfPod);

		public static void PxAggregateReleaseMut( PhysxPxAggregatePod* selfPod)
		{
			PxAggregateReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_addActor_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxAggregateAddActorMutNative(PhysxPxAggregatePod* selfPod, PhysxPxActorPod* actorPod, PhysxPxBVHPod* bvhPod);

		public static bool PxAggregateAddActorMut( PhysxPxAggregatePod* selfPod,  PhysxPxActorPod* actorPod,  PhysxPxBVHPod* bvhPod)
		{
			byte ret = PxAggregateAddActorMutNative(selfPod, actorPod, bvhPod);
			return ret != 0;
		}

		public static bool PxAggregateAddActorMut( PhysxPxAggregatePod* selfPod,  ref PhysxPxActorPod actorPod,  PhysxPxBVHPod* bvhPod)
		{
			fixed (PhysxPxActorPod* pactorPod = &actorPod)
			{
				byte ret = PxAggregateAddActorMutNative(selfPod, (PhysxPxActorPod*)pactorPod, bvhPod);
				return ret != 0;
			}
		}

		public static bool PxAggregateAddActorMut( PhysxPxAggregatePod* selfPod,  PhysxPxActorPod* actorPod,  ref PhysxPxBVHPod bvhPod)
		{
			fixed (PhysxPxBVHPod* pbvhPod = &bvhPod)
			{
				byte ret = PxAggregateAddActorMutNative(selfPod, actorPod, (PhysxPxBVHPod*)pbvhPod);
				return ret != 0;
			}
		}

		public static bool PxAggregateAddActorMut( PhysxPxAggregatePod* selfPod,  ref PhysxPxActorPod actorPod,  ref PhysxPxBVHPod bvhPod)
		{
			fixed (PhysxPxActorPod* pactorPod = &actorPod)
			{
				fixed (PhysxPxBVHPod* pbvhPod = &bvhPod)
				{
					byte ret = PxAggregateAddActorMutNative(selfPod, (PhysxPxActorPod*)pactorPod, (PhysxPxBVHPod*)pbvhPod);
					return ret != 0;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_removeActor_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxAggregateRemoveActorMutNative(PhysxPxAggregatePod* selfPod, PhysxPxActorPod* actorPod);

		public static bool PxAggregateRemoveActorMut( PhysxPxAggregatePod* selfPod,  PhysxPxActorPod* actorPod)
		{
			byte ret = PxAggregateRemoveActorMutNative(selfPod, actorPod);
			return ret != 0;
		}

		public static bool PxAggregateRemoveActorMut( PhysxPxAggregatePod* selfPod,  ref PhysxPxActorPod actorPod)
		{
			fixed (PhysxPxActorPod* pactorPod = &actorPod)
			{
				byte ret = PxAggregateRemoveActorMutNative(selfPod, (PhysxPxActorPod*)pactorPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_addArticulation_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxAggregateAddArticulationMutNative(PhysxPxAggregatePod* selfPod, PhysxPxArticulationReducedCoordinatePod* articulationPod);

		public static bool PxAggregateAddArticulationMut( PhysxPxAggregatePod* selfPod,  PhysxPxArticulationReducedCoordinatePod* articulationPod)
		{
			byte ret = PxAggregateAddArticulationMutNative(selfPod, articulationPod);
			return ret != 0;
		}

		public static bool PxAggregateAddArticulationMut( PhysxPxAggregatePod* selfPod,  ref PhysxPxArticulationReducedCoordinatePod articulationPod)
		{
			fixed (PhysxPxArticulationReducedCoordinatePod* particulationPod = &articulationPod)
			{
				byte ret = PxAggregateAddArticulationMutNative(selfPod, (PhysxPxArticulationReducedCoordinatePod*)particulationPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_removeArticulation_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxAggregateRemoveArticulationMutNative(PhysxPxAggregatePod* selfPod, PhysxPxArticulationReducedCoordinatePod* articulationPod);

		public static bool PxAggregateRemoveArticulationMut( PhysxPxAggregatePod* selfPod,  PhysxPxArticulationReducedCoordinatePod* articulationPod)
		{
			byte ret = PxAggregateRemoveArticulationMutNative(selfPod, articulationPod);
			return ret != 0;
		}

		public static bool PxAggregateRemoveArticulationMut( PhysxPxAggregatePod* selfPod,  ref PhysxPxArticulationReducedCoordinatePod articulationPod)
		{
			fixed (PhysxPxArticulationReducedCoordinatePod* particulationPod = &articulationPod)
			{
				byte ret = PxAggregateRemoveArticulationMutNative(selfPod, (PhysxPxArticulationReducedCoordinatePod*)particulationPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_getNbActors")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxAggregateGetNbActorsNative(PhysxPxAggregatePod* selfPod);

		public static uint PxAggregateGetNbActors( PhysxPxAggregatePod* selfPod)
		{
			uint ret = PxAggregateGetNbActorsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_getMaxNbShapes")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxAggregateGetMaxNbShapesNative(PhysxPxAggregatePod* selfPod);

		public static uint PxAggregateGetMaxNbShapes( PhysxPxAggregatePod* selfPod)
		{
			uint ret = PxAggregateGetMaxNbShapesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_getActors")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxAggregateGetActorsNative(PhysxPxAggregatePod* selfPod, PhysxPxActorPod** userbufferPod, uint bufferSize, uint startIndex);

		public static uint PxAggregateGetActors( PhysxPxAggregatePod* selfPod,  PhysxPxActorPod** userbufferPod,  uint bufferSize,  uint startIndex)
		{
			uint ret = PxAggregateGetActorsNative(selfPod, userbufferPod, bufferSize, startIndex);
			return ret;
		}

		public static uint PxAggregateGetActors( PhysxPxAggregatePod* selfPod,  ref PhysxPxActorPod* userbufferPod,  uint bufferSize,  uint startIndex)
		{
			fixed (PhysxPxActorPod** puserbufferPod = &userbufferPod)
			{
				uint ret = PxAggregateGetActorsNative(selfPod, (PhysxPxActorPod**)puserbufferPod, bufferSize, startIndex);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_getScene_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxScenePod* PxAggregateGetSceneMutNative(PhysxPxAggregatePod* selfPod);

		public static PhysxPxScenePod* PxAggregateGetSceneMut( PhysxPxAggregatePod* selfPod)
		{
			PhysxPxScenePod* ret = PxAggregateGetSceneMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_getSelfCollision")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxAggregateGetSelfCollisionNative(PhysxPxAggregatePod* selfPod);

		public static bool PxAggregateGetSelfCollision( PhysxPxAggregatePod* selfPod)
		{
			byte ret = PxAggregateGetSelfCollisionNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxAggregate_getConcreteTypeName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxAggregateGetConcreteTypeNameNative(PhysxPxAggregatePod* selfPod);

		public static byte* PxAggregateGetConcreteTypeName( PhysxPxAggregatePod* selfPod)
		{
			byte* ret = PxAggregateGetConcreteTypeNameNative(selfPod);
			return ret;
		}

		public static string PxAggregateGetConcreteTypeNameS( PhysxPxAggregatePod* selfPod)
		{
			string ret = Utils.DecodeStringUTF8(PxAggregateGetConcreteTypeNameNative(selfPod));
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintInvMassScale_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxConstraintInvMassScalePod PxConstraintInvMassScaleNewNative();

		public static PhysxPxConstraintInvMassScalePod PxConstraintInvMassScaleNew()
		{
			PhysxPxConstraintInvMassScalePod ret = PxConstraintInvMassScaleNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintInvMassScale_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxConstraintInvMassScalePod PxConstraintInvMassScaleNew1Native(float lin0, float ang0, float lin1, float ang1);

		public static PhysxPxConstraintInvMassScalePod PxConstraintInvMassScaleNew1( float lin0,  float ang0,  float lin1,  float ang1)
		{
			PhysxPxConstraintInvMassScalePod ret = PxConstraintInvMassScaleNew1Native(lin0, ang0, lin1, ang1);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintVisualizer_visualizeJointFrames_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintVisualizerVisualizeJointFramesMutNative(PhysxPxConstraintVisualizerPod* selfPod, PhysxPxTransformPod* parentPod, PhysxPxTransformPod* childPod);

		public static void PxConstraintVisualizerVisualizeJointFramesMut( PhysxPxConstraintVisualizerPod* selfPod,  PhysxPxTransformPod* parentPod,  PhysxPxTransformPod* childPod)
		{
			PxConstraintVisualizerVisualizeJointFramesMutNative(selfPod, parentPod, childPod);
		}

		public static void PxConstraintVisualizerVisualizeJointFramesMut( PhysxPxConstraintVisualizerPod* selfPod,  ref PhysxPxTransformPod parentPod,  PhysxPxTransformPod* childPod)
		{
			fixed (PhysxPxTransformPod* pparentPod = &parentPod)
			{
				PxConstraintVisualizerVisualizeJointFramesMutNative(selfPod, (PhysxPxTransformPod*)pparentPod, childPod);
			}
		}

		public static void PxConstraintVisualizerVisualizeJointFramesMut( PhysxPxConstraintVisualizerPod* selfPod,  PhysxPxTransformPod* parentPod,  ref PhysxPxTransformPod childPod)
		{
			fixed (PhysxPxTransformPod* pchildPod = &childPod)
			{
				PxConstraintVisualizerVisualizeJointFramesMutNative(selfPod, parentPod, (PhysxPxTransformPod*)pchildPod);
			}
		}

		public static void PxConstraintVisualizerVisualizeJointFramesMut( PhysxPxConstraintVisualizerPod* selfPod,  ref PhysxPxTransformPod parentPod,  ref PhysxPxTransformPod childPod)
		{
			fixed (PhysxPxTransformPod* pparentPod = &parentPod)
			{
				fixed (PhysxPxTransformPod* pchildPod = &childPod)
				{
					PxConstraintVisualizerVisualizeJointFramesMutNative(selfPod, (PhysxPxTransformPod*)pparentPod, (PhysxPxTransformPod*)pchildPod);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintVisualizer_visualizeLinearLimit_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintVisualizerVisualizeLinearLimitMutNative(PhysxPxConstraintVisualizerPod* selfPod, PhysxPxTransformPod* t0Pod, PhysxPxTransformPod* t1Pod, float value, byte active);

		public static void PxConstraintVisualizerVisualizeLinearLimitMut( PhysxPxConstraintVisualizerPod* selfPod,  PhysxPxTransformPod* t0Pod,  PhysxPxTransformPod* t1Pod,  float value,  bool active)
		{
			PxConstraintVisualizerVisualizeLinearLimitMutNative(selfPod, t0Pod, t1Pod, value, active ? (byte)1 : (byte)0);
		}

		public static void PxConstraintVisualizerVisualizeLinearLimitMut( PhysxPxConstraintVisualizerPod* selfPod,  ref PhysxPxTransformPod t0Pod,  PhysxPxTransformPod* t1Pod,  float value,  bool active)
		{
			fixed (PhysxPxTransformPod* pt0Pod = &t0Pod)
			{
				PxConstraintVisualizerVisualizeLinearLimitMutNative(selfPod, (PhysxPxTransformPod*)pt0Pod, t1Pod, value, active ? (byte)1 : (byte)0);
			}
		}

		public static void PxConstraintVisualizerVisualizeLinearLimitMut( PhysxPxConstraintVisualizerPod* selfPod,  PhysxPxTransformPod* t0Pod,  ref PhysxPxTransformPod t1Pod,  float value,  bool active)
		{
			fixed (PhysxPxTransformPod* pt1Pod = &t1Pod)
			{
				PxConstraintVisualizerVisualizeLinearLimitMutNative(selfPod, t0Pod, (PhysxPxTransformPod*)pt1Pod, value, active ? (byte)1 : (byte)0);
			}
		}

		public static void PxConstraintVisualizerVisualizeLinearLimitMut( PhysxPxConstraintVisualizerPod* selfPod,  ref PhysxPxTransformPod t0Pod,  ref PhysxPxTransformPod t1Pod,  float value,  bool active)
		{
			fixed (PhysxPxTransformPod* pt0Pod = &t0Pod)
			{
				fixed (PhysxPxTransformPod* pt1Pod = &t1Pod)
				{
					PxConstraintVisualizerVisualizeLinearLimitMutNative(selfPod, (PhysxPxTransformPod*)pt0Pod, (PhysxPxTransformPod*)pt1Pod, value, active ? (byte)1 : (byte)0);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintVisualizer_visualizeAngularLimit_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintVisualizerVisualizeAngularLimitMutNative(PhysxPxConstraintVisualizerPod* selfPod, PhysxPxTransformPod* t0Pod, float lower, float upper, byte active);

		public static void PxConstraintVisualizerVisualizeAngularLimitMut( PhysxPxConstraintVisualizerPod* selfPod,  PhysxPxTransformPod* t0Pod,  float lower,  float upper,  bool active)
		{
			PxConstraintVisualizerVisualizeAngularLimitMutNative(selfPod, t0Pod, lower, upper, active ? (byte)1 : (byte)0);
		}

		public static void PxConstraintVisualizerVisualizeAngularLimitMut( PhysxPxConstraintVisualizerPod* selfPod,  ref PhysxPxTransformPod t0Pod,  float lower,  float upper,  bool active)
		{
			fixed (PhysxPxTransformPod* pt0Pod = &t0Pod)
			{
				PxConstraintVisualizerVisualizeAngularLimitMutNative(selfPod, (PhysxPxTransformPod*)pt0Pod, lower, upper, active ? (byte)1 : (byte)0);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintVisualizer_visualizeLimitCone_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintVisualizerVisualizeLimitConeMutNative(PhysxPxConstraintVisualizerPod* selfPod, PhysxPxTransformPod* tPod, float tanQSwingY, float tanQSwingZ, byte active);

		public static void PxConstraintVisualizerVisualizeLimitConeMut( PhysxPxConstraintVisualizerPod* selfPod,  PhysxPxTransformPod* tPod,  float tanQSwingY,  float tanQSwingZ,  bool active)
		{
			PxConstraintVisualizerVisualizeLimitConeMutNative(selfPod, tPod, tanQSwingY, tanQSwingZ, active ? (byte)1 : (byte)0);
		}

		public static void PxConstraintVisualizerVisualizeLimitConeMut( PhysxPxConstraintVisualizerPod* selfPod,  ref PhysxPxTransformPod tPod,  float tanQSwingY,  float tanQSwingZ,  bool active)
		{
			fixed (PhysxPxTransformPod* ptPod = &tPod)
			{
				PxConstraintVisualizerVisualizeLimitConeMutNative(selfPod, (PhysxPxTransformPod*)ptPod, tanQSwingY, tanQSwingZ, active ? (byte)1 : (byte)0);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintVisualizer_visualizeDoubleCone_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintVisualizerVisualizeDoubleConeMutNative(PhysxPxConstraintVisualizerPod* selfPod, PhysxPxTransformPod* tPod, float angle, byte active);

		public static void PxConstraintVisualizerVisualizeDoubleConeMut( PhysxPxConstraintVisualizerPod* selfPod,  PhysxPxTransformPod* tPod,  float angle,  bool active)
		{
			PxConstraintVisualizerVisualizeDoubleConeMutNative(selfPod, tPod, angle, active ? (byte)1 : (byte)0);
		}

		public static void PxConstraintVisualizerVisualizeDoubleConeMut( PhysxPxConstraintVisualizerPod* selfPod,  ref PhysxPxTransformPod tPod,  float angle,  bool active)
		{
			fixed (PhysxPxTransformPod* ptPod = &tPod)
			{
				PxConstraintVisualizerVisualizeDoubleConeMutNative(selfPod, (PhysxPxTransformPod*)ptPod, angle, active ? (byte)1 : (byte)0);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintVisualizer_visualizeLine_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintVisualizerVisualizeLineMutNative(PhysxPxConstraintVisualizerPod* selfPod, PhysxPxVec3Pod* p0Pod, PhysxPxVec3Pod* p1Pod, uint color);

		public static void PxConstraintVisualizerVisualizeLineMut( PhysxPxConstraintVisualizerPod* selfPod,  PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  uint color)
		{
			PxConstraintVisualizerVisualizeLineMutNative(selfPod, p0Pod, p1Pod, color);
		}

		public static void PxConstraintVisualizerVisualizeLineMut( PhysxPxConstraintVisualizerPod* selfPod,  ref PhysxPxVec3Pod p0Pod,  PhysxPxVec3Pod* p1Pod,  uint color)
		{
			fixed (PhysxPxVec3Pod* pp0Pod = &p0Pod)
			{
				PxConstraintVisualizerVisualizeLineMutNative(selfPod, (PhysxPxVec3Pod*)pp0Pod, p1Pod, color);
			}
		}

		public static void PxConstraintVisualizerVisualizeLineMut( PhysxPxConstraintVisualizerPod* selfPod,  PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  uint color)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				PxConstraintVisualizerVisualizeLineMutNative(selfPod, p0Pod, (PhysxPxVec3Pod*)pp1Pod, color);
			}
		}

		public static void PxConstraintVisualizerVisualizeLineMut( PhysxPxConstraintVisualizerPod* selfPod,  ref PhysxPxVec3Pod p0Pod,  ref PhysxPxVec3Pod p1Pod,  uint color)
		{
			fixed (PhysxPxVec3Pod* pp0Pod = &p0Pod)
			{
				fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
				{
					PxConstraintVisualizerVisualizeLineMutNative(selfPod, (PhysxPxVec3Pod*)pp0Pod, (PhysxPxVec3Pod*)pp1Pod, color);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintConnector_prepareData_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxConstraintConnectorPrepareDataMutNative(PhysxPxConstraintConnectorPod* selfPod);

		public static void* PxConstraintConnectorPrepareDataMut( PhysxPxConstraintConnectorPod* selfPod)
		{
			void* ret = PxConstraintConnectorPrepareDataMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintConnector_onConstraintRelease_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintConnectorOnConstraintReleaseMutNative(PhysxPxConstraintConnectorPod* selfPod);

		public static void PxConstraintConnectorOnConstraintReleaseMut( PhysxPxConstraintConnectorPod* selfPod)
		{
			PxConstraintConnectorOnConstraintReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintConnector_onComShift_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintConnectorOnComShiftMutNative(PhysxPxConstraintConnectorPod* selfPod, uint actor);

		public static void PxConstraintConnectorOnComShiftMut( PhysxPxConstraintConnectorPod* selfPod,  uint actor)
		{
			PxConstraintConnectorOnComShiftMutNative(selfPod, actor);
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintConnector_onOriginShift_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintConnectorOnOriginShiftMutNative(PhysxPxConstraintConnectorPod* selfPod, PhysxPxVec3Pod* shiftPod);

		public static void PxConstraintConnectorOnOriginShiftMut( PhysxPxConstraintConnectorPod* selfPod,  PhysxPxVec3Pod* shiftPod)
		{
			PxConstraintConnectorOnOriginShiftMutNative(selfPod, shiftPod);
		}

		public static void PxConstraintConnectorOnOriginShiftMut( PhysxPxConstraintConnectorPod* selfPod,  ref PhysxPxVec3Pod shiftPod)
		{
			fixed (PhysxPxVec3Pod* pshiftPod = &shiftPod)
			{
				PxConstraintConnectorOnOriginShiftMutNative(selfPod, (PhysxPxVec3Pod*)pshiftPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintConnector_getSerializable_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBasePod* PxConstraintConnectorGetSerializableMutNative(PhysxPxConstraintConnectorPod* selfPod);

		public static PhysxPxBasePod* PxConstraintConnectorGetSerializableMut( PhysxPxConstraintConnectorPod* selfPod)
		{
			PhysxPxBasePod* ret = PxConstraintConnectorGetSerializableMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintConnector_getConstantBlock")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxConstraintConnectorGetConstantBlockNative(PhysxPxConstraintConnectorPod* selfPod);

		public static void* PxConstraintConnectorGetConstantBlock( PhysxPxConstraintConnectorPod* selfPod)
		{
			void* ret = PxConstraintConnectorGetConstantBlockNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintConnector_connectToConstraint_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintConnectorConnectToConstraintMutNative(PhysxPxConstraintConnectorPod* selfPod, PhysxPxConstraintPod* anonparam0Pod);

		public static void PxConstraintConnectorConnectToConstraintMut( PhysxPxConstraintConnectorPod* selfPod,  PhysxPxConstraintPod* anonparam0Pod)
		{
			PxConstraintConnectorConnectToConstraintMutNative(selfPod, anonparam0Pod);
		}

		public static void PxConstraintConnectorConnectToConstraintMut( PhysxPxConstraintConnectorPod* selfPod,  ref PhysxPxConstraintPod anonparam0Pod)
		{
			fixed (PhysxPxConstraintPod* panonparam0Pod = &anonparam0Pod)
			{
				PxConstraintConnectorConnectToConstraintMutNative(selfPod, (PhysxPxConstraintPod*)panonparam0Pod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintConnector_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintConnectorDeleteNative(PhysxPxConstraintConnectorPod* selfPod);

		public static void PxConstraintConnectorDelete( PhysxPxConstraintConnectorPod* selfPod)
		{
			PxConstraintConnectorDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSolverBody_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSolverBodyPod PxSolverBodyNewNative();

		public static PhysxPxSolverBodyPod PxSolverBodyNew()
		{
			PhysxPxSolverBodyPod ret = PxSolverBodyNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSolverBodyData_projectVelocity")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxSolverBodyDataProjectVelocityNative(PhysxPxSolverBodyDataPod* selfPod, PhysxPxVec3Pod* linPod, PhysxPxVec3Pod* angPod);

		public static float PxSolverBodyDataProjectVelocity( PhysxPxSolverBodyDataPod* selfPod,  PhysxPxVec3Pod* linPod,  PhysxPxVec3Pod* angPod)
		{
			float ret = PxSolverBodyDataProjectVelocityNative(selfPod, linPod, angPod);
			return ret;
		}

		public static float PxSolverBodyDataProjectVelocity( PhysxPxSolverBodyDataPod* selfPod,  ref PhysxPxVec3Pod linPod,  PhysxPxVec3Pod* angPod)
		{
			fixed (PhysxPxVec3Pod* plinPod = &linPod)
			{
				float ret = PxSolverBodyDataProjectVelocityNative(selfPod, (PhysxPxVec3Pod*)plinPod, angPod);
				return ret;
			}
		}

		public static float PxSolverBodyDataProjectVelocity( PhysxPxSolverBodyDataPod* selfPod,  PhysxPxVec3Pod* linPod,  ref PhysxPxVec3Pod angPod)
		{
			fixed (PhysxPxVec3Pod* pangPod = &angPod)
			{
				float ret = PxSolverBodyDataProjectVelocityNative(selfPod, linPod, (PhysxPxVec3Pod*)pangPod);
				return ret;
			}
		}

		public static float PxSolverBodyDataProjectVelocity( PhysxPxSolverBodyDataPod* selfPod,  ref PhysxPxVec3Pod linPod,  ref PhysxPxVec3Pod angPod)
		{
			fixed (PhysxPxVec3Pod* plinPod = &linPod)
			{
				fixed (PhysxPxVec3Pod* pangPod = &angPod)
				{
					float ret = PxSolverBodyDataProjectVelocityNative(selfPod, (PhysxPxVec3Pod*)plinPod, (PhysxPxVec3Pod*)pangPod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSolverConstraintPrepDesc_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSolverConstraintPrepDescDeleteNative(PhysxPxSolverConstraintPrepDescPod* selfPod);

		public static void PxSolverConstraintPrepDescDelete( PhysxPxSolverConstraintPrepDescPod* selfPod)
		{
			PxSolverConstraintPrepDescDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintAllocator_reserveConstraintData_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxConstraintAllocatorReserveConstraintDataMutNative(PhysxPxConstraintAllocatorPod* selfPod, uint byteSize);

		public static byte* PxConstraintAllocatorReserveConstraintDataMut( PhysxPxConstraintAllocatorPod* selfPod,  uint byteSize)
		{
			byte* ret = PxConstraintAllocatorReserveConstraintDataMutNative(selfPod, byteSize);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintAllocator_reserveFrictionData_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxConstraintAllocatorReserveFrictionDataMutNative(PhysxPxConstraintAllocatorPod* selfPod, uint byteSize);

		public static byte* PxConstraintAllocatorReserveFrictionDataMut( PhysxPxConstraintAllocatorPod* selfPod,  uint byteSize)
		{
			byte* ret = PxConstraintAllocatorReserveFrictionDataMutNative(selfPod, byteSize);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConstraintAllocator_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConstraintAllocatorDeleteNative(PhysxPxConstraintAllocatorPod* selfPod);

		public static void PxConstraintAllocatorDelete( PhysxPxConstraintAllocatorPod* selfPod)
		{
			PxConstraintAllocatorDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationLimit_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxArticulationLimitPod PxArticulationLimitNewNative();

		public static PhysxPxArticulationLimitPod PxArticulationLimitNew()
		{
			PhysxPxArticulationLimitPod ret = PxArticulationLimitNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationLimit_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxArticulationLimitPod PxArticulationLimitNew1Native(float low, float high);

		public static PhysxPxArticulationLimitPod PxArticulationLimitNew1( float low,  float high)
		{
			PhysxPxArticulationLimitPod ret = PxArticulationLimitNew1Native(low, high);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationDrive_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxArticulationDrivePod PxArticulationDriveNewNative();

		public static PhysxPxArticulationDrivePod PxArticulationDriveNew()
		{
			PhysxPxArticulationDrivePod ret = PxArticulationDriveNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationDrive_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxArticulationDrivePod PxArticulationDriveNew1Native(float stiffness, float damping, float maxforce, int drivetypePod);

		public static PhysxPxArticulationDrivePod PxArticulationDriveNew1( float stiffness,  float damping,  float maxforce,  int drivetypePod)
		{
			PhysxPxArticulationDrivePod ret = PxArticulationDriveNew1Native(stiffness, damping, maxforce, drivetypePod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTGSSolverBodyVel_projectVelocity")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxTGSSolverBodyVelProjectVelocityNative(PhysxPxTGSSolverBodyVelPod* selfPod, PhysxPxVec3Pod* linPod, PhysxPxVec3Pod* angPod);

		public static float PxTGSSolverBodyVelProjectVelocity( PhysxPxTGSSolverBodyVelPod* selfPod,  PhysxPxVec3Pod* linPod,  PhysxPxVec3Pod* angPod)
		{
			float ret = PxTGSSolverBodyVelProjectVelocityNative(selfPod, linPod, angPod);
			return ret;
		}

		public static float PxTGSSolverBodyVelProjectVelocity( PhysxPxTGSSolverBodyVelPod* selfPod,  ref PhysxPxVec3Pod linPod,  PhysxPxVec3Pod* angPod)
		{
			fixed (PhysxPxVec3Pod* plinPod = &linPod)
			{
				float ret = PxTGSSolverBodyVelProjectVelocityNative(selfPod, (PhysxPxVec3Pod*)plinPod, angPod);
				return ret;
			}
		}

		public static float PxTGSSolverBodyVelProjectVelocity( PhysxPxTGSSolverBodyVelPod* selfPod,  PhysxPxVec3Pod* linPod,  ref PhysxPxVec3Pod angPod)
		{
			fixed (PhysxPxVec3Pod* pangPod = &angPod)
			{
				float ret = PxTGSSolverBodyVelProjectVelocityNative(selfPod, linPod, (PhysxPxVec3Pod*)pangPod);
				return ret;
			}
		}

		public static float PxTGSSolverBodyVelProjectVelocity( PhysxPxTGSSolverBodyVelPod* selfPod,  ref PhysxPxVec3Pod linPod,  ref PhysxPxVec3Pod angPod)
		{
			fixed (PhysxPxVec3Pod* plinPod = &linPod)
			{
				fixed (PhysxPxVec3Pod* pangPod = &angPod)
				{
					float ret = PxTGSSolverBodyVelProjectVelocityNative(selfPod, (PhysxPxVec3Pod*)plinPod, (PhysxPxVec3Pod*)pangPod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTGSSolverBodyData_projectVelocity")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxTGSSolverBodyDataProjectVelocityNative(PhysxPxTGSSolverBodyDataPod* selfPod, PhysxPxVec3Pod* linearPod, PhysxPxVec3Pod* angularPod);

		public static float PxTGSSolverBodyDataProjectVelocity( PhysxPxTGSSolverBodyDataPod* selfPod,  PhysxPxVec3Pod* linearPod,  PhysxPxVec3Pod* angularPod)
		{
			float ret = PxTGSSolverBodyDataProjectVelocityNative(selfPod, linearPod, angularPod);
			return ret;
		}

		public static float PxTGSSolverBodyDataProjectVelocity( PhysxPxTGSSolverBodyDataPod* selfPod,  ref PhysxPxVec3Pod linearPod,  PhysxPxVec3Pod* angularPod)
		{
			fixed (PhysxPxVec3Pod* plinearPod = &linearPod)
			{
				float ret = PxTGSSolverBodyDataProjectVelocityNative(selfPod, (PhysxPxVec3Pod*)plinearPod, angularPod);
				return ret;
			}
		}

		public static float PxTGSSolverBodyDataProjectVelocity( PhysxPxTGSSolverBodyDataPod* selfPod,  PhysxPxVec3Pod* linearPod,  ref PhysxPxVec3Pod angularPod)
		{
			fixed (PhysxPxVec3Pod* pangularPod = &angularPod)
			{
				float ret = PxTGSSolverBodyDataProjectVelocityNative(selfPod, linearPod, (PhysxPxVec3Pod*)pangularPod);
				return ret;
			}
		}

		public static float PxTGSSolverBodyDataProjectVelocity( PhysxPxTGSSolverBodyDataPod* selfPod,  ref PhysxPxVec3Pod linearPod,  ref PhysxPxVec3Pod angularPod)
		{
			fixed (PhysxPxVec3Pod* plinearPod = &linearPod)
			{
				fixed (PhysxPxVec3Pod* pangularPod = &angularPod)
				{
					float ret = PxTGSSolverBodyDataProjectVelocityNative(selfPod, (PhysxPxVec3Pod*)plinearPod, (PhysxPxVec3Pod*)pangularPod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTGSSolverConstraintPrepDesc_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTGSSolverConstraintPrepDescDeleteNative(PhysxPxTGSSolverConstraintPrepDescPod* selfPod);

		public static void PxTGSSolverConstraintPrepDescDelete( PhysxPxTGSSolverConstraintPrepDescPod* selfPod)
		{
			PxTGSSolverConstraintPrepDescDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_setRestLength_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxArticulationAttachmentSetRestLengthMutNative(PhysxPxArticulationAttachmentPod* selfPod, float restLength);

		public static void PxArticulationAttachmentSetRestLengthMut( PhysxPxArticulationAttachmentPod* selfPod,  float restLength)
		{
			PxArticulationAttachmentSetRestLengthMutNative(selfPod, restLength);
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_getRestLength")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxArticulationAttachmentGetRestLengthNative(PhysxPxArticulationAttachmentPod* selfPod);

		public static float PxArticulationAttachmentGetRestLength( PhysxPxArticulationAttachmentPod* selfPod)
		{
			float ret = PxArticulationAttachmentGetRestLengthNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_setLimitParameters_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxArticulationAttachmentSetLimitParametersMutNative(PhysxPxArticulationAttachmentPod* selfPod, PhysxPxArticulationTendonLimitPod* parametersPod);

		public static void PxArticulationAttachmentSetLimitParametersMut( PhysxPxArticulationAttachmentPod* selfPod,  PhysxPxArticulationTendonLimitPod* parametersPod)
		{
			PxArticulationAttachmentSetLimitParametersMutNative(selfPod, parametersPod);
		}

		public static void PxArticulationAttachmentSetLimitParametersMut( PhysxPxArticulationAttachmentPod* selfPod,  ref PhysxPxArticulationTendonLimitPod parametersPod)
		{
			fixed (PhysxPxArticulationTendonLimitPod* pparametersPod = &parametersPod)
			{
				PxArticulationAttachmentSetLimitParametersMutNative(selfPod, (PhysxPxArticulationTendonLimitPod*)pparametersPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_getLimitParameters")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxArticulationTendonLimitPod PxArticulationAttachmentGetLimitParametersNative(PhysxPxArticulationAttachmentPod* selfPod);

		public static PhysxPxArticulationTendonLimitPod PxArticulationAttachmentGetLimitParameters( PhysxPxArticulationAttachmentPod* selfPod)
		{
			PhysxPxArticulationTendonLimitPod ret = PxArticulationAttachmentGetLimitParametersNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_setRelativeOffset_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxArticulationAttachmentSetRelativeOffsetMutNative(PhysxPxArticulationAttachmentPod* selfPod, PhysxPxVec3Pod* offsetPod);

		public static void PxArticulationAttachmentSetRelativeOffsetMut( PhysxPxArticulationAttachmentPod* selfPod,  PhysxPxVec3Pod* offsetPod)
		{
			PxArticulationAttachmentSetRelativeOffsetMutNative(selfPod, offsetPod);
		}

		public static void PxArticulationAttachmentSetRelativeOffsetMut( PhysxPxArticulationAttachmentPod* selfPod,  ref PhysxPxVec3Pod offsetPod)
		{
			fixed (PhysxPxVec3Pod* poffsetPod = &offsetPod)
			{
				PxArticulationAttachmentSetRelativeOffsetMutNative(selfPod, (PhysxPxVec3Pod*)poffsetPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_getRelativeOffset")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxArticulationAttachmentGetRelativeOffsetNative(PhysxPxArticulationAttachmentPod* selfPod);

		public static PhysxPxVec3Pod PxArticulationAttachmentGetRelativeOffset( PhysxPxArticulationAttachmentPod* selfPod)
		{
			PhysxPxVec3Pod ret = PxArticulationAttachmentGetRelativeOffsetNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_setCoefficient_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxArticulationAttachmentSetCoefficientMutNative(PhysxPxArticulationAttachmentPod* selfPod, float coefficient);

		public static void PxArticulationAttachmentSetCoefficientMut( PhysxPxArticulationAttachmentPod* selfPod,  float coefficient)
		{
			PxArticulationAttachmentSetCoefficientMutNative(selfPod, coefficient);
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_getCoefficient")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxArticulationAttachmentGetCoefficientNative(PhysxPxArticulationAttachmentPod* selfPod);

		public static float PxArticulationAttachmentGetCoefficient( PhysxPxArticulationAttachmentPod* selfPod)
		{
			float ret = PxArticulationAttachmentGetCoefficientNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_getLink")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxArticulationLinkPod* PxArticulationAttachmentGetLinkNative(PhysxPxArticulationAttachmentPod* selfPod);

		public static PhysxPxArticulationLinkPod* PxArticulationAttachmentGetLink( PhysxPxArticulationAttachmentPod* selfPod)
		{
			PhysxPxArticulationLinkPod* ret = PxArticulationAttachmentGetLinkNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_getParent")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxArticulationAttachmentPod* PxArticulationAttachmentGetParentNative(PhysxPxArticulationAttachmentPod* selfPod);

		public static PhysxPxArticulationAttachmentPod* PxArticulationAttachmentGetParent( PhysxPxArticulationAttachmentPod* selfPod)
		{
			PhysxPxArticulationAttachmentPod* ret = PxArticulationAttachmentGetParentNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxArticulationAttachment_isLeaf")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxArticulationAttachmentIsLeafNative(PhysxPxArticulationAttachmentPod* selfPod);

		public static bool PxArticulationAttachmentIsLeaf( PhysxPxArticulationAttachmentPod* selfPod)
		{
			byte ret = PxArticulationAttachmentIsLeafNative(selfPod);
			return ret != 0;
		}
	}
}
