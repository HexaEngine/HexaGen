// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.PhysX
{
	public unsafe partial class PhysX
	{

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* dPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				PhysComputeBarycentricNative(aPod, bPod, (PhysxPxVec3Pod*)pcPod, dPod, pPod, baryPod);
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* dPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, dPod, pPod, baryPod);
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod dPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pdPod = &dPod)
			{
				PhysComputeBarycentricNative(aPod, bPod, cPod, (PhysxPxVec3Pod*)pdPod, pPod, baryPod);
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod dPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pdPod = &dPod)
				{
					PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, cPod, (PhysxPxVec3Pod*)pdPod, pPod, baryPod);
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod dPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				fixed (PhysxPxVec3Pod* pdPod = &dPod)
				{
					PhysComputeBarycentricNative(aPod, bPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)pdPod, pPod, baryPod);
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod dPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					fixed (PhysxPxVec3Pod* pdPod = &dPod)
					{
						PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)pdPod, pPod, baryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* dPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* ppPod = &pPod)
			{
				PhysComputeBarycentricNative(aPod, bPod, cPod, dPod, (PhysxPxVec3Pod*)ppPod, baryPod);
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* dPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* ppPod = &pPod)
				{
					PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, cPod, dPod, (PhysxPxVec3Pod*)ppPod, baryPod);
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* dPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				fixed (PhysxPxVec3Pod* ppPod = &pPod)
				{
					PhysComputeBarycentricNative(aPod, bPod, (PhysxPxVec3Pod*)pcPod, dPod, (PhysxPxVec3Pod*)ppPod, baryPod);
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* dPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					fixed (PhysxPxVec3Pod* ppPod = &pPod)
					{
						PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, dPod, (PhysxPxVec3Pod*)ppPod, baryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod dPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pdPod = &dPod)
			{
				fixed (PhysxPxVec3Pod* ppPod = &pPod)
				{
					PhysComputeBarycentricNative(aPod, bPod, cPod, (PhysxPxVec3Pod*)pdPod, (PhysxPxVec3Pod*)ppPod, baryPod);
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod dPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pdPod = &dPod)
				{
					fixed (PhysxPxVec3Pod* ppPod = &pPod)
					{
						PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, cPod, (PhysxPxVec3Pod*)pdPod, (PhysxPxVec3Pod*)ppPod, baryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod dPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				fixed (PhysxPxVec3Pod* pdPod = &dPod)
				{
					fixed (PhysxPxVec3Pod* ppPod = &pPod)
					{
						PhysComputeBarycentricNative(aPod, bPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)pdPod, (PhysxPxVec3Pod*)ppPod, baryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod dPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					fixed (PhysxPxVec3Pod* pdPod = &dPod)
					{
						fixed (PhysxPxVec3Pod* ppPod = &pPod)
						{
							PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)pdPod, (PhysxPxVec3Pod*)ppPod, baryPod);
						}
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* dPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
			{
				PhysComputeBarycentricNative(aPod, bPod, cPod, dPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* dPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
				{
					PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, cPod, dPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* dPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
				{
					PhysComputeBarycentricNative(aPod, bPod, (PhysxPxVec3Pod*)pcPod, dPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* dPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
					{
						PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, dPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod dPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pdPod = &dPod)
			{
				fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
				{
					PhysComputeBarycentricNative(aPod, bPod, cPod, (PhysxPxVec3Pod*)pdPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod dPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pdPod = &dPod)
				{
					fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
					{
						PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, cPod, (PhysxPxVec3Pod*)pdPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod dPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				fixed (PhysxPxVec3Pod* pdPod = &dPod)
				{
					fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
					{
						PhysComputeBarycentricNative(aPod, bPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)pdPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod dPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					fixed (PhysxPxVec3Pod* pdPod = &dPod)
					{
						fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
						{
							PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)pdPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
						}
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* dPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* ppPod = &pPod)
			{
				fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
				{
					PhysComputeBarycentricNative(aPod, bPod, cPod, dPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* dPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* ppPod = &pPod)
				{
					fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
					{
						PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, cPod, dPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* dPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				fixed (PhysxPxVec3Pod* ppPod = &pPod)
				{
					fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
					{
						PhysComputeBarycentricNative(aPod, bPod, (PhysxPxVec3Pod*)pcPod, dPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* dPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					fixed (PhysxPxVec3Pod* ppPod = &pPod)
					{
						fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
						{
							PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, dPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
						}
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod dPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pdPod = &dPod)
			{
				fixed (PhysxPxVec3Pod* ppPod = &pPod)
				{
					fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
					{
						PhysComputeBarycentricNative(aPod, bPod, cPod, (PhysxPxVec3Pod*)pdPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod dPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pdPod = &dPod)
				{
					fixed (PhysxPxVec3Pod* ppPod = &pPod)
					{
						fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
						{
							PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, cPod, (PhysxPxVec3Pod*)pdPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
						}
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod dPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				fixed (PhysxPxVec3Pod* pdPod = &dPod)
				{
					fixed (PhysxPxVec3Pod* ppPod = &pPod)
					{
						fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
						{
							PhysComputeBarycentricNative(aPod, bPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)pdPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
						}
					}
				}
			}
		}

		public static void PhysComputeBarycentric( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod dPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					fixed (PhysxPxVec3Pod* pdPod = &dPod)
					{
						fixed (PhysxPxVec3Pod* ppPod = &pPod)
						{
							fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
							{
								PhysComputeBarycentricNative(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)pdPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
							}
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_computeBarycentric_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysComputeBarycentric1Native(PhysxPxVec3Pod* aPod, PhysxPxVec3Pod* bPod, PhysxPxVec3Pod* cPod, PhysxPxVec3Pod* pPod, PhysxPxVec4Pod* baryPod);

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			PhysComputeBarycentric1Native(aPod, bPod, cPod, pPod, baryPod);
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				PhysComputeBarycentric1Native(aPod, (PhysxPxVec3Pod*)pbPod, cPod, pPod, baryPod);
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				PhysComputeBarycentric1Native(aPod, bPod, (PhysxPxVec3Pod*)pcPod, pPod, baryPod);
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					PhysComputeBarycentric1Native(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, pPod, baryPod);
				}
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* ppPod = &pPod)
			{
				PhysComputeBarycentric1Native(aPod, bPod, cPod, (PhysxPxVec3Pod*)ppPod, baryPod);
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* ppPod = &pPod)
				{
					PhysComputeBarycentric1Native(aPod, (PhysxPxVec3Pod*)pbPod, cPod, (PhysxPxVec3Pod*)ppPod, baryPod);
				}
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				fixed (PhysxPxVec3Pod* ppPod = &pPod)
				{
					PhysComputeBarycentric1Native(aPod, bPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)ppPod, baryPod);
				}
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod pPod,  PhysxPxVec4Pod* baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					fixed (PhysxPxVec3Pod* ppPod = &pPod)
					{
						PhysComputeBarycentric1Native(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)ppPod, baryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
			{
				PhysComputeBarycentric1Native(aPod, bPod, cPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
				{
					PhysComputeBarycentric1Native(aPod, (PhysxPxVec3Pod*)pbPod, cPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
				}
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
				{
					PhysComputeBarycentric1Native(aPod, bPod, (PhysxPxVec3Pod*)pcPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
				}
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  PhysxPxVec3Pod* pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
					{
						PhysComputeBarycentric1Native(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, pPod, (PhysxPxVec4Pod*)pbaryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* ppPod = &pPod)
			{
				fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
				{
					PhysComputeBarycentric1Native(aPod, bPod, cPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
				}
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  PhysxPxVec3Pod* cPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* ppPod = &pPod)
				{
					fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
					{
						PhysComputeBarycentric1Native(aPod, (PhysxPxVec3Pod*)pbPod, cPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  PhysxPxVec3Pod* bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pcPod = &cPod)
			{
				fixed (PhysxPxVec3Pod* ppPod = &pPod)
				{
					fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
					{
						PhysComputeBarycentric1Native(aPod, bPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
					}
				}
			}
		}

		public static void PhysComputeBarycentric1( PhysxPxVec3Pod* aPod,  ref PhysxPxVec3Pod bPod,  ref PhysxPxVec3Pod cPod,  ref PhysxPxVec3Pod pPod,  ref PhysxPxVec4Pod baryPod)
		{
			fixed (PhysxPxVec3Pod* pbPod = &bPod)
			{
				fixed (PhysxPxVec3Pod* pcPod = &cPod)
				{
					fixed (PhysxPxVec3Pod* ppPod = &pPod)
					{
						fixed (PhysxPxVec4Pod* pbaryPod = &baryPod)
						{
							PhysComputeBarycentric1Native(aPod, (PhysxPxVec3Pod*)pbPod, (PhysxPxVec3Pod*)pcPod, (PhysxPxVec3Pod*)ppPod, (PhysxPxVec4Pod*)pbaryPod);
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "Interpolation_PxLerp")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float InterpolationPxLerpNative(float a, float b, float t);

		public static float InterpolationPxLerp( float a,  float b,  float t)
		{
			float ret = InterpolationPxLerpNative(a, b, t);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "Interpolation_PxBiLerp")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float InterpolationPxBiLerpNative(float f00, float f10, float f01, float f11, float tx, float ty);

		public static float InterpolationPxBiLerp( float f00,  float f10,  float f01,  float f11,  float tx,  float ty)
		{
			float ret = InterpolationPxBiLerpNative(f00, f10, f01, f11, tx, ty);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "Interpolation_PxTriLerp")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float InterpolationPxTriLerpNative(float f000, float f100, float f010, float f110, float f001, float f101, float f011, float f111, float tx, float ty, float tz);

		public static float InterpolationPxTriLerp( float f000,  float f100,  float f010,  float f110,  float f001,  float f101,  float f011,  float f111,  float tx,  float ty,  float tz)
		{
			float ret = InterpolationPxTriLerpNative(f000, f100, f010, f110, f001, f101, f011, f111, tx, ty, tz);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "Interpolation_PxSDFIdx")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint InterpolationPxSDFIdxNative(uint i, uint j, uint k, uint nbX, uint nbY);

		public static uint InterpolationPxSDFIdx( uint i,  uint j,  uint k,  uint nbX,  uint nbY)
		{
			uint ret = InterpolationPxSDFIdxNative(i, j, k, nbX, nbY);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "Interpolation_PxSDFSampleImpl")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float InterpolationPxSDFSampleImplNative(float* sdf, PhysxPxVec3Pod* localposPod, PhysxPxVec3Pod* sdfboxlowerPod, PhysxPxVec3Pod* sdfboxhigherPod, float sdfDx, float invSdfDx, uint dimX, uint dimY, uint dimZ, float tolerance);

		public static float InterpolationPxSDFSampleImpl( float* sdf,  PhysxPxVec3Pod* localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  float tolerance)
		{
			float ret = InterpolationPxSDFSampleImplNative(sdf, localposPod, sdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, tolerance);
			return ret;
		}

		public static float InterpolationPxSDFSampleImpl( float* sdf,  ref PhysxPxVec3Pod localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				float ret = InterpolationPxSDFSampleImplNative(sdf, (PhysxPxVec3Pod*)plocalposPod, sdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, tolerance);
				return ret;
			}
		}

		public static float InterpolationPxSDFSampleImpl( float* sdf,  PhysxPxVec3Pod* localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
			{
				float ret = InterpolationPxSDFSampleImplNative(sdf, localposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, tolerance);
				return ret;
			}
		}

		public static float InterpolationPxSDFSampleImpl( float* sdf,  ref PhysxPxVec3Pod localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
				{
					float ret = InterpolationPxSDFSampleImplNative(sdf, (PhysxPxVec3Pod*)plocalposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, tolerance);
					return ret;
				}
			}
		}

		public static float InterpolationPxSDFSampleImpl( float* sdf,  PhysxPxVec3Pod* localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
			{
				float ret = InterpolationPxSDFSampleImplNative(sdf, localposPod, sdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, tolerance);
				return ret;
			}
		}

		public static float InterpolationPxSDFSampleImpl( float* sdf,  ref PhysxPxVec3Pod localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
				{
					float ret = InterpolationPxSDFSampleImplNative(sdf, (PhysxPxVec3Pod*)plocalposPod, sdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, tolerance);
					return ret;
				}
			}
		}

		public static float InterpolationPxSDFSampleImpl( float* sdf,  PhysxPxVec3Pod* localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
				{
					float ret = InterpolationPxSDFSampleImplNative(sdf, localposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, tolerance);
					return ret;
				}
			}
		}

		public static float InterpolationPxSDFSampleImpl( float* sdf,  ref PhysxPxVec3Pod localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
				{
					fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
					{
						float ret = InterpolationPxSDFSampleImplNative(sdf, (PhysxPxVec3Pod*)plocalposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, tolerance);
						return ret;
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxSdfSample")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PhysPxSdfSampleNative(float* sdf, PhysxPxVec3Pod* localposPod, PhysxPxVec3Pod* sdfboxlowerPod, PhysxPxVec3Pod* sdfboxhigherPod, float sdfDx, float invSdfDx, uint dimX, uint dimY, uint dimZ, PhysxPxVec3Pod* gradientPod, float tolerance);

		public static float PhysPxSdfSample( float* sdf,  PhysxPxVec3Pod* localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  PhysxPxVec3Pod* gradientPod,  float tolerance)
		{
			float ret = PhysPxSdfSampleNative(sdf, localposPod, sdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, gradientPod, tolerance);
			return ret;
		}

		public static float PhysPxSdfSample( float* sdf,  ref PhysxPxVec3Pod localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  PhysxPxVec3Pod* gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				float ret = PhysPxSdfSampleNative(sdf, (PhysxPxVec3Pod*)plocalposPod, sdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, gradientPod, tolerance);
				return ret;
			}
		}

		public static float PhysPxSdfSample( float* sdf,  PhysxPxVec3Pod* localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  PhysxPxVec3Pod* gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
			{
				float ret = PhysPxSdfSampleNative(sdf, localposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, gradientPod, tolerance);
				return ret;
			}
		}

		public static float PhysPxSdfSample( float* sdf,  ref PhysxPxVec3Pod localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  PhysxPxVec3Pod* gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
				{
					float ret = PhysPxSdfSampleNative(sdf, (PhysxPxVec3Pod*)plocalposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, gradientPod, tolerance);
					return ret;
				}
			}
		}

		public static float PhysPxSdfSample( float* sdf,  PhysxPxVec3Pod* localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  PhysxPxVec3Pod* gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
			{
				float ret = PhysPxSdfSampleNative(sdf, localposPod, sdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, gradientPod, tolerance);
				return ret;
			}
		}

		public static float PhysPxSdfSample( float* sdf,  ref PhysxPxVec3Pod localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  PhysxPxVec3Pod* gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
				{
					float ret = PhysPxSdfSampleNative(sdf, (PhysxPxVec3Pod*)plocalposPod, sdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, gradientPod, tolerance);
					return ret;
				}
			}
		}

		public static float PhysPxSdfSample( float* sdf,  PhysxPxVec3Pod* localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  PhysxPxVec3Pod* gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
				{
					float ret = PhysPxSdfSampleNative(sdf, localposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, gradientPod, tolerance);
					return ret;
				}
			}
		}

		public static float PhysPxSdfSample( float* sdf,  ref PhysxPxVec3Pod localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  PhysxPxVec3Pod* gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
				{
					fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
					{
						float ret = PhysPxSdfSampleNative(sdf, (PhysxPxVec3Pod*)plocalposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, gradientPod, tolerance);
						return ret;
					}
				}
			}
		}

		public static float PhysPxSdfSample( float* sdf,  PhysxPxVec3Pod* localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  ref PhysxPxVec3Pod gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* pgradientPod = &gradientPod)
			{
				float ret = PhysPxSdfSampleNative(sdf, localposPod, sdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, (PhysxPxVec3Pod*)pgradientPod, tolerance);
				return ret;
			}
		}

		public static float PhysPxSdfSample( float* sdf,  ref PhysxPxVec3Pod localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  ref PhysxPxVec3Pod gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				fixed (PhysxPxVec3Pod* pgradientPod = &gradientPod)
				{
					float ret = PhysPxSdfSampleNative(sdf, (PhysxPxVec3Pod*)plocalposPod, sdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, (PhysxPxVec3Pod*)pgradientPod, tolerance);
					return ret;
				}
			}
		}

		public static float PhysPxSdfSample( float* sdf,  PhysxPxVec3Pod* localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  ref PhysxPxVec3Pod gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
			{
				fixed (PhysxPxVec3Pod* pgradientPod = &gradientPod)
				{
					float ret = PhysPxSdfSampleNative(sdf, localposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, (PhysxPxVec3Pod*)pgradientPod, tolerance);
					return ret;
				}
			}
		}

		public static float PhysPxSdfSample( float* sdf,  ref PhysxPxVec3Pod localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  PhysxPxVec3Pod* sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  ref PhysxPxVec3Pod gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
				{
					fixed (PhysxPxVec3Pod* pgradientPod = &gradientPod)
					{
						float ret = PhysPxSdfSampleNative(sdf, (PhysxPxVec3Pod*)plocalposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, sdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, (PhysxPxVec3Pod*)pgradientPod, tolerance);
						return ret;
					}
				}
			}
		}

		public static float PhysPxSdfSample( float* sdf,  PhysxPxVec3Pod* localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  ref PhysxPxVec3Pod gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
			{
				fixed (PhysxPxVec3Pod* pgradientPod = &gradientPod)
				{
					float ret = PhysPxSdfSampleNative(sdf, localposPod, sdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, (PhysxPxVec3Pod*)pgradientPod, tolerance);
					return ret;
				}
			}
		}

		public static float PhysPxSdfSample( float* sdf,  ref PhysxPxVec3Pod localposPod,  PhysxPxVec3Pod* sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  ref PhysxPxVec3Pod gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
				{
					fixed (PhysxPxVec3Pod* pgradientPod = &gradientPod)
					{
						float ret = PhysPxSdfSampleNative(sdf, (PhysxPxVec3Pod*)plocalposPod, sdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, (PhysxPxVec3Pod*)pgradientPod, tolerance);
						return ret;
					}
				}
			}
		}

		public static float PhysPxSdfSample( float* sdf,  PhysxPxVec3Pod* localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  ref PhysxPxVec3Pod gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
				{
					fixed (PhysxPxVec3Pod* pgradientPod = &gradientPod)
					{
						float ret = PhysPxSdfSampleNative(sdf, localposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, (PhysxPxVec3Pod*)pgradientPod, tolerance);
						return ret;
					}
				}
			}
		}

		public static float PhysPxSdfSample( float* sdf,  ref PhysxPxVec3Pod localposPod,  ref PhysxPxVec3Pod sdfboxlowerPod,  ref PhysxPxVec3Pod sdfboxhigherPod,  float sdfDx,  float invSdfDx,  uint dimX,  uint dimY,  uint dimZ,  ref PhysxPxVec3Pod gradientPod,  float tolerance)
		{
			fixed (PhysxPxVec3Pod* plocalposPod = &localposPod)
			{
				fixed (PhysxPxVec3Pod* psdfboxlowerPod = &sdfboxlowerPod)
				{
					fixed (PhysxPxVec3Pod* psdfboxhigherPod = &sdfboxhigherPod)
					{
						fixed (PhysxPxVec3Pod* pgradientPod = &gradientPod)
						{
							float ret = PhysPxSdfSampleNative(sdf, (PhysxPxVec3Pod*)plocalposPod, (PhysxPxVec3Pod*)psdfboxlowerPod, (PhysxPxVec3Pod*)psdfboxhigherPod, sdfDx, invSdfDx, dimX, dimY, dimZ, (PhysxPxVec3Pod*)pgradientPod, tolerance);
							return ret;
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMutexImpl_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMutexImplPod* PxMutexImplNewAllocNative();

		public static PhysxPxMutexImplPod* PxMutexImplNewAlloc()
		{
			PhysxPxMutexImplPod* ret = PxMutexImplNewAllocNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMutexImpl_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxMutexImplDeleteNative(PhysxPxMutexImplPod* selfPod);

		public static void PxMutexImplDelete( PhysxPxMutexImplPod* selfPod)
		{
			PxMutexImplDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxMutexImpl_lock_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxMutexImplLockMutNative(PhysxPxMutexImplPod* selfPod);

		public static void PxMutexImplLockMut( PhysxPxMutexImplPod* selfPod)
		{
			PxMutexImplLockMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxMutexImpl_trylock_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxMutexImplTrylockMutNative(PhysxPxMutexImplPod* selfPod);

		public static bool PxMutexImplTrylockMut( PhysxPxMutexImplPod* selfPod)
		{
			byte ret = PxMutexImplTrylockMutNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxMutexImpl_unlock_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxMutexImplUnlockMutNative(PhysxPxMutexImplPod* selfPod);

		public static void PxMutexImplUnlockMut( PhysxPxMutexImplPod* selfPod)
		{
			PxMutexImplUnlockMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxMutexImpl_getSize")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxMutexImplGetSizeNative();

		public static uint PxMutexImplGetSize()
		{
			uint ret = PxMutexImplGetSizeNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxReadWriteLock_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxReadWriteLockPod* PxReadWriteLockNewAllocNative();

		public static PhysxPxReadWriteLockPod* PxReadWriteLockNewAlloc()
		{
			PhysxPxReadWriteLockPod* ret = PxReadWriteLockNewAllocNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxReadWriteLock_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxReadWriteLockDeleteNative(PhysxPxReadWriteLockPod* selfPod);

		public static void PxReadWriteLockDelete( PhysxPxReadWriteLockPod* selfPod)
		{
			PxReadWriteLockDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxReadWriteLock_lockReader_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxReadWriteLockLockReaderMutNative(PhysxPxReadWriteLockPod* selfPod, byte takeLock);

		public static void PxReadWriteLockLockReaderMut( PhysxPxReadWriteLockPod* selfPod,  bool takeLock)
		{
			PxReadWriteLockLockReaderMutNative(selfPod, takeLock ? (byte)1 : (byte)0);
		}

		[LibraryImport(LibName, EntryPoint = "PxReadWriteLock_lockWriter_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxReadWriteLockLockWriterMutNative(PhysxPxReadWriteLockPod* selfPod);

		public static void PxReadWriteLockLockWriterMut( PhysxPxReadWriteLockPod* selfPod)
		{
			PxReadWriteLockLockWriterMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxReadWriteLock_unlockReader_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxReadWriteLockUnlockReaderMutNative(PhysxPxReadWriteLockPod* selfPod);

		public static void PxReadWriteLockUnlockReaderMut( PhysxPxReadWriteLockPod* selfPod)
		{
			PxReadWriteLockUnlockReaderMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxReadWriteLock_unlockWriter_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxReadWriteLockUnlockWriterMutNative(PhysxPxReadWriteLockPod* selfPod);

		public static void PxReadWriteLockUnlockWriterMut( PhysxPxReadWriteLockPod* selfPod)
		{
			PxReadWriteLockUnlockWriterMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxProfilerCallback_zoneStart_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PxProfilerCallbackZoneStartMutNative(PhysxPxProfilerCallbackPod* selfPod, byte* eventName, byte detached, ulong contextId);

		public static void* PxProfilerCallbackZoneStartMut( PhysxPxProfilerCallbackPod* selfPod,  byte* eventName,  bool detached,  ulong contextId)
		{
			void* ret = PxProfilerCallbackZoneStartMutNative(selfPod, eventName, detached ? (byte)1 : (byte)0, contextId);
			return ret;
		}

		public static void* PxProfilerCallbackZoneStartMut( PhysxPxProfilerCallbackPod* selfPod,  ref byte eventName,  bool detached,  ulong contextId)
		{
			fixed (byte* peventName = &eventName)
			{
				void* ret = PxProfilerCallbackZoneStartMutNative(selfPod, (byte*)peventName, detached ? (byte)1 : (byte)0, contextId);
				return ret;
			}
		}

		public static void* PxProfilerCallbackZoneStartMut( PhysxPxProfilerCallbackPod* selfPod,  string eventName,  bool detached,  ulong contextId)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (eventName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(eventName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(eventName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			void* ret = PxProfilerCallbackZoneStartMutNative(selfPod, pStr0, detached ? (byte)1 : (byte)0, contextId);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxProfilerCallback_zoneEnd_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxProfilerCallbackZoneEndMutNative(PhysxPxProfilerCallbackPod* selfPod, void* profilerData, byte* eventName, byte detached, ulong contextId);

		public static void PxProfilerCallbackZoneEndMut( PhysxPxProfilerCallbackPod* selfPod,  void* profilerData,  byte* eventName,  bool detached,  ulong contextId)
		{
			PxProfilerCallbackZoneEndMutNative(selfPod, profilerData, eventName, detached ? (byte)1 : (byte)0, contextId);
		}

		public static void PxProfilerCallbackZoneEndMut( PhysxPxProfilerCallbackPod* selfPod,  void* profilerData,  ref byte eventName,  bool detached,  ulong contextId)
		{
			fixed (byte* peventName = &eventName)
			{
				PxProfilerCallbackZoneEndMutNative(selfPod, profilerData, (byte*)peventName, detached ? (byte)1 : (byte)0, contextId);
			}
		}

		public static void PxProfilerCallbackZoneEndMut( PhysxPxProfilerCallbackPod* selfPod,  void* profilerData,  string eventName,  bool detached,  ulong contextId)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (eventName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(eventName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(eventName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxProfilerCallbackZoneEndMutNative(selfPod, profilerData, pStr0, detached ? (byte)1 : (byte)0, contextId);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxProfileScoped_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxProfileScopedPod* PxProfileScopedNewAllocNative(PhysxPxProfilerCallbackPod* callbackPod, byte* eventName, byte detached, ulong contextId);

		public static PhysxPxProfileScopedPod* PxProfileScopedNewAlloc( PhysxPxProfilerCallbackPod* callbackPod,  byte* eventName,  bool detached,  ulong contextId)
		{
			PhysxPxProfileScopedPod* ret = PxProfileScopedNewAllocNative(callbackPod, eventName, detached ? (byte)1 : (byte)0, contextId);
			return ret;
		}

		public static PhysxPxProfileScopedPod* PxProfileScopedNewAlloc( PhysxPxProfilerCallbackPod* callbackPod,  ref byte eventName,  bool detached,  ulong contextId)
		{
			fixed (byte* peventName = &eventName)
			{
				PhysxPxProfileScopedPod* ret = PxProfileScopedNewAllocNative(callbackPod, (byte*)peventName, detached ? (byte)1 : (byte)0, contextId);
				return ret;
			}
		}

		public static PhysxPxProfileScopedPod* PxProfileScopedNewAlloc( PhysxPxProfilerCallbackPod* callbackPod,  string eventName,  bool detached,  ulong contextId)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (eventName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(eventName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(eventName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PhysxPxProfileScopedPod* ret = PxProfileScopedNewAllocNative(callbackPod, pStr0, detached ? (byte)1 : (byte)0, contextId);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxProfileScoped_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxProfileScopedDeleteNative(PhysxPxProfileScopedPod* selfPod);

		public static void PxProfileScopedDelete( PhysxPxProfileScopedPod* selfPod)
		{
			PxProfileScopedDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSListEntry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSListEntryPod PxSListEntryNewNative();

		public static PhysxPxSListEntryPod PxSListEntryNew()
		{
			PhysxPxSListEntryPod ret = PxSListEntryNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSListEntry_next_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSListEntryPod* PxSListEntryNextMutNative(PhysxPxSListEntryPod* selfPod);

		public static PhysxPxSListEntryPod* PxSListEntryNextMut( PhysxPxSListEntryPod* selfPod)
		{
			PhysxPxSListEntryPod* ret = PxSListEntryNextMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSListImpl_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSListImplPod* PxSListImplNewAllocNative();

		public static PhysxPxSListImplPod* PxSListImplNewAlloc()
		{
			PhysxPxSListImplPod* ret = PxSListImplNewAllocNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSListImpl_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSListImplDeleteNative(PhysxPxSListImplPod* selfPod);

		public static void PxSListImplDelete( PhysxPxSListImplPod* selfPod)
		{
			PxSListImplDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSListImpl_push_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSListImplPushMutNative(PhysxPxSListImplPod* selfPod, PhysxPxSListEntryPod* entryPod);

		public static void PxSListImplPushMut( PhysxPxSListImplPod* selfPod,  PhysxPxSListEntryPod* entryPod)
		{
			PxSListImplPushMutNative(selfPod, entryPod);
		}

		public static void PxSListImplPushMut( PhysxPxSListImplPod* selfPod,  ref PhysxPxSListEntryPod entryPod)
		{
			fixed (PhysxPxSListEntryPod* pentryPod = &entryPod)
			{
				PxSListImplPushMutNative(selfPod, (PhysxPxSListEntryPod*)pentryPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSListImpl_pop_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSListEntryPod* PxSListImplPopMutNative(PhysxPxSListImplPod* selfPod);

		public static PhysxPxSListEntryPod* PxSListImplPopMut( PhysxPxSListImplPod* selfPod)
		{
			PhysxPxSListEntryPod* ret = PxSListImplPopMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSListImpl_flush_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSListEntryPod* PxSListImplFlushMutNative(PhysxPxSListImplPod* selfPod);

		public static PhysxPxSListEntryPod* PxSListImplFlushMut( PhysxPxSListImplPod* selfPod)
		{
			PhysxPxSListEntryPod* ret = PxSListImplFlushMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSListImpl_getSize")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxSListImplGetSizeNative();

		public static uint PxSListImplGetSize()
		{
			uint ret = PxSListImplGetSizeNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSyncImpl_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSyncImplPod* PxSyncImplNewAllocNative();

		public static PhysxPxSyncImplPod* PxSyncImplNewAlloc()
		{
			PhysxPxSyncImplPod* ret = PxSyncImplNewAllocNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSyncImpl_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSyncImplDeleteNative(PhysxPxSyncImplPod* selfPod);

		public static void PxSyncImplDelete( PhysxPxSyncImplPod* selfPod)
		{
			PxSyncImplDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSyncImpl_wait_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxSyncImplWaitMutNative(PhysxPxSyncImplPod* selfPod, uint milliseconds);

		public static bool PxSyncImplWaitMut( PhysxPxSyncImplPod* selfPod,  uint milliseconds)
		{
			byte ret = PxSyncImplWaitMutNative(selfPod, milliseconds);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxSyncImpl_set_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSyncImplSetMutNative(PhysxPxSyncImplPod* selfPod);

		public static void PxSyncImplSetMut( PhysxPxSyncImplPod* selfPod)
		{
			PxSyncImplSetMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSyncImpl_reset_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSyncImplResetMutNative(PhysxPxSyncImplPod* selfPod);

		public static void PxSyncImplResetMut( PhysxPxSyncImplPod* selfPod)
		{
			PxSyncImplResetMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSyncImpl_getSize")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxSyncImplGetSizeNative();

		public static uint PxSyncImplGetSize()
		{
			uint ret = PxSyncImplGetSizeNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRunnable_new_alloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxRunnablePod* PxRunnableNewAllocNative();

		public static PhysxPxRunnablePod* PxRunnableNewAlloc()
		{
			PhysxPxRunnablePod* ret = PxRunnableNewAllocNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRunnable_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRunnableDeleteNative(PhysxPxRunnablePod* selfPod);

		public static void PxRunnableDelete( PhysxPxRunnablePod* selfPod)
		{
			PxRunnableDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxRunnable_execute_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRunnableExecuteMutNative(PhysxPxRunnablePod* selfPod);

		public static void PxRunnableExecuteMut( PhysxPxRunnablePod* selfPod)
		{
			PxRunnableExecuteMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxTlsAlloc")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxTlsAllocNative();

		public static uint PhysPxTlsAlloc()
		{
			uint ret = PhysPxTlsAllocNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxTlsFree")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PhysPxTlsFreeNative(uint index);

		public static void PhysPxTlsFree( uint index)
		{
			PhysPxTlsFreeNative(index);
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxTlsGet")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void* PhysPxTlsGetNative(uint index);

		public static void* PhysPxTlsGet( uint index)
		{
			void* ret = PhysPxTlsGetNative(index);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxTlsGetValue")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ulong PhysPxTlsGetValueNative(uint index);

		public static ulong PhysPxTlsGetValue( uint index)
		{
			ulong ret = PhysPxTlsGetValueNative(index);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxTlsSet")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxTlsSetNative(uint index, void* value);

		public static uint PhysPxTlsSet( uint index,  void* value)
		{
			uint ret = PhysPxTlsSetNative(index, value);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxTlsSetValue")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PhysPxTlsSetValueNative(uint index, ulong valuePod);

		public static uint PhysPxTlsSetValue( uint index,  ulong valuePod)
		{
			uint ret = PhysPxTlsSetValueNative(index, valuePod);
			return ret;
		}

		public static uint PhysPxTlsSetValue( uint index,  nuint valuePod)
		{
			uint ret = PhysPxTlsSetValueNative(index, valuePod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCounterFrequencyToTensOfNanos_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxCounterFrequencyToTensOfNanosPod PxCounterFrequencyToTensOfNanosNewNative(ulong inNum, ulong inDenom);

		public static PhysxPxCounterFrequencyToTensOfNanosPod PxCounterFrequencyToTensOfNanosNew( ulong inNum,  ulong inDenom)
		{
			PhysxPxCounterFrequencyToTensOfNanosPod ret = PxCounterFrequencyToTensOfNanosNewNative(inNum, inDenom);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCounterFrequencyToTensOfNanos_toTensOfNanos")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ulong PxCounterFrequencyToTensOfNanosToTensOfNanosNative(PhysxPxCounterFrequencyToTensOfNanosPod* selfPod, ulong inCounter);

		public static ulong PxCounterFrequencyToTensOfNanosToTensOfNanos( PhysxPxCounterFrequencyToTensOfNanosPod* selfPod,  ulong inCounter)
		{
			ulong ret = PxCounterFrequencyToTensOfNanosToTensOfNanosNative(selfPod, inCounter);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTime_getBootCounterFrequency")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxCounterFrequencyToTensOfNanosPod* PxTimeGetBootCounterFrequencyNative();

		public static PhysxPxCounterFrequencyToTensOfNanosPod* PxTimeGetBootCounterFrequency()
		{
			PhysxPxCounterFrequencyToTensOfNanosPod* ret = PxTimeGetBootCounterFrequencyNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTime_getCounterFrequency")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxCounterFrequencyToTensOfNanosPod PxTimeGetCounterFrequencyNative();

		public static PhysxPxCounterFrequencyToTensOfNanosPod PxTimeGetCounterFrequency()
		{
			PhysxPxCounterFrequencyToTensOfNanosPod ret = PxTimeGetCounterFrequencyNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTime_getCurrentCounterValue")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ulong PxTimeGetCurrentCounterValueNative();

		public static ulong PxTimeGetCurrentCounterValue()
		{
			ulong ret = PxTimeGetCurrentCounterValueNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTime_getCurrentTimeInTensOfNanoSeconds")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ulong PxTimeGetCurrentTimeInTensOfNanoSecondsNative();

		public static ulong PxTimeGetCurrentTimeInTensOfNanoSeconds()
		{
			ulong ret = PxTimeGetCurrentTimeInTensOfNanoSecondsNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTime_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTimePod PxTimeNewNative();

		public static PhysxPxTimePod PxTimeNew()
		{
			PhysxPxTimePod ret = PxTimeNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTime_getElapsedSeconds_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial double PxTimeGetElapsedSecondsMutNative(PhysxPxTimePod* selfPod);

		public static double PxTimeGetElapsedSecondsMut( PhysxPxTimePod* selfPod)
		{
			double ret = PxTimeGetElapsedSecondsMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTime_peekElapsedSeconds_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial double PxTimePeekElapsedSecondsMutNative(PhysxPxTimePod* selfPod);

		public static double PxTimePeekElapsedSecondsMut( PhysxPxTimePod* selfPod)
		{
			double ret = PxTimePeekElapsedSecondsMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTime_getLastTime")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial double PxTimeGetLastTimeNative(PhysxPxTimePod* selfPod);

		public static double PxTimeGetLastTime( PhysxPxTimePod* selfPod)
		{
			double ret = PxTimeGetLastTimeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec2Pod PxVec2NewNative();

		public static PhysxPxVec2Pod PxVec2New()
		{
			PhysxPxVec2Pod ret = PxVec2NewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec2Pod PxVec2New1Native(int anonparam0Pod);

		public static PhysxPxVec2Pod PxVec2New1( int anonparam0Pod)
		{
			PhysxPxVec2Pod ret = PxVec2New1Native(anonparam0Pod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_new_2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec2Pod PxVec2New2Native(float a);

		public static PhysxPxVec2Pod PxVec2New2( float a)
		{
			PhysxPxVec2Pod ret = PxVec2New2Native(a);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_new_3")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec2Pod PxVec2New3Native(float nx, float ny);

		public static PhysxPxVec2Pod PxVec2New3( float nx,  float ny)
		{
			PhysxPxVec2Pod ret = PxVec2New3Native(nx, ny);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_isZero")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxVec2IsZeroNative(PhysxPxVec2Pod* selfPod);

		public static bool PxVec2IsZero( PhysxPxVec2Pod* selfPod)
		{
			byte ret = PxVec2IsZeroNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_isFinite")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxVec2IsFiniteNative(PhysxPxVec2Pod* selfPod);

		public static bool PxVec2IsFinite( PhysxPxVec2Pod* selfPod)
		{
			byte ret = PxVec2IsFiniteNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_isNormalized")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxVec2IsNormalizedNative(PhysxPxVec2Pod* selfPod);

		public static bool PxVec2IsNormalized( PhysxPxVec2Pod* selfPod)
		{
			byte ret = PxVec2IsNormalizedNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_magnitudeSquared")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec2MagnitudeSquaredNative(PhysxPxVec2Pod* selfPod);

		public static float PxVec2MagnitudeSquared( PhysxPxVec2Pod* selfPod)
		{
			float ret = PxVec2MagnitudeSquaredNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_magnitude")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec2MagnitudeNative(PhysxPxVec2Pod* selfPod);

		public static float PxVec2Magnitude( PhysxPxVec2Pod* selfPod)
		{
			float ret = PxVec2MagnitudeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_dot")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec2DotNative(PhysxPxVec2Pod* selfPod, PhysxPxVec2Pod* vPod);

		public static float PxVec2Dot( PhysxPxVec2Pod* selfPod,  PhysxPxVec2Pod* vPod)
		{
			float ret = PxVec2DotNative(selfPod, vPod);
			return ret;
		}

		public static float PxVec2Dot( PhysxPxVec2Pod* selfPod,  ref PhysxPxVec2Pod vPod)
		{
			fixed (PhysxPxVec2Pod* pvPod = &vPod)
			{
				float ret = PxVec2DotNative(selfPod, (PhysxPxVec2Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_getNormalized")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec2Pod PxVec2GetNormalizedNative(PhysxPxVec2Pod* selfPod);

		public static PhysxPxVec2Pod PxVec2GetNormalized( PhysxPxVec2Pod* selfPod)
		{
			PhysxPxVec2Pod ret = PxVec2GetNormalizedNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_normalize_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec2NormalizeMutNative(PhysxPxVec2Pod* selfPod);

		public static float PxVec2NormalizeMut( PhysxPxVec2Pod* selfPod)
		{
			float ret = PxVec2NormalizeMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_multiply")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec2Pod PxVec2MultiplyNative(PhysxPxVec2Pod* selfPod, PhysxPxVec2Pod* aPod);

		public static PhysxPxVec2Pod PxVec2Multiply( PhysxPxVec2Pod* selfPod,  PhysxPxVec2Pod* aPod)
		{
			PhysxPxVec2Pod ret = PxVec2MultiplyNative(selfPod, aPod);
			return ret;
		}

		public static PhysxPxVec2Pod PxVec2Multiply( PhysxPxVec2Pod* selfPod,  ref PhysxPxVec2Pod aPod)
		{
			fixed (PhysxPxVec2Pod* paPod = &aPod)
			{
				PhysxPxVec2Pod ret = PxVec2MultiplyNative(selfPod, (PhysxPxVec2Pod*)paPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_minimum")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec2Pod PxVec2MinimumNative(PhysxPxVec2Pod* selfPod, PhysxPxVec2Pod* vPod);

		public static PhysxPxVec2Pod PxVec2Minimum( PhysxPxVec2Pod* selfPod,  PhysxPxVec2Pod* vPod)
		{
			PhysxPxVec2Pod ret = PxVec2MinimumNative(selfPod, vPod);
			return ret;
		}

		public static PhysxPxVec2Pod PxVec2Minimum( PhysxPxVec2Pod* selfPod,  ref PhysxPxVec2Pod vPod)
		{
			fixed (PhysxPxVec2Pod* pvPod = &vPod)
			{
				PhysxPxVec2Pod ret = PxVec2MinimumNative(selfPod, (PhysxPxVec2Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_minElement")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec2MinElementNative(PhysxPxVec2Pod* selfPod);

		public static float PxVec2MinElement( PhysxPxVec2Pod* selfPod)
		{
			float ret = PxVec2MinElementNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_maximum")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec2Pod PxVec2MaximumNative(PhysxPxVec2Pod* selfPod, PhysxPxVec2Pod* vPod);

		public static PhysxPxVec2Pod PxVec2Maximum( PhysxPxVec2Pod* selfPod,  PhysxPxVec2Pod* vPod)
		{
			PhysxPxVec2Pod ret = PxVec2MaximumNative(selfPod, vPod);
			return ret;
		}

		public static PhysxPxVec2Pod PxVec2Maximum( PhysxPxVec2Pod* selfPod,  ref PhysxPxVec2Pod vPod)
		{
			fixed (PhysxPxVec2Pod* pvPod = &vPod)
			{
				PhysxPxVec2Pod ret = PxVec2MaximumNative(selfPod, (PhysxPxVec2Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxVec2_maxElement")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float PxVec2MaxElementNative(PhysxPxVec2Pod* selfPod);

		public static float PxVec2MaxElement( PhysxPxVec2Pod* selfPod)
		{
			float ret = PxVec2MaxElementNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxStridedData_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxStridedDataPod PxStridedDataNewNative();

		public static PhysxPxStridedDataPod PxStridedDataNew()
		{
			PhysxPxStridedDataPod ret = PxStridedDataNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBoundedData_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBoundedDataPod PxBoundedDataNewNative();

		public static PhysxPxBoundedDataPod PxBoundedDataNew()
		{
			PhysxPxBoundedDataPod ret = PxBoundedDataNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxDebugPoint_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxDebugPointPod PxDebugPointNewNative(PhysxPxVec3Pod* pPod, uint* cPod);

		public static PhysxPxDebugPointPod PxDebugPointNew( PhysxPxVec3Pod* pPod,  uint* cPod)
		{
			PhysxPxDebugPointPod ret = PxDebugPointNewNative(pPod, cPod);
			return ret;
		}

		public static PhysxPxDebugPointPod PxDebugPointNew( PhysxPxVec3Pod* pPod,  ref uint cPod)
		{
			fixed (uint* pcPod = &cPod)
			{
				PhysxPxDebugPointPod ret = PxDebugPointNewNative(pPod, (uint*)pcPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxDebugLine_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxDebugLinePod PxDebugLineNewNative(PhysxPxVec3Pod* p0Pod, PhysxPxVec3Pod* p1Pod, uint* cPod);

		public static PhysxPxDebugLinePod PxDebugLineNew( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  uint* cPod)
		{
			PhysxPxDebugLinePod ret = PxDebugLineNewNative(p0Pod, p1Pod, cPod);
			return ret;
		}

		public static PhysxPxDebugLinePod PxDebugLineNew( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  uint* cPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				PhysxPxDebugLinePod ret = PxDebugLineNewNative(p0Pod, (PhysxPxVec3Pod*)pp1Pod, cPod);
				return ret;
			}
		}

		public static PhysxPxDebugLinePod PxDebugLineNew( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref uint cPod)
		{
			fixed (uint* pcPod = &cPod)
			{
				PhysxPxDebugLinePod ret = PxDebugLineNewNative(p0Pod, p1Pod, (uint*)pcPod);
				return ret;
			}
		}

		public static PhysxPxDebugLinePod PxDebugLineNew( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref uint cPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (uint* pcPod = &cPod)
				{
					PhysxPxDebugLinePod ret = PxDebugLineNewNative(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (uint*)pcPod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxDebugTriangle_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxDebugTrianglePod PxDebugTriangleNewNative(PhysxPxVec3Pod* p0Pod, PhysxPxVec3Pod* p1Pod, PhysxPxVec3Pod* p2Pod, uint* cPod);

		public static PhysxPxDebugTrianglePod PxDebugTriangleNew( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  PhysxPxVec3Pod* p2Pod,  uint* cPod)
		{
			PhysxPxDebugTrianglePod ret = PxDebugTriangleNewNative(p0Pod, p1Pod, p2Pod, cPod);
			return ret;
		}

		public static PhysxPxDebugTrianglePod PxDebugTriangleNew( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  PhysxPxVec3Pod* p2Pod,  uint* cPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				PhysxPxDebugTrianglePod ret = PxDebugTriangleNewNative(p0Pod, (PhysxPxVec3Pod*)pp1Pod, p2Pod, cPod);
				return ret;
			}
		}

		public static PhysxPxDebugTrianglePod PxDebugTriangleNew( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref PhysxPxVec3Pod p2Pod,  uint* cPod)
		{
			fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
			{
				PhysxPxDebugTrianglePod ret = PxDebugTriangleNewNative(p0Pod, p1Pod, (PhysxPxVec3Pod*)pp2Pod, cPod);
				return ret;
			}
		}

		public static PhysxPxDebugTrianglePod PxDebugTriangleNew( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref PhysxPxVec3Pod p2Pod,  uint* cPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
				{
					PhysxPxDebugTrianglePod ret = PxDebugTriangleNewNative(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (PhysxPxVec3Pod*)pp2Pod, cPod);
					return ret;
				}
			}
		}

		public static PhysxPxDebugTrianglePod PxDebugTriangleNew( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  PhysxPxVec3Pod* p2Pod,  ref uint cPod)
		{
			fixed (uint* pcPod = &cPod)
			{
				PhysxPxDebugTrianglePod ret = PxDebugTriangleNewNative(p0Pod, p1Pod, p2Pod, (uint*)pcPod);
				return ret;
			}
		}

		public static PhysxPxDebugTrianglePod PxDebugTriangleNew( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  PhysxPxVec3Pod* p2Pod,  ref uint cPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (uint* pcPod = &cPod)
				{
					PhysxPxDebugTrianglePod ret = PxDebugTriangleNewNative(p0Pod, (PhysxPxVec3Pod*)pp1Pod, p2Pod, (uint*)pcPod);
					return ret;
				}
			}
		}

		public static PhysxPxDebugTrianglePod PxDebugTriangleNew( PhysxPxVec3Pod* p0Pod,  PhysxPxVec3Pod* p1Pod,  ref PhysxPxVec3Pod p2Pod,  ref uint cPod)
		{
			fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
			{
				fixed (uint* pcPod = &cPod)
				{
					PhysxPxDebugTrianglePod ret = PxDebugTriangleNewNative(p0Pod, p1Pod, (PhysxPxVec3Pod*)pp2Pod, (uint*)pcPod);
					return ret;
				}
			}
		}

		public static PhysxPxDebugTrianglePod PxDebugTriangleNew( PhysxPxVec3Pod* p0Pod,  ref PhysxPxVec3Pod p1Pod,  ref PhysxPxVec3Pod p2Pod,  ref uint cPod)
		{
			fixed (PhysxPxVec3Pod* pp1Pod = &p1Pod)
			{
				fixed (PhysxPxVec3Pod* pp2Pod = &p2Pod)
				{
					fixed (uint* pcPod = &cPod)
					{
						PhysxPxDebugTrianglePod ret = PxDebugTriangleNewNative(p0Pod, (PhysxPxVec3Pod*)pp1Pod, (PhysxPxVec3Pod*)pp2Pod, (uint*)pcPod);
						return ret;
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxDebugText_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxDebugTextPod PxDebugTextNewNative();

		public static PhysxPxDebugTextPod PxDebugTextNew()
		{
			PhysxPxDebugTextPod ret = PxDebugTextNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxDebugText_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxDebugTextPod PxDebugTextNew1Native(PhysxPxVec3Pod* posPod, float* szPod, uint* clrPod, byte* str);

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  float* szPod,  uint* clrPod,  byte* str)
		{
			PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, szPod, clrPod, str);
			return ret;
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  ref float szPod,  uint* clrPod,  byte* str)
		{
			fixed (float* pszPod = &szPod)
			{
				PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, (float*)pszPod, clrPod, str);
				return ret;
			}
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  float* szPod,  ref uint clrPod,  byte* str)
		{
			fixed (uint* pclrPod = &clrPod)
			{
				PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, szPod, (uint*)pclrPod, str);
				return ret;
			}
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  ref float szPod,  ref uint clrPod,  byte* str)
		{
			fixed (float* pszPod = &szPod)
			{
				fixed (uint* pclrPod = &clrPod)
				{
					PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, (float*)pszPod, (uint*)pclrPod, str);
					return ret;
				}
			}
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  float* szPod,  uint* clrPod,  ref byte str)
		{
			fixed (byte* pstr = &str)
			{
				PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, szPod, clrPod, (byte*)pstr);
				return ret;
			}
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  float* szPod,  uint* clrPod,  string str)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (str != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(str);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(str, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, szPod, clrPod, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  ref float szPod,  uint* clrPod,  ref byte str)
		{
			fixed (float* pszPod = &szPod)
			{
				fixed (byte* pstr = &str)
				{
					PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, (float*)pszPod, clrPod, (byte*)pstr);
					return ret;
				}
			}
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  ref float szPod,  uint* clrPod,  string str)
		{
			fixed (float* pszPod = &szPod)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (str != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(str);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(str, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, (float*)pszPod, clrPod, pStr0);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  float* szPod,  ref uint clrPod,  ref byte str)
		{
			fixed (uint* pclrPod = &clrPod)
			{
				fixed (byte* pstr = &str)
				{
					PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, szPod, (uint*)pclrPod, (byte*)pstr);
					return ret;
				}
			}
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  float* szPod,  ref uint clrPod,  string str)
		{
			fixed (uint* pclrPod = &clrPod)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (str != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(str);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(str, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, szPod, (uint*)pclrPod, pStr0);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  ref float szPod,  ref uint clrPod,  ref byte str)
		{
			fixed (float* pszPod = &szPod)
			{
				fixed (uint* pclrPod = &clrPod)
				{
					fixed (byte* pstr = &str)
					{
						PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, (float*)pszPod, (uint*)pclrPod, (byte*)pstr);
						return ret;
					}
				}
			}
		}

		public static PhysxPxDebugTextPod PxDebugTextNew1( PhysxPxVec3Pod* posPod,  ref float szPod,  ref uint clrPod,  string str)
		{
			fixed (float* pszPod = &szPod)
			{
				fixed (uint* pclrPod = &clrPod)
				{
					byte* pStr0 = null;
					int pStrSize0 = 0;
					if (str != null)
					{
						pStrSize0 = Utils.GetByteCountUTF8(str);
						if (pStrSize0 >= Utils.MaxStackallocSize)
						{
							pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
						}
						else
						{
							byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
							pStr0 = pStrStack0;
						}
						int pStrOffset0 = Utils.EncodeStringUTF8(str, pStr0, pStrSize0);
						pStr0[pStrOffset0] = 0;
					}
					PhysxPxDebugTextPod ret = PxDebugTextNew1Native(posPod, (float*)pszPod, (uint*)pclrPod, pStr0);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						Utils.Free(pStr0);
					}
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRenderBufferDeleteNative(PhysxPxRenderBufferPod* selfPod);

		public static void PxRenderBufferDelete( PhysxPxRenderBufferPod* selfPod)
		{
			PxRenderBufferDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_getNbPoints")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxRenderBufferGetNbPointsNative(PhysxPxRenderBufferPod* selfPod);

		public static uint PxRenderBufferGetNbPoints( PhysxPxRenderBufferPod* selfPod)
		{
			uint ret = PxRenderBufferGetNbPointsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_getPoints")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxDebugPointPod* PxRenderBufferGetPointsNative(PhysxPxRenderBufferPod* selfPod);

		public static PhysxPxDebugPointPod* PxRenderBufferGetPoints( PhysxPxRenderBufferPod* selfPod)
		{
			PhysxPxDebugPointPod* ret = PxRenderBufferGetPointsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_addPoint_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRenderBufferAddPointMutNative(PhysxPxRenderBufferPod* selfPod, PhysxPxDebugPointPod* pointPod);

		public static void PxRenderBufferAddPointMut( PhysxPxRenderBufferPod* selfPod,  PhysxPxDebugPointPod* pointPod)
		{
			PxRenderBufferAddPointMutNative(selfPod, pointPod);
		}

		public static void PxRenderBufferAddPointMut( PhysxPxRenderBufferPod* selfPod,  ref PhysxPxDebugPointPod pointPod)
		{
			fixed (PhysxPxDebugPointPod* ppointPod = &pointPod)
			{
				PxRenderBufferAddPointMutNative(selfPod, (PhysxPxDebugPointPod*)ppointPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_getNbLines")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxRenderBufferGetNbLinesNative(PhysxPxRenderBufferPod* selfPod);

		public static uint PxRenderBufferGetNbLines( PhysxPxRenderBufferPod* selfPod)
		{
			uint ret = PxRenderBufferGetNbLinesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_getLines")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxDebugLinePod* PxRenderBufferGetLinesNative(PhysxPxRenderBufferPod* selfPod);

		public static PhysxPxDebugLinePod* PxRenderBufferGetLines( PhysxPxRenderBufferPod* selfPod)
		{
			PhysxPxDebugLinePod* ret = PxRenderBufferGetLinesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_addLine_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRenderBufferAddLineMutNative(PhysxPxRenderBufferPod* selfPod, PhysxPxDebugLinePod* linePod);

		public static void PxRenderBufferAddLineMut( PhysxPxRenderBufferPod* selfPod,  PhysxPxDebugLinePod* linePod)
		{
			PxRenderBufferAddLineMutNative(selfPod, linePod);
		}

		public static void PxRenderBufferAddLineMut( PhysxPxRenderBufferPod* selfPod,  ref PhysxPxDebugLinePod linePod)
		{
			fixed (PhysxPxDebugLinePod* plinePod = &linePod)
			{
				PxRenderBufferAddLineMutNative(selfPod, (PhysxPxDebugLinePod*)plinePod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_reserveLines_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxDebugLinePod* PxRenderBufferReserveLinesMutNative(PhysxPxRenderBufferPod* selfPod, uint nbLines);

		public static PhysxPxDebugLinePod* PxRenderBufferReserveLinesMut( PhysxPxRenderBufferPod* selfPod,  uint nbLines)
		{
			PhysxPxDebugLinePod* ret = PxRenderBufferReserveLinesMutNative(selfPod, nbLines);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_reservePoints_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxDebugPointPod* PxRenderBufferReservePointsMutNative(PhysxPxRenderBufferPod* selfPod, uint nbLines);

		public static PhysxPxDebugPointPod* PxRenderBufferReservePointsMut( PhysxPxRenderBufferPod* selfPod,  uint nbLines)
		{
			PhysxPxDebugPointPod* ret = PxRenderBufferReservePointsMutNative(selfPod, nbLines);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_getNbTriangles")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxRenderBufferGetNbTrianglesNative(PhysxPxRenderBufferPod* selfPod);

		public static uint PxRenderBufferGetNbTriangles( PhysxPxRenderBufferPod* selfPod)
		{
			uint ret = PxRenderBufferGetNbTrianglesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_getTriangles")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxDebugTrianglePod* PxRenderBufferGetTrianglesNative(PhysxPxRenderBufferPod* selfPod);

		public static PhysxPxDebugTrianglePod* PxRenderBufferGetTriangles( PhysxPxRenderBufferPod* selfPod)
		{
			PhysxPxDebugTrianglePod* ret = PxRenderBufferGetTrianglesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_addTriangle_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRenderBufferAddTriangleMutNative(PhysxPxRenderBufferPod* selfPod, PhysxPxDebugTrianglePod* trianglePod);

		public static void PxRenderBufferAddTriangleMut( PhysxPxRenderBufferPod* selfPod,  PhysxPxDebugTrianglePod* trianglePod)
		{
			PxRenderBufferAddTriangleMutNative(selfPod, trianglePod);
		}

		public static void PxRenderBufferAddTriangleMut( PhysxPxRenderBufferPod* selfPod,  ref PhysxPxDebugTrianglePod trianglePod)
		{
			fixed (PhysxPxDebugTrianglePod* ptrianglePod = &trianglePod)
			{
				PxRenderBufferAddTriangleMutNative(selfPod, (PhysxPxDebugTrianglePod*)ptrianglePod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_append_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRenderBufferAppendMutNative(PhysxPxRenderBufferPod* selfPod, PhysxPxRenderBufferPod* otherPod);

		public static void PxRenderBufferAppendMut( PhysxPxRenderBufferPod* selfPod,  PhysxPxRenderBufferPod* otherPod)
		{
			PxRenderBufferAppendMutNative(selfPod, otherPod);
		}

		public static void PxRenderBufferAppendMut( PhysxPxRenderBufferPod* selfPod,  ref PhysxPxRenderBufferPod otherPod)
		{
			fixed (PhysxPxRenderBufferPod* potherPod = &otherPod)
			{
				PxRenderBufferAppendMutNative(selfPod, (PhysxPxRenderBufferPod*)potherPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_clear_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRenderBufferClearMutNative(PhysxPxRenderBufferPod* selfPod);

		public static void PxRenderBufferClearMut( PhysxPxRenderBufferPod* selfPod)
		{
			PxRenderBufferClearMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_shift_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRenderBufferShiftMutNative(PhysxPxRenderBufferPod* selfPod, PhysxPxVec3Pod* deltaPod);

		public static void PxRenderBufferShiftMut( PhysxPxRenderBufferPod* selfPod,  PhysxPxVec3Pod* deltaPod)
		{
			PxRenderBufferShiftMutNative(selfPod, deltaPod);
		}

		public static void PxRenderBufferShiftMut( PhysxPxRenderBufferPod* selfPod,  ref PhysxPxVec3Pod deltaPod)
		{
			fixed (PhysxPxVec3Pod* pdeltaPod = &deltaPod)
			{
				PxRenderBufferShiftMutNative(selfPod, (PhysxPxVec3Pod*)pdeltaPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxRenderBuffer_empty")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxRenderBufferEmptyNative(PhysxPxRenderBufferPod* selfPod);

		public static bool PxRenderBufferEmpty( PhysxPxRenderBufferPod* selfPod)
		{
			byte ret = PxRenderBufferEmptyNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxProcessPxBaseCallback_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxProcessPxBaseCallbackDeleteNative(PhysxPxProcessPxBaseCallbackPod* selfPod);

		public static void PxProcessPxBaseCallbackDelete( PhysxPxProcessPxBaseCallbackPod* selfPod)
		{
			PxProcessPxBaseCallbackDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxProcessPxBaseCallback_process_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxProcessPxBaseCallbackProcessMutNative(PhysxPxProcessPxBaseCallbackPod* selfPod, PhysxPxBasePod* anonparam0Pod);

		public static void PxProcessPxBaseCallbackProcessMut( PhysxPxProcessPxBaseCallbackPod* selfPod,  PhysxPxBasePod* anonparam0Pod)
		{
			PxProcessPxBaseCallbackProcessMutNative(selfPod, anonparam0Pod);
		}

		public static void PxProcessPxBaseCallbackProcessMut( PhysxPxProcessPxBaseCallbackPod* selfPod,  ref PhysxPxBasePod anonparam0Pod)
		{
			fixed (PhysxPxBasePod* panonparam0Pod = &anonparam0Pod)
			{
				PxProcessPxBaseCallbackProcessMutNative(selfPod, (PhysxPxBasePod*)panonparam0Pod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationContext_registerReference_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializationContextRegisterReferenceMutNative(PhysxPxSerializationContextPod* selfPod, PhysxPxBasePod* basePod, uint kind, ulong referencePod);

		public static void PxSerializationContextRegisterReferenceMut( PhysxPxSerializationContextPod* selfPod,  PhysxPxBasePod* basePod,  uint kind,  ulong referencePod)
		{
			PxSerializationContextRegisterReferenceMutNative(selfPod, basePod, kind, referencePod);
		}

		public static void PxSerializationContextRegisterReferenceMut( PhysxPxSerializationContextPod* selfPod,  ref PhysxPxBasePod basePod,  uint kind,  ulong referencePod)
		{
			fixed (PhysxPxBasePod* pbasePod = &basePod)
			{
				PxSerializationContextRegisterReferenceMutNative(selfPod, (PhysxPxBasePod*)pbasePod, kind, referencePod);
			}
		}

		public static void PxSerializationContextRegisterReferenceMut( PhysxPxSerializationContextPod* selfPod,  PhysxPxBasePod* basePod,  uint kind,  nuint referencePod)
		{
			PxSerializationContextRegisterReferenceMutNative(selfPod, basePod, kind, referencePod);
		}

		public static void PxSerializationContextRegisterReferenceMut( PhysxPxSerializationContextPod* selfPod,  ref PhysxPxBasePod basePod,  uint kind,  nuint referencePod)
		{
			fixed (PhysxPxBasePod* pbasePod = &basePod)
			{
				PxSerializationContextRegisterReferenceMutNative(selfPod, (PhysxPxBasePod*)pbasePod, kind, referencePod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationContext_getCollection")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxCollectionPod* PxSerializationContextGetCollectionNative(PhysxPxSerializationContextPod* selfPod);

		public static PhysxPxCollectionPod* PxSerializationContextGetCollection( PhysxPxSerializationContextPod* selfPod)
		{
			PhysxPxCollectionPod* ret = PxSerializationContextGetCollectionNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationContext_writeData_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializationContextWriteDataMutNative(PhysxPxSerializationContextPod* selfPod, void* data, uint size);

		public static void PxSerializationContextWriteDataMut( PhysxPxSerializationContextPod* selfPod,  void* data,  uint size)
		{
			PxSerializationContextWriteDataMutNative(selfPod, data, size);
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationContext_alignData_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializationContextAlignDataMutNative(PhysxPxSerializationContextPod* selfPod, uint alignment);

		public static void PxSerializationContextAlignDataMut( PhysxPxSerializationContextPod* selfPod,  uint alignment)
		{
			PxSerializationContextAlignDataMutNative(selfPod, alignment);
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationContext_writeName_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializationContextWriteNameMutNative(PhysxPxSerializationContextPod* selfPod, byte* name);

		public static void PxSerializationContextWriteNameMut( PhysxPxSerializationContextPod* selfPod,  byte* name)
		{
			PxSerializationContextWriteNameMutNative(selfPod, name);
		}

		public static void PxSerializationContextWriteNameMut( PhysxPxSerializationContextPod* selfPod,  ref byte name)
		{
			fixed (byte* pname = &name)
			{
				PxSerializationContextWriteNameMutNative(selfPod, (byte*)pname);
			}
		}

		public static void PxSerializationContextWriteNameMut( PhysxPxSerializationContextPod* selfPod,  string name)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PxSerializationContextWriteNameMutNative(selfPod, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxDeserializationContext_resolveReference")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBasePod* PxDeserializationContextResolveReferenceNative(PhysxPxDeserializationContextPod* selfPod, uint kind, ulong referencePod);

		public static PhysxPxBasePod* PxDeserializationContextResolveReference( PhysxPxDeserializationContextPod* selfPod,  uint kind,  ulong referencePod)
		{
			PhysxPxBasePod* ret = PxDeserializationContextResolveReferenceNative(selfPod, kind, referencePod);
			return ret;
		}

		public static PhysxPxBasePod* PxDeserializationContextResolveReference( PhysxPxDeserializationContextPod* selfPod,  uint kind,  nuint referencePod)
		{
			PhysxPxBasePod* ret = PxDeserializationContextResolveReferenceNative(selfPod, kind, referencePod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxDeserializationContext_readName_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxDeserializationContextReadNameMutNative(PhysxPxDeserializationContextPod* selfPod, byte** namePod);

		public static void PxDeserializationContextReadNameMut( PhysxPxDeserializationContextPod* selfPod,  byte** namePod)
		{
			PxDeserializationContextReadNameMutNative(selfPod, namePod);
		}

		public static void PxDeserializationContextReadNameMut( PhysxPxDeserializationContextPod* selfPod,  ref byte* namePod)
		{
			fixed (byte** pnamePod = &namePod)
			{
				PxDeserializationContextReadNameMutNative(selfPod, (byte**)pnamePod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxDeserializationContext_alignExtraData_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxDeserializationContextAlignExtraDataMutNative(PhysxPxDeserializationContextPod* selfPod, uint alignment);

		public static void PxDeserializationContextAlignExtraDataMut( PhysxPxDeserializationContextPod* selfPod,  uint alignment)
		{
			PxDeserializationContextAlignExtraDataMutNative(selfPod, alignment);
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationRegistry_registerSerializer_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializationRegistryRegisterSerializerMutNative(PhysxPxSerializationRegistryPod* selfPod, ushort type, PhysxPxSerializerPod* serializerPod);

		public static void PxSerializationRegistryRegisterSerializerMut( PhysxPxSerializationRegistryPod* selfPod,  ushort type,  PhysxPxSerializerPod* serializerPod)
		{
			PxSerializationRegistryRegisterSerializerMutNative(selfPod, type, serializerPod);
		}

		public static void PxSerializationRegistryRegisterSerializerMut( PhysxPxSerializationRegistryPod* selfPod,  ushort type,  ref PhysxPxSerializerPod serializerPod)
		{
			fixed (PhysxPxSerializerPod* pserializerPod = &serializerPod)
			{
				PxSerializationRegistryRegisterSerializerMutNative(selfPod, type, (PhysxPxSerializerPod*)pserializerPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationRegistry_unregisterSerializer_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSerializerPod* PxSerializationRegistryUnregisterSerializerMutNative(PhysxPxSerializationRegistryPod* selfPod, ushort type);

		public static PhysxPxSerializerPod* PxSerializationRegistryUnregisterSerializerMut( PhysxPxSerializationRegistryPod* selfPod,  ushort type)
		{
			PhysxPxSerializerPod* ret = PxSerializationRegistryUnregisterSerializerMutNative(selfPod, type);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationRegistry_getSerializer")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSerializerPod* PxSerializationRegistryGetSerializerNative(PhysxPxSerializationRegistryPod* selfPod, ushort type);

		public static PhysxPxSerializerPod* PxSerializationRegistryGetSerializer( PhysxPxSerializationRegistryPod* selfPod,  ushort type)
		{
			PhysxPxSerializerPod* ret = PxSerializationRegistryGetSerializerNative(selfPod, type);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationRegistry_registerRepXSerializer_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializationRegistryRegisterRepXSerializerMutNative(PhysxPxSerializationRegistryPod* selfPod, ushort type, PhysxPxRepXSerializerPod* serializerPod);

		public static void PxSerializationRegistryRegisterRepXSerializerMut( PhysxPxSerializationRegistryPod* selfPod,  ushort type,  PhysxPxRepXSerializerPod* serializerPod)
		{
			PxSerializationRegistryRegisterRepXSerializerMutNative(selfPod, type, serializerPod);
		}

		public static void PxSerializationRegistryRegisterRepXSerializerMut( PhysxPxSerializationRegistryPod* selfPod,  ushort type,  ref PhysxPxRepXSerializerPod serializerPod)
		{
			fixed (PhysxPxRepXSerializerPod* pserializerPod = &serializerPod)
			{
				PxSerializationRegistryRegisterRepXSerializerMutNative(selfPod, type, (PhysxPxRepXSerializerPod*)pserializerPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationRegistry_unregisterRepXSerializer_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxRepXSerializerPod* PxSerializationRegistryUnregisterRepXSerializerMutNative(PhysxPxSerializationRegistryPod* selfPod, ushort type);

		public static PhysxPxRepXSerializerPod* PxSerializationRegistryUnregisterRepXSerializerMut( PhysxPxSerializationRegistryPod* selfPod,  ushort type)
		{
			PhysxPxRepXSerializerPod* ret = PxSerializationRegistryUnregisterRepXSerializerMutNative(selfPod, type);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationRegistry_getRepXSerializer")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxRepXSerializerPod* PxSerializationRegistryGetRepXSerializerNative(PhysxPxSerializationRegistryPod* selfPod, byte* typeName);

		public static PhysxPxRepXSerializerPod* PxSerializationRegistryGetRepXSerializer( PhysxPxSerializationRegistryPod* selfPod,  byte* typeName)
		{
			PhysxPxRepXSerializerPod* ret = PxSerializationRegistryGetRepXSerializerNative(selfPod, typeName);
			return ret;
		}

		public static PhysxPxRepXSerializerPod* PxSerializationRegistryGetRepXSerializer( PhysxPxSerializationRegistryPod* selfPod,  ref byte typeName)
		{
			fixed (byte* ptypeName = &typeName)
			{
				PhysxPxRepXSerializerPod* ret = PxSerializationRegistryGetRepXSerializerNative(selfPod, (byte*)ptypeName);
				return ret;
			}
		}

		public static PhysxPxRepXSerializerPod* PxSerializationRegistryGetRepXSerializer( PhysxPxSerializationRegistryPod* selfPod,  string typeName)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (typeName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(typeName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(typeName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			PhysxPxRepXSerializerPod* ret = PxSerializationRegistryGetRepXSerializerNative(selfPod, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializationRegistry_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializationRegistryReleaseMutNative(PhysxPxSerializationRegistryPod* selfPod);

		public static void PxSerializationRegistryReleaseMut( PhysxPxSerializationRegistryPod* selfPod)
		{
			PxSerializationRegistryReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_add_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCollectionAddMutNative(PhysxPxCollectionPod* selfPod, PhysxPxBasePod* objectPod, ulong id);

		public static void PxCollectionAddMut( PhysxPxCollectionPod* selfPod,  PhysxPxBasePod* objectPod,  ulong id)
		{
			PxCollectionAddMutNative(selfPod, objectPod, id);
		}

		public static void PxCollectionAddMut( PhysxPxCollectionPod* selfPod,  ref PhysxPxBasePod objectPod,  ulong id)
		{
			fixed (PhysxPxBasePod* pobjectPod = &objectPod)
			{
				PxCollectionAddMutNative(selfPod, (PhysxPxBasePod*)pobjectPod, id);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_remove_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCollectionRemoveMutNative(PhysxPxCollectionPod* selfPod, PhysxPxBasePod* objectPod);

		public static void PxCollectionRemoveMut( PhysxPxCollectionPod* selfPod,  PhysxPxBasePod* objectPod)
		{
			PxCollectionRemoveMutNative(selfPod, objectPod);
		}

		public static void PxCollectionRemoveMut( PhysxPxCollectionPod* selfPod,  ref PhysxPxBasePod objectPod)
		{
			fixed (PhysxPxBasePod* pobjectPod = &objectPod)
			{
				PxCollectionRemoveMutNative(selfPod, (PhysxPxBasePod*)pobjectPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_contains")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxCollectionContainsNative(PhysxPxCollectionPod* selfPod, PhysxPxBasePod* objectPod);

		public static bool PxCollectionContains( PhysxPxCollectionPod* selfPod,  PhysxPxBasePod* objectPod)
		{
			byte ret = PxCollectionContainsNative(selfPod, objectPod);
			return ret != 0;
		}

		public static bool PxCollectionContains( PhysxPxCollectionPod* selfPod,  ref PhysxPxBasePod objectPod)
		{
			fixed (PhysxPxBasePod* pobjectPod = &objectPod)
			{
				byte ret = PxCollectionContainsNative(selfPod, (PhysxPxBasePod*)pobjectPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_addId_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCollectionAddIdMutNative(PhysxPxCollectionPod* selfPod, PhysxPxBasePod* objectPod, ulong id);

		public static void PxCollectionAddIdMut( PhysxPxCollectionPod* selfPod,  PhysxPxBasePod* objectPod,  ulong id)
		{
			PxCollectionAddIdMutNative(selfPod, objectPod, id);
		}

		public static void PxCollectionAddIdMut( PhysxPxCollectionPod* selfPod,  ref PhysxPxBasePod objectPod,  ulong id)
		{
			fixed (PhysxPxBasePod* pobjectPod = &objectPod)
			{
				PxCollectionAddIdMutNative(selfPod, (PhysxPxBasePod*)pobjectPod, id);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_removeId_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCollectionRemoveIdMutNative(PhysxPxCollectionPod* selfPod, ulong id);

		public static void PxCollectionRemoveIdMut( PhysxPxCollectionPod* selfPod,  ulong id)
		{
			PxCollectionRemoveIdMutNative(selfPod, id);
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_add_mut_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCollectionAddMut1Native(PhysxPxCollectionPod* selfPod, PhysxPxCollectionPod* collectionPod);

		public static void PxCollectionAddMut1( PhysxPxCollectionPod* selfPod,  PhysxPxCollectionPod* collectionPod)
		{
			PxCollectionAddMut1Native(selfPod, collectionPod);
		}

		public static void PxCollectionAddMut1( PhysxPxCollectionPod* selfPod,  ref PhysxPxCollectionPod collectionPod)
		{
			fixed (PhysxPxCollectionPod* pcollectionPod = &collectionPod)
			{
				PxCollectionAddMut1Native(selfPod, (PhysxPxCollectionPod*)pcollectionPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_remove_mut_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCollectionRemoveMut1Native(PhysxPxCollectionPod* selfPod, PhysxPxCollectionPod* collectionPod);

		public static void PxCollectionRemoveMut1( PhysxPxCollectionPod* selfPod,  PhysxPxCollectionPod* collectionPod)
		{
			PxCollectionRemoveMut1Native(selfPod, collectionPod);
		}

		public static void PxCollectionRemoveMut1( PhysxPxCollectionPod* selfPod,  ref PhysxPxCollectionPod collectionPod)
		{
			fixed (PhysxPxCollectionPod* pcollectionPod = &collectionPod)
			{
				PxCollectionRemoveMut1Native(selfPod, (PhysxPxCollectionPod*)pcollectionPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_getNbObjects")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxCollectionGetNbObjectsNative(PhysxPxCollectionPod* selfPod);

		public static uint PxCollectionGetNbObjects( PhysxPxCollectionPod* selfPod)
		{
			uint ret = PxCollectionGetNbObjectsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_getObject")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBasePod* PxCollectionGetObjectNative(PhysxPxCollectionPod* selfPod, uint index);

		public static PhysxPxBasePod* PxCollectionGetObject( PhysxPxCollectionPod* selfPod,  uint index)
		{
			PhysxPxBasePod* ret = PxCollectionGetObjectNative(selfPod, index);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_getObjects")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxCollectionGetObjectsNative(PhysxPxCollectionPod* selfPod, PhysxPxBasePod** userbufferPod, uint bufferSize, uint startIndex);

		public static uint PxCollectionGetObjects( PhysxPxCollectionPod* selfPod,  PhysxPxBasePod** userbufferPod,  uint bufferSize,  uint startIndex)
		{
			uint ret = PxCollectionGetObjectsNative(selfPod, userbufferPod, bufferSize, startIndex);
			return ret;
		}

		public static uint PxCollectionGetObjects( PhysxPxCollectionPod* selfPod,  ref PhysxPxBasePod* userbufferPod,  uint bufferSize,  uint startIndex)
		{
			fixed (PhysxPxBasePod** puserbufferPod = &userbufferPod)
			{
				uint ret = PxCollectionGetObjectsNative(selfPod, (PhysxPxBasePod**)puserbufferPod, bufferSize, startIndex);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_find")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBasePod* PxCollectionFindNative(PhysxPxCollectionPod* selfPod, ulong id);

		public static PhysxPxBasePod* PxCollectionFind( PhysxPxCollectionPod* selfPod,  ulong id)
		{
			PhysxPxBasePod* ret = PxCollectionFindNative(selfPod, id);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_getNbIds")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxCollectionGetNbIdsNative(PhysxPxCollectionPod* selfPod);

		public static uint PxCollectionGetNbIds( PhysxPxCollectionPod* selfPod)
		{
			uint ret = PxCollectionGetNbIdsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_getIds")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxCollectionGetIdsNative(PhysxPxCollectionPod* selfPod, ulong* userBuffer, uint bufferSize, uint startIndex);

		public static uint PxCollectionGetIds( PhysxPxCollectionPod* selfPod,  ulong* userBuffer,  uint bufferSize,  uint startIndex)
		{
			uint ret = PxCollectionGetIdsNative(selfPod, userBuffer, bufferSize, startIndex);
			return ret;
		}

		public static uint PxCollectionGetIds( PhysxPxCollectionPod* selfPod,  ref ulong userBuffer,  uint bufferSize,  uint startIndex)
		{
			fixed (ulong* puserBuffer = &userBuffer)
			{
				uint ret = PxCollectionGetIdsNative(selfPod, (ulong*)puserBuffer, bufferSize, startIndex);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_getId")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ulong PxCollectionGetIdNative(PhysxPxCollectionPod* selfPod, PhysxPxBasePod* objectPod);

		public static ulong PxCollectionGetId( PhysxPxCollectionPod* selfPod,  PhysxPxBasePod* objectPod)
		{
			ulong ret = PxCollectionGetIdNative(selfPod, objectPod);
			return ret;
		}

		public static ulong PxCollectionGetId( PhysxPxCollectionPod* selfPod,  ref PhysxPxBasePod objectPod)
		{
			fixed (PhysxPxBasePod* pobjectPod = &objectPod)
			{
				ulong ret = PxCollectionGetIdNative(selfPod, (PhysxPxBasePod*)pobjectPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCollection_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCollectionReleaseMutNative(PhysxPxCollectionPod* selfPod);

		public static void PxCollectionReleaseMut( PhysxPxCollectionPod* selfPod)
		{
			PxCollectionReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "phys_PxCreateCollection")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxCollectionPod* PhysPxCreateCollectionNative();

		public static PhysxPxCollectionPod* PhysPxCreateCollection()
		{
			PhysxPxCollectionPod* ret = PhysPxCreateCollectionNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBase_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBaseReleaseMutNative(PhysxPxBasePod* selfPod);

		public static void PxBaseReleaseMut( PhysxPxBasePod* selfPod)
		{
			PxBaseReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBase_getConcreteTypeName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxBaseGetConcreteTypeNameNative(PhysxPxBasePod* selfPod);

		public static byte* PxBaseGetConcreteTypeName( PhysxPxBasePod* selfPod)
		{
			byte* ret = PxBaseGetConcreteTypeNameNative(selfPod);
			return ret;
		}

		public static string PxBaseGetConcreteTypeNameS( PhysxPxBasePod* selfPod)
		{
			string ret = Utils.DecodeStringUTF8(PxBaseGetConcreteTypeNameNative(selfPod));
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBase_getConcreteType")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ushort PxBaseGetConcreteTypeNative(PhysxPxBasePod* selfPod);

		public static ushort PxBaseGetConcreteType( PhysxPxBasePod* selfPod)
		{
			ushort ret = PxBaseGetConcreteTypeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBase_setBaseFlag_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBaseSetBaseFlagMutNative(PhysxPxBasePod* selfPod, int flagPod, byte value);

		public static void PxBaseSetBaseFlagMut( PhysxPxBasePod* selfPod,  int flagPod,  bool value)
		{
			PxBaseSetBaseFlagMutNative(selfPod, flagPod, value ? (byte)1 : (byte)0);
		}

		[LibraryImport(LibName, EntryPoint = "PxBase_setBaseFlags_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBaseSetBaseFlagsMutNative(PhysxPxBasePod* selfPod, ushort inflagsPod);

		public static void PxBaseSetBaseFlagsMut( PhysxPxBasePod* selfPod,  ushort inflagsPod)
		{
			PxBaseSetBaseFlagsMutNative(selfPod, inflagsPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBase_getBaseFlags")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ushort PxBaseGetBaseFlagsNative(PhysxPxBasePod* selfPod);

		public static ushort PxBaseGetBaseFlags( PhysxPxBasePod* selfPod)
		{
			ushort ret = PxBaseGetBaseFlagsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBase_isReleasable")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBaseIsReleasableNative(PhysxPxBasePod* selfPod);

		public static bool PxBaseIsReleasable( PhysxPxBasePod* selfPod)
		{
			byte ret = PxBaseIsReleasableNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxRefCounted_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRefCountedReleaseMutNative(PhysxPxRefCountedPod* selfPod);

		public static void PxRefCountedReleaseMut( PhysxPxRefCountedPod* selfPod)
		{
			PxRefCountedReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxRefCounted_getReferenceCount")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxRefCountedGetReferenceCountNative(PhysxPxRefCountedPod* selfPod);

		public static uint PxRefCountedGetReferenceCount( PhysxPxRefCountedPod* selfPod)
		{
			uint ret = PxRefCountedGetReferenceCountNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxRefCounted_acquireReference_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxRefCountedAcquireReferenceMutNative(PhysxPxRefCountedPod* selfPod);

		public static void PxRefCountedAcquireReferenceMut( PhysxPxRefCountedPod* selfPod)
		{
			PxRefCountedAcquireReferenceMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTolerancesScale_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTolerancesScalePod PxTolerancesScaleNewNative(float defaultLength, float defaultSpeed);

		public static PhysxPxTolerancesScalePod PxTolerancesScaleNew( float defaultLength,  float defaultSpeed)
		{
			PhysxPxTolerancesScalePod ret = PxTolerancesScaleNewNative(defaultLength, defaultSpeed);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTolerancesScale_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxTolerancesScaleIsValidNative(PhysxPxTolerancesScalePod* selfPod);

		public static bool PxTolerancesScaleIsValid( PhysxPxTolerancesScalePod* selfPod)
		{
			byte ret = PxTolerancesScaleIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxStringTable_allocateStr_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxStringTableAllocateStrMutNative(PhysxPxStringTablePod* selfPod, byte* inSrc);

		public static byte* PxStringTableAllocateStrMut( PhysxPxStringTablePod* selfPod,  byte* inSrc)
		{
			byte* ret = PxStringTableAllocateStrMutNative(selfPod, inSrc);
			return ret;
		}

		public static string PxStringTableAllocateStrMutS( PhysxPxStringTablePod* selfPod,  byte* inSrc)
		{
			string ret = Utils.DecodeStringUTF8(PxStringTableAllocateStrMutNative(selfPod, inSrc));
			return ret;
		}

		public static byte* PxStringTableAllocateStrMut( PhysxPxStringTablePod* selfPod,  ref byte inSrc)
		{
			fixed (byte* pinSrc = &inSrc)
			{
				byte* ret = PxStringTableAllocateStrMutNative(selfPod, (byte*)pinSrc);
				return ret;
			}
		}

		public static string PxStringTableAllocateStrMutS( PhysxPxStringTablePod* selfPod,  ref byte inSrc)
		{
			fixed (byte* pinSrc = &inSrc)
			{
				string ret = Utils.DecodeStringUTF8(PxStringTableAllocateStrMutNative(selfPod, (byte*)pinSrc));
				return ret;
			}
		}

		public static byte* PxStringTableAllocateStrMut( PhysxPxStringTablePod* selfPod,  string inSrc)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (inSrc != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(inSrc);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(inSrc, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			byte* ret = PxStringTableAllocateStrMutNative(selfPod, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static string PxStringTableAllocateStrMutS( PhysxPxStringTablePod* selfPod,  string inSrc)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (inSrc != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(inSrc);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(inSrc, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			string ret = Utils.DecodeStringUTF8(PxStringTableAllocateStrMutNative(selfPod, pStr0));
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxStringTable_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxStringTableReleaseMutNative(PhysxPxStringTablePod* selfPod);

		public static void PxStringTableReleaseMut( PhysxPxStringTablePod* selfPod)
		{
			PxStringTableReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializer_getConcreteTypeName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxSerializerGetConcreteTypeNameNative(PhysxPxSerializerPod* selfPod);

		public static byte* PxSerializerGetConcreteTypeName( PhysxPxSerializerPod* selfPod)
		{
			byte* ret = PxSerializerGetConcreteTypeNameNative(selfPod);
			return ret;
		}

		public static string PxSerializerGetConcreteTypeNameS( PhysxPxSerializerPod* selfPod)
		{
			string ret = Utils.DecodeStringUTF8(PxSerializerGetConcreteTypeNameNative(selfPod));
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializer_requiresObjects")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializerRequiresObjectsNative(PhysxPxSerializerPod* selfPod, PhysxPxBasePod* anonparam0Pod, PhysxPxProcessPxBaseCallbackPod* anonparam1Pod);

		public static void PxSerializerRequiresObjects( PhysxPxSerializerPod* selfPod,  PhysxPxBasePod* anonparam0Pod,  PhysxPxProcessPxBaseCallbackPod* anonparam1Pod)
		{
			PxSerializerRequiresObjectsNative(selfPod, anonparam0Pod, anonparam1Pod);
		}

		public static void PxSerializerRequiresObjects( PhysxPxSerializerPod* selfPod,  ref PhysxPxBasePod anonparam0Pod,  PhysxPxProcessPxBaseCallbackPod* anonparam1Pod)
		{
			fixed (PhysxPxBasePod* panonparam0Pod = &anonparam0Pod)
			{
				PxSerializerRequiresObjectsNative(selfPod, (PhysxPxBasePod*)panonparam0Pod, anonparam1Pod);
			}
		}

		public static void PxSerializerRequiresObjects( PhysxPxSerializerPod* selfPod,  PhysxPxBasePod* anonparam0Pod,  ref PhysxPxProcessPxBaseCallbackPod anonparam1Pod)
		{
			fixed (PhysxPxProcessPxBaseCallbackPod* panonparam1Pod = &anonparam1Pod)
			{
				PxSerializerRequiresObjectsNative(selfPod, anonparam0Pod, (PhysxPxProcessPxBaseCallbackPod*)panonparam1Pod);
			}
		}

		public static void PxSerializerRequiresObjects( PhysxPxSerializerPod* selfPod,  ref PhysxPxBasePod anonparam0Pod,  ref PhysxPxProcessPxBaseCallbackPod anonparam1Pod)
		{
			fixed (PhysxPxBasePod* panonparam0Pod = &anonparam0Pod)
			{
				fixed (PhysxPxProcessPxBaseCallbackPod* panonparam1Pod = &anonparam1Pod)
				{
					PxSerializerRequiresObjectsNative(selfPod, (PhysxPxBasePod*)panonparam0Pod, (PhysxPxProcessPxBaseCallbackPod*)panonparam1Pod);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializer_isSubordinate")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxSerializerIsSubordinateNative(PhysxPxSerializerPod* selfPod);

		public static bool PxSerializerIsSubordinate( PhysxPxSerializerPod* selfPod)
		{
			byte ret = PxSerializerIsSubordinateNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializer_exportExtraData")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializerExportExtraDataNative(PhysxPxSerializerPod* selfPod, PhysxPxBasePod* anonparam0Pod, PhysxPxSerializationContextPod* anonparam1Pod);

		public static void PxSerializerExportExtraData( PhysxPxSerializerPod* selfPod,  PhysxPxBasePod* anonparam0Pod,  PhysxPxSerializationContextPod* anonparam1Pod)
		{
			PxSerializerExportExtraDataNative(selfPod, anonparam0Pod, anonparam1Pod);
		}

		public static void PxSerializerExportExtraData( PhysxPxSerializerPod* selfPod,  ref PhysxPxBasePod anonparam0Pod,  PhysxPxSerializationContextPod* anonparam1Pod)
		{
			fixed (PhysxPxBasePod* panonparam0Pod = &anonparam0Pod)
			{
				PxSerializerExportExtraDataNative(selfPod, (PhysxPxBasePod*)panonparam0Pod, anonparam1Pod);
			}
		}

		public static void PxSerializerExportExtraData( PhysxPxSerializerPod* selfPod,  PhysxPxBasePod* anonparam0Pod,  ref PhysxPxSerializationContextPod anonparam1Pod)
		{
			fixed (PhysxPxSerializationContextPod* panonparam1Pod = &anonparam1Pod)
			{
				PxSerializerExportExtraDataNative(selfPod, anonparam0Pod, (PhysxPxSerializationContextPod*)panonparam1Pod);
			}
		}

		public static void PxSerializerExportExtraData( PhysxPxSerializerPod* selfPod,  ref PhysxPxBasePod anonparam0Pod,  ref PhysxPxSerializationContextPod anonparam1Pod)
		{
			fixed (PhysxPxBasePod* panonparam0Pod = &anonparam0Pod)
			{
				fixed (PhysxPxSerializationContextPod* panonparam1Pod = &anonparam1Pod)
				{
					PxSerializerExportExtraDataNative(selfPod, (PhysxPxBasePod*)panonparam0Pod, (PhysxPxSerializationContextPod*)panonparam1Pod);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializer_exportData")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializerExportDataNative(PhysxPxSerializerPod* selfPod, PhysxPxBasePod* anonparam0Pod, PhysxPxSerializationContextPod* anonparam1Pod);

		public static void PxSerializerExportData( PhysxPxSerializerPod* selfPod,  PhysxPxBasePod* anonparam0Pod,  PhysxPxSerializationContextPod* anonparam1Pod)
		{
			PxSerializerExportDataNative(selfPod, anonparam0Pod, anonparam1Pod);
		}

		public static void PxSerializerExportData( PhysxPxSerializerPod* selfPod,  ref PhysxPxBasePod anonparam0Pod,  PhysxPxSerializationContextPod* anonparam1Pod)
		{
			fixed (PhysxPxBasePod* panonparam0Pod = &anonparam0Pod)
			{
				PxSerializerExportDataNative(selfPod, (PhysxPxBasePod*)panonparam0Pod, anonparam1Pod);
			}
		}

		public static void PxSerializerExportData( PhysxPxSerializerPod* selfPod,  PhysxPxBasePod* anonparam0Pod,  ref PhysxPxSerializationContextPod anonparam1Pod)
		{
			fixed (PhysxPxSerializationContextPod* panonparam1Pod = &anonparam1Pod)
			{
				PxSerializerExportDataNative(selfPod, anonparam0Pod, (PhysxPxSerializationContextPod*)panonparam1Pod);
			}
		}

		public static void PxSerializerExportData( PhysxPxSerializerPod* selfPod,  ref PhysxPxBasePod anonparam0Pod,  ref PhysxPxSerializationContextPod anonparam1Pod)
		{
			fixed (PhysxPxBasePod* panonparam0Pod = &anonparam0Pod)
			{
				fixed (PhysxPxSerializationContextPod* panonparam1Pod = &anonparam1Pod)
				{
					PxSerializerExportDataNative(selfPod, (PhysxPxBasePod*)panonparam0Pod, (PhysxPxSerializationContextPod*)panonparam1Pod);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializer_registerReferences")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializerRegisterReferencesNative(PhysxPxSerializerPod* selfPod, PhysxPxBasePod* objPod, PhysxPxSerializationContextPod* sPod);

		public static void PxSerializerRegisterReferences( PhysxPxSerializerPod* selfPod,  PhysxPxBasePod* objPod,  PhysxPxSerializationContextPod* sPod)
		{
			PxSerializerRegisterReferencesNative(selfPod, objPod, sPod);
		}

		public static void PxSerializerRegisterReferences( PhysxPxSerializerPod* selfPod,  ref PhysxPxBasePod objPod,  PhysxPxSerializationContextPod* sPod)
		{
			fixed (PhysxPxBasePod* pobjPod = &objPod)
			{
				PxSerializerRegisterReferencesNative(selfPod, (PhysxPxBasePod*)pobjPod, sPod);
			}
		}

		public static void PxSerializerRegisterReferences( PhysxPxSerializerPod* selfPod,  PhysxPxBasePod* objPod,  ref PhysxPxSerializationContextPod sPod)
		{
			fixed (PhysxPxSerializationContextPod* psPod = &sPod)
			{
				PxSerializerRegisterReferencesNative(selfPod, objPod, (PhysxPxSerializationContextPod*)psPod);
			}
		}

		public static void PxSerializerRegisterReferences( PhysxPxSerializerPod* selfPod,  ref PhysxPxBasePod objPod,  ref PhysxPxSerializationContextPod sPod)
		{
			fixed (PhysxPxBasePod* pobjPod = &objPod)
			{
				fixed (PhysxPxSerializationContextPod* psPod = &sPod)
				{
					PxSerializerRegisterReferencesNative(selfPod, (PhysxPxBasePod*)pobjPod, (PhysxPxSerializationContextPod*)psPod);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializer_getClassSize")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ulong PxSerializerGetClassSizeNative(PhysxPxSerializerPod* selfPod);

		public static ulong PxSerializerGetClassSize( PhysxPxSerializerPod* selfPod)
		{
			ulong ret = PxSerializerGetClassSizeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializer_createObject")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBasePod* PxSerializerCreateObjectNative(PhysxPxSerializerPod* selfPod, byte** addressPod, PhysxPxDeserializationContextPod* contextPod);

		public static PhysxPxBasePod* PxSerializerCreateObject( PhysxPxSerializerPod* selfPod,  byte** addressPod,  PhysxPxDeserializationContextPod* contextPod)
		{
			PhysxPxBasePod* ret = PxSerializerCreateObjectNative(selfPod, addressPod, contextPod);
			return ret;
		}

		public static PhysxPxBasePod* PxSerializerCreateObject( PhysxPxSerializerPod* selfPod,  ref byte* addressPod,  PhysxPxDeserializationContextPod* contextPod)
		{
			fixed (byte** paddressPod = &addressPod)
			{
				PhysxPxBasePod* ret = PxSerializerCreateObjectNative(selfPod, (byte**)paddressPod, contextPod);
				return ret;
			}
		}

		public static PhysxPxBasePod* PxSerializerCreateObject( PhysxPxSerializerPod* selfPod,  byte** addressPod,  ref PhysxPxDeserializationContextPod contextPod)
		{
			fixed (PhysxPxDeserializationContextPod* pcontextPod = &contextPod)
			{
				PhysxPxBasePod* ret = PxSerializerCreateObjectNative(selfPod, addressPod, (PhysxPxDeserializationContextPod*)pcontextPod);
				return ret;
			}
		}

		public static PhysxPxBasePod* PxSerializerCreateObject( PhysxPxSerializerPod* selfPod,  ref byte* addressPod,  ref PhysxPxDeserializationContextPod contextPod)
		{
			fixed (byte** paddressPod = &addressPod)
			{
				fixed (PhysxPxDeserializationContextPod* pcontextPod = &contextPod)
				{
					PhysxPxBasePod* ret = PxSerializerCreateObjectNative(selfPod, (byte**)paddressPod, (PhysxPxDeserializationContextPod*)pcontextPod);
					return ret;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxSerializer_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxSerializerDeleteNative(PhysxPxSerializerPod* selfPod);

		public static void PxSerializerDelete( PhysxPxSerializerPod* selfPod)
		{
			PxSerializerDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxInsertionCallback_buildObjectFromData_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBasePod* PxInsertionCallbackBuildObjectFromDataMutNative(PhysxPxInsertionCallbackPod* selfPod, int typePod, void* data);

		public static PhysxPxBasePod* PxInsertionCallbackBuildObjectFromDataMut( PhysxPxInsertionCallbackPod* selfPod,  int typePod,  void* data)
		{
			PhysxPxBasePod* ret = PxInsertionCallbackBuildObjectFromDataMutNative(selfPod, typePod, data);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_setCpuDispatcher_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskManagerSetCpuDispatcherMutNative(PhysxPxTaskManagerPod* selfPod, PhysxPxCpuDispatcherPod* refPod);

		public static void PxTaskManagerSetCpuDispatcherMut( PhysxPxTaskManagerPod* selfPod,  PhysxPxCpuDispatcherPod* refPod)
		{
			PxTaskManagerSetCpuDispatcherMutNative(selfPod, refPod);
		}

		public static void PxTaskManagerSetCpuDispatcherMut( PhysxPxTaskManagerPod* selfPod,  ref PhysxPxCpuDispatcherPod refPod)
		{
			fixed (PhysxPxCpuDispatcherPod* prefPod = &refPod)
			{
				PxTaskManagerSetCpuDispatcherMutNative(selfPod, (PhysxPxCpuDispatcherPod*)prefPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_getCpuDispatcher")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxCpuDispatcherPod* PxTaskManagerGetCpuDispatcherNative(PhysxPxTaskManagerPod* selfPod);

		public static PhysxPxCpuDispatcherPod* PxTaskManagerGetCpuDispatcher( PhysxPxTaskManagerPod* selfPod)
		{
			PhysxPxCpuDispatcherPod* ret = PxTaskManagerGetCpuDispatcherNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_resetDependencies_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskManagerResetDependenciesMutNative(PhysxPxTaskManagerPod* selfPod);

		public static void PxTaskManagerResetDependenciesMut( PhysxPxTaskManagerPod* selfPod)
		{
			PxTaskManagerResetDependenciesMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_startSimulation_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskManagerStartSimulationMutNative(PhysxPxTaskManagerPod* selfPod);

		public static void PxTaskManagerStartSimulationMut( PhysxPxTaskManagerPod* selfPod)
		{
			PxTaskManagerStartSimulationMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_stopSimulation_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskManagerStopSimulationMutNative(PhysxPxTaskManagerPod* selfPod);

		public static void PxTaskManagerStopSimulationMut( PhysxPxTaskManagerPod* selfPod)
		{
			PxTaskManagerStopSimulationMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_taskCompleted_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskManagerTaskCompletedMutNative(PhysxPxTaskManagerPod* selfPod, PhysxPxTaskPod* taskPod);

		public static void PxTaskManagerTaskCompletedMut( PhysxPxTaskManagerPod* selfPod,  PhysxPxTaskPod* taskPod)
		{
			PxTaskManagerTaskCompletedMutNative(selfPod, taskPod);
		}

		public static void PxTaskManagerTaskCompletedMut( PhysxPxTaskManagerPod* selfPod,  ref PhysxPxTaskPod taskPod)
		{
			fixed (PhysxPxTaskPod* ptaskPod = &taskPod)
			{
				PxTaskManagerTaskCompletedMutNative(selfPod, (PhysxPxTaskPod*)ptaskPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_getNamedTask_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxTaskManagerGetNamedTaskMutNative(PhysxPxTaskManagerPod* selfPod, byte* name);

		public static uint PxTaskManagerGetNamedTaskMut( PhysxPxTaskManagerPod* selfPod,  byte* name)
		{
			uint ret = PxTaskManagerGetNamedTaskMutNative(selfPod, name);
			return ret;
		}

		public static uint PxTaskManagerGetNamedTaskMut( PhysxPxTaskManagerPod* selfPod,  ref byte name)
		{
			fixed (byte* pname = &name)
			{
				uint ret = PxTaskManagerGetNamedTaskMutNative(selfPod, (byte*)pname);
				return ret;
			}
		}

		public static uint PxTaskManagerGetNamedTaskMut( PhysxPxTaskManagerPod* selfPod,  string name)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			uint ret = PxTaskManagerGetNamedTaskMutNative(selfPod, pStr0);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_submitNamedTask_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxTaskManagerSubmitNamedTaskMutNative(PhysxPxTaskManagerPod* selfPod, PhysxPxTaskPod* taskPod, byte* name, int typePod);

		public static uint PxTaskManagerSubmitNamedTaskMut( PhysxPxTaskManagerPod* selfPod,  PhysxPxTaskPod* taskPod,  byte* name,  int typePod)
		{
			uint ret = PxTaskManagerSubmitNamedTaskMutNative(selfPod, taskPod, name, typePod);
			return ret;
		}

		public static uint PxTaskManagerSubmitNamedTaskMut( PhysxPxTaskManagerPod* selfPod,  ref PhysxPxTaskPod taskPod,  byte* name,  int typePod)
		{
			fixed (PhysxPxTaskPod* ptaskPod = &taskPod)
			{
				uint ret = PxTaskManagerSubmitNamedTaskMutNative(selfPod, (PhysxPxTaskPod*)ptaskPod, name, typePod);
				return ret;
			}
		}

		public static uint PxTaskManagerSubmitNamedTaskMut( PhysxPxTaskManagerPod* selfPod,  PhysxPxTaskPod* taskPod,  ref byte name,  int typePod)
		{
			fixed (byte* pname = &name)
			{
				uint ret = PxTaskManagerSubmitNamedTaskMutNative(selfPod, taskPod, (byte*)pname, typePod);
				return ret;
			}
		}

		public static uint PxTaskManagerSubmitNamedTaskMut( PhysxPxTaskManagerPod* selfPod,  PhysxPxTaskPod* taskPod,  string name,  int typePod)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (name != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(name);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			uint ret = PxTaskManagerSubmitNamedTaskMutNative(selfPod, taskPod, pStr0, typePod);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			return ret;
		}

		public static uint PxTaskManagerSubmitNamedTaskMut( PhysxPxTaskManagerPod* selfPod,  ref PhysxPxTaskPod taskPod,  ref byte name,  int typePod)
		{
			fixed (PhysxPxTaskPod* ptaskPod = &taskPod)
			{
				fixed (byte* pname = &name)
				{
					uint ret = PxTaskManagerSubmitNamedTaskMutNative(selfPod, (PhysxPxTaskPod*)ptaskPod, (byte*)pname, typePod);
					return ret;
				}
			}
		}

		public static uint PxTaskManagerSubmitNamedTaskMut( PhysxPxTaskManagerPod* selfPod,  ref PhysxPxTaskPod taskPod,  string name,  int typePod)
		{
			fixed (PhysxPxTaskPod* ptaskPod = &taskPod)
			{
				byte* pStr0 = null;
				int pStrSize0 = 0;
				if (name != null)
				{
					pStrSize0 = Utils.GetByteCountUTF8(name);
					if (pStrSize0 >= Utils.MaxStackallocSize)
					{
						pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
					}
					else
					{
						byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
						pStr0 = pStrStack0;
					}
					int pStrOffset0 = Utils.EncodeStringUTF8(name, pStr0, pStrSize0);
					pStr0[pStrOffset0] = 0;
				}
				uint ret = PxTaskManagerSubmitNamedTaskMutNative(selfPod, (PhysxPxTaskPod*)ptaskPod, pStr0, typePod);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					Utils.Free(pStr0);
				}
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_submitUnnamedTask_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxTaskManagerSubmitUnnamedTaskMutNative(PhysxPxTaskManagerPod* selfPod, PhysxPxTaskPod* taskPod, int typePod);

		public static uint PxTaskManagerSubmitUnnamedTaskMut( PhysxPxTaskManagerPod* selfPod,  PhysxPxTaskPod* taskPod,  int typePod)
		{
			uint ret = PxTaskManagerSubmitUnnamedTaskMutNative(selfPod, taskPod, typePod);
			return ret;
		}

		public static uint PxTaskManagerSubmitUnnamedTaskMut( PhysxPxTaskManagerPod* selfPod,  ref PhysxPxTaskPod taskPod,  int typePod)
		{
			fixed (PhysxPxTaskPod* ptaskPod = &taskPod)
			{
				uint ret = PxTaskManagerSubmitUnnamedTaskMutNative(selfPod, (PhysxPxTaskPod*)ptaskPod, typePod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_getTaskFromID_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTaskPod* PxTaskManagerGetTaskFromIDMutNative(PhysxPxTaskManagerPod* selfPod, uint id);

		public static PhysxPxTaskPod* PxTaskManagerGetTaskFromIDMut( PhysxPxTaskManagerPod* selfPod,  uint id)
		{
			PhysxPxTaskPod* ret = PxTaskManagerGetTaskFromIDMutNative(selfPod, id);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskManagerReleaseMutNative(PhysxPxTaskManagerPod* selfPod);

		public static void PxTaskManagerReleaseMut( PhysxPxTaskManagerPod* selfPod)
		{
			PxTaskManagerReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTaskManager_createTaskManager")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTaskManagerPod* PxTaskManagerCreateTaskManagerNative(PhysxPxErrorCallbackPod* errorcallbackPod, PhysxPxCpuDispatcherPod* anonparam1Pod);

		public static PhysxPxTaskManagerPod* PxTaskManagerCreateTaskManager( PhysxPxErrorCallbackPod* errorcallbackPod,  PhysxPxCpuDispatcherPod* anonparam1Pod)
		{
			PhysxPxTaskManagerPod* ret = PxTaskManagerCreateTaskManagerNative(errorcallbackPod, anonparam1Pod);
			return ret;
		}

		public static PhysxPxTaskManagerPod* PxTaskManagerCreateTaskManager( PhysxPxErrorCallbackPod* errorcallbackPod,  ref PhysxPxCpuDispatcherPod anonparam1Pod)
		{
			fixed (PhysxPxCpuDispatcherPod* panonparam1Pod = &anonparam1Pod)
			{
				PhysxPxTaskManagerPod* ret = PxTaskManagerCreateTaskManagerNative(errorcallbackPod, (PhysxPxCpuDispatcherPod*)panonparam1Pod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCpuDispatcher_submitTask_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCpuDispatcherSubmitTaskMutNative(PhysxPxCpuDispatcherPod* selfPod, PhysxPxBaseTaskPod* taskPod);

		public static void PxCpuDispatcherSubmitTaskMut( PhysxPxCpuDispatcherPod* selfPod,  PhysxPxBaseTaskPod* taskPod)
		{
			PxCpuDispatcherSubmitTaskMutNative(selfPod, taskPod);
		}

		public static void PxCpuDispatcherSubmitTaskMut( PhysxPxCpuDispatcherPod* selfPod,  ref PhysxPxBaseTaskPod taskPod)
		{
			fixed (PhysxPxBaseTaskPod* ptaskPod = &taskPod)
			{
				PxCpuDispatcherSubmitTaskMutNative(selfPod, (PhysxPxBaseTaskPod*)ptaskPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxCpuDispatcher_getWorkerCount")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxCpuDispatcherGetWorkerCountNative(PhysxPxCpuDispatcherPod* selfPod);

		public static uint PxCpuDispatcherGetWorkerCount( PhysxPxCpuDispatcherPod* selfPod)
		{
			uint ret = PxCpuDispatcherGetWorkerCountNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCpuDispatcher_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxCpuDispatcherDeleteNative(PhysxPxCpuDispatcherPod* selfPod);

		public static void PxCpuDispatcherDelete( PhysxPxCpuDispatcherPod* selfPod)
		{
			PxCpuDispatcherDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBaseTask_run_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBaseTaskRunMutNative(PhysxPxBaseTaskPod* selfPod);

		public static void PxBaseTaskRunMut( PhysxPxBaseTaskPod* selfPod)
		{
			PxBaseTaskRunMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBaseTask_getName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxBaseTaskGetNameNative(PhysxPxBaseTaskPod* selfPod);

		public static byte* PxBaseTaskGetName( PhysxPxBaseTaskPod* selfPod)
		{
			byte* ret = PxBaseTaskGetNameNative(selfPod);
			return ret;
		}

		public static string PxBaseTaskGetNameS( PhysxPxBaseTaskPod* selfPod)
		{
			string ret = Utils.DecodeStringUTF8(PxBaseTaskGetNameNative(selfPod));
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBaseTask_addReference_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBaseTaskAddReferenceMutNative(PhysxPxBaseTaskPod* selfPod);

		public static void PxBaseTaskAddReferenceMut( PhysxPxBaseTaskPod* selfPod)
		{
			PxBaseTaskAddReferenceMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBaseTask_removeReference_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBaseTaskRemoveReferenceMutNative(PhysxPxBaseTaskPod* selfPod);

		public static void PxBaseTaskRemoveReferenceMut( PhysxPxBaseTaskPod* selfPod)
		{
			PxBaseTaskRemoveReferenceMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBaseTask_getReference")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int PxBaseTaskGetReferenceNative(PhysxPxBaseTaskPod* selfPod);

		public static int PxBaseTaskGetReference( PhysxPxBaseTaskPod* selfPod)
		{
			int ret = PxBaseTaskGetReferenceNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBaseTask_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBaseTaskReleaseMutNative(PhysxPxBaseTaskPod* selfPod);

		public static void PxBaseTaskReleaseMut( PhysxPxBaseTaskPod* selfPod)
		{
			PxBaseTaskReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBaseTask_getTaskManager")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTaskManagerPod* PxBaseTaskGetTaskManagerNative(PhysxPxBaseTaskPod* selfPod);

		public static PhysxPxTaskManagerPod* PxBaseTaskGetTaskManager( PhysxPxBaseTaskPod* selfPod)
		{
			PhysxPxTaskManagerPod* ret = PxBaseTaskGetTaskManagerNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBaseTask_setContextId_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBaseTaskSetContextIdMutNative(PhysxPxBaseTaskPod* selfPod, ulong id);

		public static void PxBaseTaskSetContextIdMut( PhysxPxBaseTaskPod* selfPod,  ulong id)
		{
			PxBaseTaskSetContextIdMutNative(selfPod, id);
		}

		[LibraryImport(LibName, EntryPoint = "PxBaseTask_getContextId")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial ulong PxBaseTaskGetContextIdNative(PhysxPxBaseTaskPod* selfPod);

		public static ulong PxBaseTaskGetContextId( PhysxPxBaseTaskPod* selfPod)
		{
			ulong ret = PxBaseTaskGetContextIdNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTask_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskReleaseMutNative(PhysxPxTaskPod* selfPod);

		public static void PxTaskReleaseMut( PhysxPxTaskPod* selfPod)
		{
			PxTaskReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTask_finishBefore_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskFinishBeforeMutNative(PhysxPxTaskPod* selfPod, uint taskID);

		public static void PxTaskFinishBeforeMut( PhysxPxTaskPod* selfPod,  uint taskID)
		{
			PxTaskFinishBeforeMutNative(selfPod, taskID);
		}

		[LibraryImport(LibName, EntryPoint = "PxTask_startAfter_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskStartAfterMutNative(PhysxPxTaskPod* selfPod, uint taskID);

		public static void PxTaskStartAfterMut( PhysxPxTaskPod* selfPod,  uint taskID)
		{
			PxTaskStartAfterMutNative(selfPod, taskID);
		}

		[LibraryImport(LibName, EntryPoint = "PxTask_addReference_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskAddReferenceMutNative(PhysxPxTaskPod* selfPod);

		public static void PxTaskAddReferenceMut( PhysxPxTaskPod* selfPod)
		{
			PxTaskAddReferenceMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTask_removeReference_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskRemoveReferenceMutNative(PhysxPxTaskPod* selfPod);

		public static void PxTaskRemoveReferenceMut( PhysxPxTaskPod* selfPod)
		{
			PxTaskRemoveReferenceMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxTask_getReference")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int PxTaskGetReferenceNative(PhysxPxTaskPod* selfPod);

		public static int PxTaskGetReference( PhysxPxTaskPod* selfPod)
		{
			int ret = PxTaskGetReferenceNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTask_getTaskID")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxTaskGetTaskIDNative(PhysxPxTaskPod* selfPod);

		public static uint PxTaskGetTaskID( PhysxPxTaskPod* selfPod)
		{
			uint ret = PxTaskGetTaskIDNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTask_submitted_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxTaskSubmittedMutNative(PhysxPxTaskPod* selfPod);

		public static void PxTaskSubmittedMut( PhysxPxTaskPod* selfPod)
		{
			PxTaskSubmittedMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxLightCpuTask_setContinuation_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxLightCpuTaskSetContinuationMutNative(PhysxPxLightCpuTaskPod* selfPod, PhysxPxTaskManagerPod* tmPod, PhysxPxBaseTaskPod* cPod);

		public static void PxLightCpuTaskSetContinuationMut( PhysxPxLightCpuTaskPod* selfPod,  PhysxPxTaskManagerPod* tmPod,  PhysxPxBaseTaskPod* cPod)
		{
			PxLightCpuTaskSetContinuationMutNative(selfPod, tmPod, cPod);
		}

		public static void PxLightCpuTaskSetContinuationMut( PhysxPxLightCpuTaskPod* selfPod,  ref PhysxPxTaskManagerPod tmPod,  PhysxPxBaseTaskPod* cPod)
		{
			fixed (PhysxPxTaskManagerPod* ptmPod = &tmPod)
			{
				PxLightCpuTaskSetContinuationMutNative(selfPod, (PhysxPxTaskManagerPod*)ptmPod, cPod);
			}
		}

		public static void PxLightCpuTaskSetContinuationMut( PhysxPxLightCpuTaskPod* selfPod,  PhysxPxTaskManagerPod* tmPod,  ref PhysxPxBaseTaskPod cPod)
		{
			fixed (PhysxPxBaseTaskPod* pcPod = &cPod)
			{
				PxLightCpuTaskSetContinuationMutNative(selfPod, tmPod, (PhysxPxBaseTaskPod*)pcPod);
			}
		}

		public static void PxLightCpuTaskSetContinuationMut( PhysxPxLightCpuTaskPod* selfPod,  ref PhysxPxTaskManagerPod tmPod,  ref PhysxPxBaseTaskPod cPod)
		{
			fixed (PhysxPxTaskManagerPod* ptmPod = &tmPod)
			{
				fixed (PhysxPxBaseTaskPod* pcPod = &cPod)
				{
					PxLightCpuTaskSetContinuationMutNative(selfPod, (PhysxPxTaskManagerPod*)ptmPod, (PhysxPxBaseTaskPod*)pcPod);
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxLightCpuTask_setContinuation_mut_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxLightCpuTaskSetContinuationMut1Native(PhysxPxLightCpuTaskPod* selfPod, PhysxPxBaseTaskPod* cPod);

		public static void PxLightCpuTaskSetContinuationMut1( PhysxPxLightCpuTaskPod* selfPod,  PhysxPxBaseTaskPod* cPod)
		{
			PxLightCpuTaskSetContinuationMut1Native(selfPod, cPod);
		}

		public static void PxLightCpuTaskSetContinuationMut1( PhysxPxLightCpuTaskPod* selfPod,  ref PhysxPxBaseTaskPod cPod)
		{
			fixed (PhysxPxBaseTaskPod* pcPod = &cPod)
			{
				PxLightCpuTaskSetContinuationMut1Native(selfPod, (PhysxPxBaseTaskPod*)pcPod);
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxLightCpuTask_getContinuation")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBaseTaskPod* PxLightCpuTaskGetContinuationNative(PhysxPxLightCpuTaskPod* selfPod);

		public static PhysxPxBaseTaskPod* PxLightCpuTaskGetContinuation( PhysxPxLightCpuTaskPod* selfPod)
		{
			PhysxPxBaseTaskPod* ret = PxLightCpuTaskGetContinuationNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxLightCpuTask_removeReference_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxLightCpuTaskRemoveReferenceMutNative(PhysxPxLightCpuTaskPod* selfPod);

		public static void PxLightCpuTaskRemoveReferenceMut( PhysxPxLightCpuTaskPod* selfPod)
		{
			PxLightCpuTaskRemoveReferenceMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxLightCpuTask_getReference")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int PxLightCpuTaskGetReferenceNative(PhysxPxLightCpuTaskPod* selfPod);

		public static int PxLightCpuTaskGetReference( PhysxPxLightCpuTaskPod* selfPod)
		{
			int ret = PxLightCpuTaskGetReferenceNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxLightCpuTask_addReference_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxLightCpuTaskAddReferenceMutNative(PhysxPxLightCpuTaskPod* selfPod);

		public static void PxLightCpuTaskAddReferenceMut( PhysxPxLightCpuTaskPod* selfPod)
		{
			PxLightCpuTaskAddReferenceMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxLightCpuTask_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxLightCpuTaskReleaseMutNative(PhysxPxLightCpuTaskPod* selfPod);

		public static void PxLightCpuTaskReleaseMut( PhysxPxLightCpuTaskPod* selfPod)
		{
			PxLightCpuTaskReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxGeometry_getType")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial int PxGeometryGetTypeNative(PhysxPxGeometryPod* selfPod);

		public static int PxGeometryGetType( PhysxPxGeometryPod* selfPod)
		{
			int ret = PxGeometryGetTypeNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBoxGeometry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBoxGeometryPod PxBoxGeometryNewNative(float hx, float hy, float hz);

		public static PhysxPxBoxGeometryPod PxBoxGeometryNew( float hx,  float hy,  float hz)
		{
			PhysxPxBoxGeometryPod ret = PxBoxGeometryNewNative(hx, hy, hz);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBoxGeometry_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBoxGeometryPod PxBoxGeometryNew1Native(PhysxPxVec3Pod halfextentsPod);

		public static PhysxPxBoxGeometryPod PxBoxGeometryNew1( PhysxPxVec3Pod halfextentsPod)
		{
			PhysxPxBoxGeometryPod ret = PxBoxGeometryNew1Native(halfextentsPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBoxGeometry_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBoxGeometryIsValidNative(PhysxPxBoxGeometryPod* selfPod);

		public static bool PxBoxGeometryIsValid( PhysxPxBoxGeometryPod* selfPod)
		{
			byte ret = PxBoxGeometryIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxBVHRaycastCallback_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBVHRaycastCallbackDeleteNative(PhysxPxBVHRaycastCallbackPod* selfPod);

		public static void PxBVHRaycastCallbackDelete( PhysxPxBVHRaycastCallbackPod* selfPod)
		{
			PxBVHRaycastCallbackDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBVHRaycastCallback_reportHit_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBVHRaycastCallbackReportHitMutNative(PhysxPxBVHRaycastCallbackPod* selfPod, uint boundsIndex, float* distancePod);

		public static bool PxBVHRaycastCallbackReportHitMut( PhysxPxBVHRaycastCallbackPod* selfPod,  uint boundsIndex,  float* distancePod)
		{
			byte ret = PxBVHRaycastCallbackReportHitMutNative(selfPod, boundsIndex, distancePod);
			return ret != 0;
		}

		public static bool PxBVHRaycastCallbackReportHitMut( PhysxPxBVHRaycastCallbackPod* selfPod,  uint boundsIndex,  ref float distancePod)
		{
			fixed (float* pdistancePod = &distancePod)
			{
				byte ret = PxBVHRaycastCallbackReportHitMutNative(selfPod, boundsIndex, (float*)pdistancePod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBVHOverlapCallback_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBVHOverlapCallbackDeleteNative(PhysxPxBVHOverlapCallbackPod* selfPod);

		public static void PxBVHOverlapCallbackDelete( PhysxPxBVHOverlapCallbackPod* selfPod)
		{
			PxBVHOverlapCallbackDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBVHOverlapCallback_reportHit_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBVHOverlapCallbackReportHitMutNative(PhysxPxBVHOverlapCallbackPod* selfPod, uint boundsIndex);

		public static bool PxBVHOverlapCallbackReportHitMut( PhysxPxBVHOverlapCallbackPod* selfPod,  uint boundsIndex)
		{
			byte ret = PxBVHOverlapCallbackReportHitMutNative(selfPod, boundsIndex);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxBVHTraversalCallback_delete")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBVHTraversalCallbackDeleteNative(PhysxPxBVHTraversalCallbackPod* selfPod);

		public static void PxBVHTraversalCallbackDelete( PhysxPxBVHTraversalCallbackPod* selfPod)
		{
			PxBVHTraversalCallbackDeleteNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBVHTraversalCallback_visitNode_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBVHTraversalCallbackVisitNodeMutNative(PhysxPxBVHTraversalCallbackPod* selfPod, PhysxPxBounds3Pod* boundsPod);

		public static bool PxBVHTraversalCallbackVisitNodeMut( PhysxPxBVHTraversalCallbackPod* selfPod,  PhysxPxBounds3Pod* boundsPod)
		{
			byte ret = PxBVHTraversalCallbackVisitNodeMutNative(selfPod, boundsPod);
			return ret != 0;
		}

		public static bool PxBVHTraversalCallbackVisitNodeMut( PhysxPxBVHTraversalCallbackPod* selfPod,  ref PhysxPxBounds3Pod boundsPod)
		{
			fixed (PhysxPxBounds3Pod* pboundsPod = &boundsPod)
			{
				byte ret = PxBVHTraversalCallbackVisitNodeMutNative(selfPod, (PhysxPxBounds3Pod*)pboundsPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBVHTraversalCallback_reportLeaf_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBVHTraversalCallbackReportLeafMutNative(PhysxPxBVHTraversalCallbackPod* selfPod, uint nbPrims, uint* prims);

		public static bool PxBVHTraversalCallbackReportLeafMut( PhysxPxBVHTraversalCallbackPod* selfPod,  uint nbPrims,  uint* prims)
		{
			byte ret = PxBVHTraversalCallbackReportLeafMutNative(selfPod, nbPrims, prims);
			return ret != 0;
		}

		public static bool PxBVHTraversalCallbackReportLeafMut( PhysxPxBVHTraversalCallbackPod* selfPod,  uint nbPrims,  ref uint prims)
		{
			fixed (uint* pprims = &prims)
			{
				byte ret = PxBVHTraversalCallbackReportLeafMutNative(selfPod, nbPrims, (uint*)pprims);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_raycast")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBVHRaycastNative(PhysxPxBVHPod* selfPod, PhysxPxVec3Pod* originPod, PhysxPxVec3Pod* unitdirPod, float maxDist, PhysxPxBVHRaycastCallbackPod* cbPod, uint queryflagsPod);

		public static bool PxBVHRaycast( PhysxPxBVHPod* selfPod,  PhysxPxVec3Pod* originPod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			byte ret = PxBVHRaycastNative(selfPod, originPod, unitdirPod, maxDist, cbPod, queryflagsPod);
			return ret != 0;
		}

		public static bool PxBVHRaycast( PhysxPxBVHPod* selfPod,  ref PhysxPxVec3Pod originPod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxVec3Pod* poriginPod = &originPod)
			{
				byte ret = PxBVHRaycastNative(selfPod, (PhysxPxVec3Pod*)poriginPod, unitdirPod, maxDist, cbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHRaycast( PhysxPxBVHPod* selfPod,  PhysxPxVec3Pod* originPod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
			{
				byte ret = PxBVHRaycastNative(selfPod, originPod, (PhysxPxVec3Pod*)punitdirPod, maxDist, cbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHRaycast( PhysxPxBVHPod* selfPod,  ref PhysxPxVec3Pod originPod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxVec3Pod* poriginPod = &originPod)
			{
				fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
				{
					byte ret = PxBVHRaycastNative(selfPod, (PhysxPxVec3Pod*)poriginPod, (PhysxPxVec3Pod*)punitdirPod, maxDist, cbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHRaycast( PhysxPxBVHPod* selfPod,  PhysxPxVec3Pod* originPod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
			{
				byte ret = PxBVHRaycastNative(selfPod, originPod, unitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHRaycast( PhysxPxBVHPod* selfPod,  ref PhysxPxVec3Pod originPod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxVec3Pod* poriginPod = &originPod)
			{
				fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
				{
					byte ret = PxBVHRaycastNative(selfPod, (PhysxPxVec3Pod*)poriginPod, unitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHRaycast( PhysxPxBVHPod* selfPod,  PhysxPxVec3Pod* originPod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
			{
				fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
				{
					byte ret = PxBVHRaycastNative(selfPod, originPod, (PhysxPxVec3Pod*)punitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHRaycast( PhysxPxBVHPod* selfPod,  ref PhysxPxVec3Pod originPod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxVec3Pod* poriginPod = &originPod)
			{
				fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
				{
					fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
					{
						byte ret = PxBVHRaycastNative(selfPod, (PhysxPxVec3Pod*)poriginPod, (PhysxPxVec3Pod*)punitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_sweep")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBVHSweepNative(PhysxPxBVHPod* selfPod, PhysxPxGeometryPod* geomPod, PhysxPxTransformPod* posePod, PhysxPxVec3Pod* unitdirPod, float maxDist, PhysxPxBVHRaycastCallbackPod* cbPod, uint queryflagsPod);

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			byte ret = PxBVHSweepNative(selfPod, geomPod, posePod, unitdirPod, maxDist, cbPod, queryflagsPod);
			return ret != 0;
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				byte ret = PxBVHSweepNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, posePod, unitdirPod, maxDist, cbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				byte ret = PxBVHSweepNative(selfPod, geomPod, (PhysxPxTransformPod*)pposePod, unitdirPod, maxDist, cbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					byte ret = PxBVHSweepNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, unitdirPod, maxDist, cbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
			{
				byte ret = PxBVHSweepNative(selfPod, geomPod, posePod, (PhysxPxVec3Pod*)punitdirPod, maxDist, cbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
				{
					byte ret = PxBVHSweepNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, posePod, (PhysxPxVec3Pod*)punitdirPod, maxDist, cbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
				{
					byte ret = PxBVHSweepNative(selfPod, geomPod, (PhysxPxTransformPod*)pposePod, (PhysxPxVec3Pod*)punitdirPod, maxDist, cbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  PhysxPxBVHRaycastCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
					{
						byte ret = PxBVHSweepNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, (PhysxPxVec3Pod*)punitdirPod, maxDist, cbPod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
			{
				byte ret = PxBVHSweepNative(selfPod, geomPod, posePod, unitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
				{
					byte ret = PxBVHSweepNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, posePod, unitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
				{
					byte ret = PxBVHSweepNative(selfPod, geomPod, (PhysxPxTransformPod*)pposePod, unitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  PhysxPxVec3Pod* unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
					{
						byte ret = PxBVHSweepNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, unitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
			{
				fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
				{
					byte ret = PxBVHSweepNative(selfPod, geomPod, posePod, (PhysxPxVec3Pod*)punitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
				{
					fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
					{
						byte ret = PxBVHSweepNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, posePod, (PhysxPxVec3Pod*)punitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
				{
					fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
					{
						byte ret = PxBVHSweepNative(selfPod, geomPod, (PhysxPxTransformPod*)pposePod, (PhysxPxVec3Pod*)punitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		public static bool PxBVHSweep( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  ref PhysxPxVec3Pod unitdirPod,  float maxDist,  ref PhysxPxBVHRaycastCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxVec3Pod* punitdirPod = &unitdirPod)
					{
						fixed (PhysxPxBVHRaycastCallbackPod* pcbPod = &cbPod)
						{
							byte ret = PxBVHSweepNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, (PhysxPxVec3Pod*)punitdirPod, maxDist, (PhysxPxBVHRaycastCallbackPod*)pcbPod, queryflagsPod);
							return ret != 0;
						}
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_overlap")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBVHOverlapNative(PhysxPxBVHPod* selfPod, PhysxPxGeometryPod* geomPod, PhysxPxTransformPod* posePod, PhysxPxBVHOverlapCallbackPod* cbPod, uint queryflagsPod);

		public static bool PxBVHOverlap( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  PhysxPxBVHOverlapCallbackPod* cbPod,  uint queryflagsPod)
		{
			byte ret = PxBVHOverlapNative(selfPod, geomPod, posePod, cbPod, queryflagsPod);
			return ret != 0;
		}

		public static bool PxBVHOverlap( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  PhysxPxBVHOverlapCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				byte ret = PxBVHOverlapNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, posePod, cbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHOverlap( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  PhysxPxBVHOverlapCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				byte ret = PxBVHOverlapNative(selfPod, geomPod, (PhysxPxTransformPod*)pposePod, cbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHOverlap( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  PhysxPxBVHOverlapCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					byte ret = PxBVHOverlapNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, cbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHOverlap( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  PhysxPxTransformPod* posePod,  ref PhysxPxBVHOverlapCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxBVHOverlapCallbackPod* pcbPod = &cbPod)
			{
				byte ret = PxBVHOverlapNative(selfPod, geomPod, posePod, (PhysxPxBVHOverlapCallbackPod*)pcbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHOverlap( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  PhysxPxTransformPod* posePod,  ref PhysxPxBVHOverlapCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxBVHOverlapCallbackPod* pcbPod = &cbPod)
				{
					byte ret = PxBVHOverlapNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, posePod, (PhysxPxBVHOverlapCallbackPod*)pcbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHOverlap( PhysxPxBVHPod* selfPod,  PhysxPxGeometryPod* geomPod,  ref PhysxPxTransformPod posePod,  ref PhysxPxBVHOverlapCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxTransformPod* pposePod = &posePod)
			{
				fixed (PhysxPxBVHOverlapCallbackPod* pcbPod = &cbPod)
				{
					byte ret = PxBVHOverlapNative(selfPod, geomPod, (PhysxPxTransformPod*)pposePod, (PhysxPxBVHOverlapCallbackPod*)pcbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		public static bool PxBVHOverlap( PhysxPxBVHPod* selfPod,  ref PhysxPxGeometryPod geomPod,  ref PhysxPxTransformPod posePod,  ref PhysxPxBVHOverlapCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxGeometryPod* pgeomPod = &geomPod)
			{
				fixed (PhysxPxTransformPod* pposePod = &posePod)
				{
					fixed (PhysxPxBVHOverlapCallbackPod* pcbPod = &cbPod)
					{
						byte ret = PxBVHOverlapNative(selfPod, (PhysxPxGeometryPod*)pgeomPod, (PhysxPxTransformPod*)pposePod, (PhysxPxBVHOverlapCallbackPod*)pcbPod, queryflagsPod);
						return ret != 0;
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_cull")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBVHCullNative(PhysxPxBVHPod* selfPod, uint nbPlanes, PhysxPxPlanePod* planesPod, PhysxPxBVHOverlapCallbackPod* cbPod, uint queryflagsPod);

		public static bool PxBVHCull( PhysxPxBVHPod* selfPod,  uint nbPlanes,  PhysxPxPlanePod* planesPod,  PhysxPxBVHOverlapCallbackPod* cbPod,  uint queryflagsPod)
		{
			byte ret = PxBVHCullNative(selfPod, nbPlanes, planesPod, cbPod, queryflagsPod);
			return ret != 0;
		}

		public static bool PxBVHCull( PhysxPxBVHPod* selfPod,  uint nbPlanes,  ref PhysxPxPlanePod planesPod,  PhysxPxBVHOverlapCallbackPod* cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxPlanePod* pplanesPod = &planesPod)
			{
				byte ret = PxBVHCullNative(selfPod, nbPlanes, (PhysxPxPlanePod*)pplanesPod, cbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHCull( PhysxPxBVHPod* selfPod,  uint nbPlanes,  PhysxPxPlanePod* planesPod,  ref PhysxPxBVHOverlapCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxBVHOverlapCallbackPod* pcbPod = &cbPod)
			{
				byte ret = PxBVHCullNative(selfPod, nbPlanes, planesPod, (PhysxPxBVHOverlapCallbackPod*)pcbPod, queryflagsPod);
				return ret != 0;
			}
		}

		public static bool PxBVHCull( PhysxPxBVHPod* selfPod,  uint nbPlanes,  ref PhysxPxPlanePod planesPod,  ref PhysxPxBVHOverlapCallbackPod cbPod,  uint queryflagsPod)
		{
			fixed (PhysxPxPlanePod* pplanesPod = &planesPod)
			{
				fixed (PhysxPxBVHOverlapCallbackPod* pcbPod = &cbPod)
				{
					byte ret = PxBVHCullNative(selfPod, nbPlanes, (PhysxPxPlanePod*)pplanesPod, (PhysxPxBVHOverlapCallbackPod*)pcbPod, queryflagsPod);
					return ret != 0;
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_getNbBounds")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxBVHGetNbBoundsNative(PhysxPxBVHPod* selfPod);

		public static uint PxBVHGetNbBounds( PhysxPxBVHPod* selfPod)
		{
			uint ret = PxBVHGetNbBoundsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_getBounds")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod* PxBVHGetBoundsNative(PhysxPxBVHPod* selfPod);

		public static PhysxPxBounds3Pod* PxBVHGetBounds( PhysxPxBVHPod* selfPod)
		{
			PhysxPxBounds3Pod* ret = PxBVHGetBoundsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_getBoundsForModification_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod* PxBVHGetBoundsForModificationMutNative(PhysxPxBVHPod* selfPod);

		public static PhysxPxBounds3Pod* PxBVHGetBoundsForModificationMut( PhysxPxBVHPod* selfPod)
		{
			PhysxPxBounds3Pod* ret = PxBVHGetBoundsForModificationMutNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_refit_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBVHRefitMutNative(PhysxPxBVHPod* selfPod);

		public static void PxBVHRefitMut( PhysxPxBVHPod* selfPod)
		{
			PxBVHRefitMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_updateBounds_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBVHUpdateBoundsMutNative(PhysxPxBVHPod* selfPod, uint boundsIndex, PhysxPxBounds3Pod* newboundsPod);

		public static bool PxBVHUpdateBoundsMut( PhysxPxBVHPod* selfPod,  uint boundsIndex,  PhysxPxBounds3Pod* newboundsPod)
		{
			byte ret = PxBVHUpdateBoundsMutNative(selfPod, boundsIndex, newboundsPod);
			return ret != 0;
		}

		public static bool PxBVHUpdateBoundsMut( PhysxPxBVHPod* selfPod,  uint boundsIndex,  ref PhysxPxBounds3Pod newboundsPod)
		{
			fixed (PhysxPxBounds3Pod* pnewboundsPod = &newboundsPod)
			{
				byte ret = PxBVHUpdateBoundsMutNative(selfPod, boundsIndex, (PhysxPxBounds3Pod*)pnewboundsPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_partialRefit_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxBVHPartialRefitMutNative(PhysxPxBVHPod* selfPod);

		public static void PxBVHPartialRefitMut( PhysxPxBVHPod* selfPod)
		{
			PxBVHPartialRefitMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_traverse")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxBVHTraverseNative(PhysxPxBVHPod* selfPod, PhysxPxBVHTraversalCallbackPod* cbPod);

		public static bool PxBVHTraverse( PhysxPxBVHPod* selfPod,  PhysxPxBVHTraversalCallbackPod* cbPod)
		{
			byte ret = PxBVHTraverseNative(selfPod, cbPod);
			return ret != 0;
		}

		public static bool PxBVHTraverse( PhysxPxBVHPod* selfPod,  ref PhysxPxBVHTraversalCallbackPod cbPod)
		{
			fixed (PhysxPxBVHTraversalCallbackPod* pcbPod = &cbPod)
			{
				byte ret = PxBVHTraverseNative(selfPod, (PhysxPxBVHTraversalCallbackPod*)pcbPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxBVH_getConcreteTypeName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxBVHGetConcreteTypeNameNative(PhysxPxBVHPod* selfPod);

		public static byte* PxBVHGetConcreteTypeName( PhysxPxBVHPod* selfPod)
		{
			byte* ret = PxBVHGetConcreteTypeNameNative(selfPod);
			return ret;
		}

		public static string PxBVHGetConcreteTypeNameS( PhysxPxBVHPod* selfPod)
		{
			string ret = Utils.DecodeStringUTF8(PxBVHGetConcreteTypeNameNative(selfPod));
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCapsuleGeometry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxCapsuleGeometryPod PxCapsuleGeometryNewNative(float radius, float halfheight);

		public static PhysxPxCapsuleGeometryPod PxCapsuleGeometryNew( float radius,  float halfheight)
		{
			PhysxPxCapsuleGeometryPod ret = PxCapsuleGeometryNewNative(radius, halfheight);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxCapsuleGeometry_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxCapsuleGeometryIsValidNative(PhysxPxCapsuleGeometryPod* selfPod);

		public static bool PxCapsuleGeometryIsValid( PhysxPxCapsuleGeometryPod* selfPod)
		{
			byte ret = PxCapsuleGeometryIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_getNbVertices")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxConvexMeshGetNbVerticesNative(PhysxPxConvexMeshPod* selfPod);

		public static uint PxConvexMeshGetNbVertices( PhysxPxConvexMeshPod* selfPod)
		{
			uint ret = PxConvexMeshGetNbVerticesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_getVertices")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod* PxConvexMeshGetVerticesNative(PhysxPxConvexMeshPod* selfPod);

		public static PhysxPxVec3Pod* PxConvexMeshGetVertices( PhysxPxConvexMeshPod* selfPod)
		{
			PhysxPxVec3Pod* ret = PxConvexMeshGetVerticesNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_getIndexBuffer")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxConvexMeshGetIndexBufferNative(PhysxPxConvexMeshPod* selfPod);

		public static byte* PxConvexMeshGetIndexBuffer( PhysxPxConvexMeshPod* selfPod)
		{
			byte* ret = PxConvexMeshGetIndexBufferNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_getNbPolygons")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial uint PxConvexMeshGetNbPolygonsNative(PhysxPxConvexMeshPod* selfPod);

		public static uint PxConvexMeshGetNbPolygons( PhysxPxConvexMeshPod* selfPod)
		{
			uint ret = PxConvexMeshGetNbPolygonsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_getPolygonData")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxConvexMeshGetPolygonDataNative(PhysxPxConvexMeshPod* selfPod, uint index, PhysxPxHullPolygonPod* dataPod);

		public static bool PxConvexMeshGetPolygonData( PhysxPxConvexMeshPod* selfPod,  uint index,  PhysxPxHullPolygonPod* dataPod)
		{
			byte ret = PxConvexMeshGetPolygonDataNative(selfPod, index, dataPod);
			return ret != 0;
		}

		public static bool PxConvexMeshGetPolygonData( PhysxPxConvexMeshPod* selfPod,  uint index,  ref PhysxPxHullPolygonPod dataPod)
		{
			fixed (PhysxPxHullPolygonPod* pdataPod = &dataPod)
			{
				byte ret = PxConvexMeshGetPolygonDataNative(selfPod, index, (PhysxPxHullPolygonPod*)pdataPod);
				return ret != 0;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_release_mut")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConvexMeshReleaseMutNative(PhysxPxConvexMeshPod* selfPod);

		public static void PxConvexMeshReleaseMut( PhysxPxConvexMeshPod* selfPod)
		{
			PxConvexMeshReleaseMutNative(selfPod);
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_getMassInformation")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial void PxConvexMeshGetMassInformationNative(PhysxPxConvexMeshPod* selfPod, float* massPod, PhysxPxMat33Pod* localinertiaPod, PhysxPxVec3Pod* localcenterofmassPod);

		public static void PxConvexMeshGetMassInformation( PhysxPxConvexMeshPod* selfPod,  float* massPod,  PhysxPxMat33Pod* localinertiaPod,  PhysxPxVec3Pod* localcenterofmassPod)
		{
			PxConvexMeshGetMassInformationNative(selfPod, massPod, localinertiaPod, localcenterofmassPod);
		}

		public static void PxConvexMeshGetMassInformation( PhysxPxConvexMeshPod* selfPod,  ref float massPod,  PhysxPxMat33Pod* localinertiaPod,  PhysxPxVec3Pod* localcenterofmassPod)
		{
			fixed (float* pmassPod = &massPod)
			{
				PxConvexMeshGetMassInformationNative(selfPod, (float*)pmassPod, localinertiaPod, localcenterofmassPod);
			}
		}

		public static void PxConvexMeshGetMassInformation( PhysxPxConvexMeshPod* selfPod,  float* massPod,  ref PhysxPxMat33Pod localinertiaPod,  PhysxPxVec3Pod* localcenterofmassPod)
		{
			fixed (PhysxPxMat33Pod* plocalinertiaPod = &localinertiaPod)
			{
				PxConvexMeshGetMassInformationNative(selfPod, massPod, (PhysxPxMat33Pod*)plocalinertiaPod, localcenterofmassPod);
			}
		}

		public static void PxConvexMeshGetMassInformation( PhysxPxConvexMeshPod* selfPod,  ref float massPod,  ref PhysxPxMat33Pod localinertiaPod,  PhysxPxVec3Pod* localcenterofmassPod)
		{
			fixed (float* pmassPod = &massPod)
			{
				fixed (PhysxPxMat33Pod* plocalinertiaPod = &localinertiaPod)
				{
					PxConvexMeshGetMassInformationNative(selfPod, (float*)pmassPod, (PhysxPxMat33Pod*)plocalinertiaPod, localcenterofmassPod);
				}
			}
		}

		public static void PxConvexMeshGetMassInformation( PhysxPxConvexMeshPod* selfPod,  float* massPod,  PhysxPxMat33Pod* localinertiaPod,  ref PhysxPxVec3Pod localcenterofmassPod)
		{
			fixed (PhysxPxVec3Pod* plocalcenterofmassPod = &localcenterofmassPod)
			{
				PxConvexMeshGetMassInformationNative(selfPod, massPod, localinertiaPod, (PhysxPxVec3Pod*)plocalcenterofmassPod);
			}
		}

		public static void PxConvexMeshGetMassInformation( PhysxPxConvexMeshPod* selfPod,  ref float massPod,  PhysxPxMat33Pod* localinertiaPod,  ref PhysxPxVec3Pod localcenterofmassPod)
		{
			fixed (float* pmassPod = &massPod)
			{
				fixed (PhysxPxVec3Pod* plocalcenterofmassPod = &localcenterofmassPod)
				{
					PxConvexMeshGetMassInformationNative(selfPod, (float*)pmassPod, localinertiaPod, (PhysxPxVec3Pod*)plocalcenterofmassPod);
				}
			}
		}

		public static void PxConvexMeshGetMassInformation( PhysxPxConvexMeshPod* selfPod,  float* massPod,  ref PhysxPxMat33Pod localinertiaPod,  ref PhysxPxVec3Pod localcenterofmassPod)
		{
			fixed (PhysxPxMat33Pod* plocalinertiaPod = &localinertiaPod)
			{
				fixed (PhysxPxVec3Pod* plocalcenterofmassPod = &localcenterofmassPod)
				{
					PxConvexMeshGetMassInformationNative(selfPod, massPod, (PhysxPxMat33Pod*)plocalinertiaPod, (PhysxPxVec3Pod*)plocalcenterofmassPod);
				}
			}
		}

		public static void PxConvexMeshGetMassInformation( PhysxPxConvexMeshPod* selfPod,  ref float massPod,  ref PhysxPxMat33Pod localinertiaPod,  ref PhysxPxVec3Pod localcenterofmassPod)
		{
			fixed (float* pmassPod = &massPod)
			{
				fixed (PhysxPxMat33Pod* plocalinertiaPod = &localinertiaPod)
				{
					fixed (PhysxPxVec3Pod* plocalcenterofmassPod = &localcenterofmassPod)
					{
						PxConvexMeshGetMassInformationNative(selfPod, (float*)pmassPod, (PhysxPxMat33Pod*)plocalinertiaPod, (PhysxPxVec3Pod*)plocalcenterofmassPod);
					}
				}
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_getLocalBounds")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxBounds3Pod PxConvexMeshGetLocalBoundsNative(PhysxPxConvexMeshPod* selfPod);

		public static PhysxPxBounds3Pod PxConvexMeshGetLocalBounds( PhysxPxConvexMeshPod* selfPod)
		{
			PhysxPxBounds3Pod ret = PxConvexMeshGetLocalBoundsNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_getSDF")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial float* PxConvexMeshGetSDFNative(PhysxPxConvexMeshPod* selfPod);

		public static float* PxConvexMeshGetSDF( PhysxPxConvexMeshPod* selfPod)
		{
			float* ret = PxConvexMeshGetSDFNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_getConcreteTypeName")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte* PxConvexMeshGetConcreteTypeNameNative(PhysxPxConvexMeshPod* selfPod);

		public static byte* PxConvexMeshGetConcreteTypeName( PhysxPxConvexMeshPod* selfPod)
		{
			byte* ret = PxConvexMeshGetConcreteTypeNameNative(selfPod);
			return ret;
		}

		public static string PxConvexMeshGetConcreteTypeNameS( PhysxPxConvexMeshPod* selfPod)
		{
			string ret = Utils.DecodeStringUTF8(PxConvexMeshGetConcreteTypeNameNative(selfPod));
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMesh_isGpuCompatible")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxConvexMeshIsGpuCompatibleNative(PhysxPxConvexMeshPod* selfPod);

		public static bool PxConvexMeshIsGpuCompatible( PhysxPxConvexMeshPod* selfPod)
		{
			byte ret = PxConvexMeshIsGpuCompatibleNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMeshScalePod PxMeshScaleNewNative();

		public static PhysxPxMeshScalePod PxMeshScaleNew()
		{
			PhysxPxMeshScalePod ret = PxMeshScaleNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_new_1")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMeshScalePod PxMeshScaleNew1Native(float r);

		public static PhysxPxMeshScalePod PxMeshScaleNew1( float r)
		{
			PhysxPxMeshScalePod ret = PxMeshScaleNew1Native(r);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_new_2")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMeshScalePod PxMeshScaleNew2Native(PhysxPxVec3Pod* sPod);

		public static PhysxPxMeshScalePod PxMeshScaleNew2( PhysxPxVec3Pod* sPod)
		{
			PhysxPxMeshScalePod ret = PxMeshScaleNew2Native(sPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_new_3")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMeshScalePod PxMeshScaleNew3Native(PhysxPxVec3Pod* sPod, PhysxPxQuatPod* rPod);

		public static PhysxPxMeshScalePod PxMeshScaleNew3( PhysxPxVec3Pod* sPod,  PhysxPxQuatPod* rPod)
		{
			PhysxPxMeshScalePod ret = PxMeshScaleNew3Native(sPod, rPod);
			return ret;
		}

		public static PhysxPxMeshScalePod PxMeshScaleNew3( PhysxPxVec3Pod* sPod,  ref PhysxPxQuatPod rPod)
		{
			fixed (PhysxPxQuatPod* prPod = &rPod)
			{
				PhysxPxMeshScalePod ret = PxMeshScaleNew3Native(sPod, (PhysxPxQuatPod*)prPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_isIdentity")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxMeshScaleIsIdentityNative(PhysxPxMeshScalePod* selfPod);

		public static bool PxMeshScaleIsIdentity( PhysxPxMeshScalePod* selfPod)
		{
			byte ret = PxMeshScaleIsIdentityNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_getInverse")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMeshScalePod PxMeshScaleGetInverseNative(PhysxPxMeshScalePod* selfPod);

		public static PhysxPxMeshScalePod PxMeshScaleGetInverse( PhysxPxMeshScalePod* selfPod)
		{
			PhysxPxMeshScalePod ret = PxMeshScaleGetInverseNative(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_toMat33")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxMat33Pod PxMeshScaleToMat33Native(PhysxPxMeshScalePod* selfPod);

		public static PhysxPxMat33Pod PxMeshScaleToMat33( PhysxPxMeshScalePod* selfPod)
		{
			PhysxPxMat33Pod ret = PxMeshScaleToMat33Native(selfPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_hasNegativeDeterminant")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxMeshScaleHasNegativeDeterminantNative(PhysxPxMeshScalePod* selfPod);

		public static bool PxMeshScaleHasNegativeDeterminant( PhysxPxMeshScalePod* selfPod)
		{
			byte ret = PxMeshScaleHasNegativeDeterminantNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_transform")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxVec3Pod PxMeshScaleTransformNative(PhysxPxMeshScalePod* selfPod, PhysxPxVec3Pod* vPod);

		public static PhysxPxVec3Pod PxMeshScaleTransform( PhysxPxMeshScalePod* selfPod,  PhysxPxVec3Pod* vPod)
		{
			PhysxPxVec3Pod ret = PxMeshScaleTransformNative(selfPod, vPod);
			return ret;
		}

		public static PhysxPxVec3Pod PxMeshScaleTransform( PhysxPxMeshScalePod* selfPod,  ref PhysxPxVec3Pod vPod)
		{
			fixed (PhysxPxVec3Pod* pvPod = &vPod)
			{
				PhysxPxVec3Pod ret = PxMeshScaleTransformNative(selfPod, (PhysxPxVec3Pod*)pvPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_isValidForTriangleMesh")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxMeshScaleIsValidForTriangleMeshNative(PhysxPxMeshScalePod* selfPod);

		public static bool PxMeshScaleIsValidForTriangleMesh( PhysxPxMeshScalePod* selfPod)
		{
			byte ret = PxMeshScaleIsValidForTriangleMeshNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxMeshScale_isValidForConvexMesh")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxMeshScaleIsValidForConvexMeshNative(PhysxPxMeshScalePod* selfPod);

		public static bool PxMeshScaleIsValidForConvexMesh( PhysxPxMeshScalePod* selfPod)
		{
			byte ret = PxMeshScaleIsValidForConvexMeshNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMeshGeometry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxConvexMeshGeometryPod PxConvexMeshGeometryNewNative(PhysxPxConvexMeshPod* meshPod, PhysxPxMeshScalePod* scalingPod, byte flagsPod);

		public static PhysxPxConvexMeshGeometryPod PxConvexMeshGeometryNew( PhysxPxConvexMeshPod* meshPod,  PhysxPxMeshScalePod* scalingPod,  byte flagsPod)
		{
			PhysxPxConvexMeshGeometryPod ret = PxConvexMeshGeometryNewNative(meshPod, scalingPod, flagsPod);
			return ret;
		}

		public static PhysxPxConvexMeshGeometryPod PxConvexMeshGeometryNew( PhysxPxConvexMeshPod* meshPod,  ref PhysxPxMeshScalePod scalingPod,  byte flagsPod)
		{
			fixed (PhysxPxMeshScalePod* pscalingPod = &scalingPod)
			{
				PhysxPxConvexMeshGeometryPod ret = PxConvexMeshGeometryNewNative(meshPod, (PhysxPxMeshScalePod*)pscalingPod, flagsPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxConvexMeshGeometry_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxConvexMeshGeometryIsValidNative(PhysxPxConvexMeshGeometryPod* selfPod);

		public static bool PxConvexMeshGeometryIsValid( PhysxPxConvexMeshGeometryPod* selfPod)
		{
			byte ret = PxConvexMeshGeometryIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxSphereGeometry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxSphereGeometryPod PxSphereGeometryNewNative(float ir);

		public static PhysxPxSphereGeometryPod PxSphereGeometryNew( float ir)
		{
			PhysxPxSphereGeometryPod ret = PxSphereGeometryNewNative(ir);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxSphereGeometry_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxSphereGeometryIsValidNative(PhysxPxSphereGeometryPod* selfPod);

		public static bool PxSphereGeometryIsValid( PhysxPxSphereGeometryPod* selfPod)
		{
			byte ret = PxSphereGeometryIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxPlaneGeometry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxPlaneGeometryPod PxPlaneGeometryNewNative();

		public static PhysxPxPlaneGeometryPod PxPlaneGeometryNew()
		{
			PhysxPxPlaneGeometryPod ret = PxPlaneGeometryNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxPlaneGeometry_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxPlaneGeometryIsValidNative(PhysxPxPlaneGeometryPod* selfPod);

		public static bool PxPlaneGeometryIsValid( PhysxPxPlaneGeometryPod* selfPod)
		{
			byte ret = PxPlaneGeometryIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMeshGeometry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTriangleMeshGeometryPod PxTriangleMeshGeometryNewNative(PhysxPxTriangleMeshPod* meshPod, PhysxPxMeshScalePod* scalingPod, byte flagsPod);

		public static PhysxPxTriangleMeshGeometryPod PxTriangleMeshGeometryNew( PhysxPxTriangleMeshPod* meshPod,  PhysxPxMeshScalePod* scalingPod,  byte flagsPod)
		{
			PhysxPxTriangleMeshGeometryPod ret = PxTriangleMeshGeometryNewNative(meshPod, scalingPod, flagsPod);
			return ret;
		}

		public static PhysxPxTriangleMeshGeometryPod PxTriangleMeshGeometryNew( PhysxPxTriangleMeshPod* meshPod,  ref PhysxPxMeshScalePod scalingPod,  byte flagsPod)
		{
			fixed (PhysxPxMeshScalePod* pscalingPod = &scalingPod)
			{
				PhysxPxTriangleMeshGeometryPod ret = PxTriangleMeshGeometryNewNative(meshPod, (PhysxPxMeshScalePod*)pscalingPod, flagsPod);
				return ret;
			}
		}

		[LibraryImport(LibName, EntryPoint = "PxTriangleMeshGeometry_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxTriangleMeshGeometryIsValidNative(PhysxPxTriangleMeshGeometryPod* selfPod);

		public static bool PxTriangleMeshGeometryIsValid( PhysxPxTriangleMeshGeometryPod* selfPod)
		{
			byte ret = PxTriangleMeshGeometryIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightFieldGeometry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxHeightFieldGeometryPod PxHeightFieldGeometryNewNative(PhysxPxHeightFieldPod* hfPod, byte flagsPod, float heightscale, float rowscale, float columnscale);

		public static PhysxPxHeightFieldGeometryPod PxHeightFieldGeometryNew( PhysxPxHeightFieldPod* hfPod,  byte flagsPod,  float heightscale,  float rowscale,  float columnscale)
		{
			PhysxPxHeightFieldGeometryPod ret = PxHeightFieldGeometryNewNative(hfPod, flagsPod, heightscale, rowscale, columnscale);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHeightFieldGeometry_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxHeightFieldGeometryIsValidNative(PhysxPxHeightFieldGeometryPod* selfPod);

		public static bool PxHeightFieldGeometryIsValid( PhysxPxHeightFieldGeometryPod* selfPod)
		{
			byte ret = PxHeightFieldGeometryIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxParticleSystemGeometry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxParticleSystemGeometryPod PxParticleSystemGeometryNewNative();

		public static PhysxPxParticleSystemGeometryPod PxParticleSystemGeometryNew()
		{
			PhysxPxParticleSystemGeometryPod ret = PxParticleSystemGeometryNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxParticleSystemGeometry_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxParticleSystemGeometryIsValidNative(PhysxPxParticleSystemGeometryPod* selfPod);

		public static bool PxParticleSystemGeometryIsValid( PhysxPxParticleSystemGeometryPod* selfPod)
		{
			byte ret = PxParticleSystemGeometryIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxHairSystemGeometry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxHairSystemGeometryPod PxHairSystemGeometryNewNative();

		public static PhysxPxHairSystemGeometryPod PxHairSystemGeometryNew()
		{
			PhysxPxHairSystemGeometryPod ret = PxHairSystemGeometryNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxHairSystemGeometry_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxHairSystemGeometryIsValidNative(PhysxPxHairSystemGeometryPod* selfPod);

		public static bool PxHairSystemGeometryIsValid( PhysxPxHairSystemGeometryPod* selfPod)
		{
			byte ret = PxHairSystemGeometryIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedronMeshGeometry_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxTetrahedronMeshGeometryPod PxTetrahedronMeshGeometryNewNative(PhysxPxTetrahedronMeshPod* meshPod);

		public static PhysxPxTetrahedronMeshGeometryPod PxTetrahedronMeshGeometryNew( PhysxPxTetrahedronMeshPod* meshPod)
		{
			PhysxPxTetrahedronMeshGeometryPod ret = PxTetrahedronMeshGeometryNewNative(meshPod);
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxTetrahedronMeshGeometry_isValid")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial byte PxTetrahedronMeshGeometryIsValidNative(PhysxPxTetrahedronMeshGeometryPod* selfPod);

		public static bool PxTetrahedronMeshGeometryIsValid( PhysxPxTetrahedronMeshGeometryPod* selfPod)
		{
			byte ret = PxTetrahedronMeshGeometryIsValidNative(selfPod);
			return ret != 0;
		}

		[LibraryImport(LibName, EntryPoint = "PxQueryHit_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxQueryHitPod PxQueryHitNewNative();

		public static PhysxPxQueryHitPod PxQueryHitNew()
		{
			PhysxPxQueryHitPod ret = PxQueryHitNewNative();
			return ret;
		}

		[LibraryImport(LibName, EntryPoint = "PxLocationHit_new")]
		[UnmanagedCallConv(CallConvs = new Type[] {typeof(System.Runtime.CompilerServices.CallConvCdecl)})]
		internal static partial PhysxPxLocationHitPod PxLocationHitNewNative();

		public static PhysxPxLocationHitPod PxLocationHitNew()
		{
			PhysxPxLocationHitPod ret = PxLocationHitNewNative();
			return ret;
		}
	}
}
