// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Bgfx
{
	public unsafe partial class Bgfx
	{
		internal static VTable vt;

		public static void InitApi()
		{
			vt = new VTable(GetLibraryName(), 196);
			vt.Load(0, "bgfx_attachment_init");
			vt.Load(1, "bgfx_vertex_layout_begin");
			vt.Load(2, "bgfx_vertex_layout_add");
			vt.Load(3, "bgfx_vertex_layout_decode");
			vt.Load(4, "bgfx_vertex_layout_has");
			vt.Load(5, "bgfx_vertex_layout_skip");
			vt.Load(6, "bgfx_vertex_layout_end");
			vt.Load(7, "bgfx_vertex_pack");
			vt.Load(8, "bgfx_vertex_unpack");
			vt.Load(9, "bgfx_vertex_convert");
			vt.Load(10, "bgfx_weld_vertices");
			vt.Load(11, "bgfx_topology_convert");
			vt.Load(12, "bgfx_topology_sort_tri_list");
			vt.Load(13, "bgfx_get_supported_renderers");
			vt.Load(14, "bgfx_get_renderer_name");
			vt.Load(15, "bgfx_init_ctor");
			vt.Load(16, "bgfx_init");
			vt.Load(17, "bgfx_shutdown");
			vt.Load(18, "bgfx_reset");
			vt.Load(19, "bgfx_frame");
			vt.Load(20, "bgfx_get_renderer_type");
			vt.Load(21, "bgfx_get_caps");
			vt.Load(22, "bgfx_get_stats");
			vt.Load(23, "bgfx_alloc");
			vt.Load(24, "bgfx_copy");
			vt.Load(25, "bgfx_make_ref");
			vt.Load(26, "bgfx_make_ref_release");
			vt.Load(27, "bgfx_set_debug");
			vt.Load(28, "bgfx_dbg_text_clear");
			vt.Load(29, "bgfx_dbg_text_printf");
			vt.Load(30, "bgfx_dbg_text_vprintf");
			vt.Load(31, "bgfx_dbg_text_image");
			vt.Load(32, "bgfx_create_index_buffer");
			vt.Load(33, "bgfx_set_index_buffer_name");
			vt.Load(34, "bgfx_destroy_index_buffer");
			vt.Load(35, "bgfx_create_vertex_layout");
			vt.Load(36, "bgfx_destroy_vertex_layout");
			vt.Load(37, "bgfx_create_vertex_buffer");
			vt.Load(38, "bgfx_set_vertex_buffer_name");
			vt.Load(39, "bgfx_destroy_vertex_buffer");
			vt.Load(40, "bgfx_create_dynamic_index_buffer");
			vt.Load(41, "bgfx_create_dynamic_index_buffer_mem");
			vt.Load(42, "bgfx_update_dynamic_index_buffer");
			vt.Load(43, "bgfx_destroy_dynamic_index_buffer");
			vt.Load(44, "bgfx_create_dynamic_vertex_buffer");
			vt.Load(45, "bgfx_create_dynamic_vertex_buffer_mem");
			vt.Load(46, "bgfx_update_dynamic_vertex_buffer");
			vt.Load(47, "bgfx_destroy_dynamic_vertex_buffer");
			vt.Load(48, "bgfx_get_avail_transient_index_buffer");
			vt.Load(49, "bgfx_get_avail_transient_vertex_buffer");
			vt.Load(50, "bgfx_get_avail_instance_data_buffer");
			vt.Load(51, "bgfx_alloc_transient_index_buffer");
			vt.Load(52, "bgfx_alloc_transient_vertex_buffer");
			vt.Load(53, "bgfx_alloc_transient_buffers");
			vt.Load(54, "bgfx_alloc_instance_data_buffer");
			vt.Load(55, "bgfx_create_indirect_buffer");
			vt.Load(56, "bgfx_destroy_indirect_buffer");
			vt.Load(57, "bgfx_create_shader");
			vt.Load(58, "bgfx_get_shader_uniforms");
			vt.Load(59, "bgfx_set_shader_name");
			vt.Load(60, "bgfx_destroy_shader");
			vt.Load(61, "bgfx_create_program");
			vt.Load(62, "bgfx_create_compute_program");
			vt.Load(63, "bgfx_destroy_program");
			vt.Load(64, "bgfx_is_texture_valid");
			vt.Load(65, "bgfx_is_frame_buffer_valid");
			vt.Load(66, "bgfx_calc_texture_size");
			vt.Load(67, "bgfx_create_texture");
			vt.Load(68, "bgfx_create_texture_2d");
			vt.Load(69, "bgfx_create_texture_2d_scaled");
			vt.Load(70, "bgfx_create_texture_3d");
			vt.Load(71, "bgfx_create_texture_cube");
			vt.Load(72, "bgfx_update_texture_2d");
			vt.Load(73, "bgfx_update_texture_3d");
			vt.Load(74, "bgfx_update_texture_cube");
			vt.Load(75, "bgfx_read_texture");
			vt.Load(76, "bgfx_set_texture_name");
			vt.Load(77, "bgfx_get_direct_access_ptr");
			vt.Load(78, "bgfx_destroy_texture");
			vt.Load(79, "bgfx_create_frame_buffer");
			vt.Load(80, "bgfx_create_frame_buffer_scaled");
			vt.Load(81, "bgfx_create_frame_buffer_from_handles");
			vt.Load(82, "bgfx_create_frame_buffer_from_attachment");
			vt.Load(83, "bgfx_create_frame_buffer_from_nwh");
			vt.Load(84, "bgfx_set_frame_buffer_name");
			vt.Load(85, "bgfx_get_texture");
			vt.Load(86, "bgfx_destroy_frame_buffer");
			vt.Load(87, "bgfx_create_uniform");
			vt.Load(88, "bgfx_get_uniform_info");
			vt.Load(89, "bgfx_destroy_uniform");
			vt.Load(90, "bgfx_create_occlusion_query");
			vt.Load(91, "bgfx_get_result");
			vt.Load(92, "bgfx_destroy_occlusion_query");
			vt.Load(93, "bgfx_set_palette_color");
			vt.Load(94, "bgfx_set_palette_color_rgba8");
			vt.Load(95, "bgfx_set_view_name");
			vt.Load(96, "bgfx_set_view_rect");
			vt.Load(97, "bgfx_set_view_rect_ratio");
			vt.Load(98, "bgfx_set_view_scissor");
			vt.Load(99, "bgfx_set_view_clear");
			vt.Load(100, "bgfx_set_view_clear_mrt");
			vt.Load(101, "bgfx_set_view_mode");
			vt.Load(102, "bgfx_set_view_frame_buffer");
			vt.Load(103, "bgfx_set_view_transform");
			vt.Load(104, "bgfx_set_view_order");
			vt.Load(105, "bgfx_reset_view");
			vt.Load(106, "bgfx_encoder_begin");
			vt.Load(107, "bgfx_encoder_end");
			vt.Load(108, "bgfx_encoder_set_marker");
			vt.Load(109, "bgfx_encoder_set_state");
			vt.Load(110, "bgfx_encoder_set_condition");
			vt.Load(111, "bgfx_encoder_set_stencil");
			vt.Load(112, "bgfx_encoder_set_scissor");
			vt.Load(113, "bgfx_encoder_set_scissor_cached");
			vt.Load(114, "bgfx_encoder_set_transform");
			vt.Load(115, "bgfx_encoder_set_transform_cached");
			vt.Load(116, "bgfx_encoder_alloc_transform");
			vt.Load(117, "bgfx_encoder_set_uniform");
			vt.Load(118, "bgfx_encoder_set_index_buffer");
			vt.Load(119, "bgfx_encoder_set_dynamic_index_buffer");
			vt.Load(120, "bgfx_encoder_set_transient_index_buffer");
			vt.Load(121, "bgfx_encoder_set_vertex_buffer");
			vt.Load(122, "bgfx_encoder_set_vertex_buffer_with_layout");
			vt.Load(123, "bgfx_encoder_set_dynamic_vertex_buffer");
			vt.Load(124, "bgfx_encoder_set_dynamic_vertex_buffer_with_layout");
			vt.Load(125, "bgfx_encoder_set_transient_vertex_buffer");
			vt.Load(126, "bgfx_encoder_set_transient_vertex_buffer_with_layout");
			vt.Load(127, "bgfx_encoder_set_vertex_count");
			vt.Load(128, "bgfx_encoder_set_instance_data_buffer");
			vt.Load(129, "bgfx_encoder_set_instance_data_from_vertex_buffer");
			vt.Load(130, "bgfx_encoder_set_instance_data_from_dynamic_vertex_buffer");
			vt.Load(131, "bgfx_encoder_set_instance_count");
			vt.Load(132, "bgfx_encoder_set_texture");
			vt.Load(133, "bgfx_encoder_touch");
			vt.Load(134, "bgfx_encoder_submit");
			vt.Load(135, "bgfx_encoder_submit_occlusion_query");
			vt.Load(136, "bgfx_encoder_submit_indirect");
			vt.Load(137, "bgfx_encoder_submit_indirect_count");
			vt.Load(138, "bgfx_encoder_set_compute_index_buffer");
			vt.Load(139, "bgfx_encoder_set_compute_vertex_buffer");
			vt.Load(140, "bgfx_encoder_set_compute_dynamic_index_buffer");
			vt.Load(141, "bgfx_encoder_set_compute_dynamic_vertex_buffer");
			vt.Load(142, "bgfx_encoder_set_compute_indirect_buffer");
			vt.Load(143, "bgfx_encoder_set_image");
			vt.Load(144, "bgfx_encoder_dispatch");
			vt.Load(145, "bgfx_encoder_dispatch_indirect");
			vt.Load(146, "bgfx_encoder_discard");
			vt.Load(147, "bgfx_encoder_blit");
			vt.Load(148, "bgfx_request_screen_shot");
			vt.Load(149, "bgfx_render_frame");
			vt.Load(150, "bgfx_set_platform_data");
			vt.Load(151, "bgfx_get_internal_data");
			vt.Load(152, "bgfx_override_internal_texture_ptr");
			vt.Load(153, "bgfx_override_internal_texture");
			vt.Load(154, "bgfx_set_marker");
			vt.Load(155, "bgfx_set_state");
			vt.Load(156, "bgfx_set_condition");
			vt.Load(157, "bgfx_set_stencil");
			vt.Load(158, "bgfx_set_scissor");
			vt.Load(159, "bgfx_set_scissor_cached");
			vt.Load(160, "bgfx_set_transform");
			vt.Load(161, "bgfx_set_transform_cached");
			vt.Load(162, "bgfx_alloc_transform");
			vt.Load(163, "bgfx_set_uniform");
			vt.Load(164, "bgfx_set_index_buffer");
			vt.Load(165, "bgfx_set_dynamic_index_buffer");
			vt.Load(166, "bgfx_set_transient_index_buffer");
			vt.Load(167, "bgfx_set_vertex_buffer");
			vt.Load(168, "bgfx_set_vertex_buffer_with_layout");
			vt.Load(169, "bgfx_set_dynamic_vertex_buffer");
			vt.Load(170, "bgfx_set_dynamic_vertex_buffer_with_layout");
			vt.Load(171, "bgfx_set_transient_vertex_buffer");
			vt.Load(172, "bgfx_set_transient_vertex_buffer_with_layout");
			vt.Load(173, "bgfx_set_vertex_count");
			vt.Load(174, "bgfx_set_instance_data_buffer");
			vt.Load(175, "bgfx_set_instance_data_from_vertex_buffer");
			vt.Load(176, "bgfx_set_instance_data_from_dynamic_vertex_buffer");
			vt.Load(177, "bgfx_set_instance_count");
			vt.Load(178, "bgfx_set_texture");
			vt.Load(179, "bgfx_touch");
			vt.Load(180, "bgfx_submit");
			vt.Load(181, "bgfx_submit_occlusion_query");
			vt.Load(182, "bgfx_submit_indirect");
			vt.Load(183, "bgfx_submit_indirect_count");
			vt.Load(184, "bgfx_set_compute_index_buffer");
			vt.Load(185, "bgfx_set_compute_vertex_buffer");
			vt.Load(186, "bgfx_set_compute_dynamic_index_buffer");
			vt.Load(187, "bgfx_set_compute_dynamic_vertex_buffer");
			vt.Load(188, "bgfx_set_compute_indirect_buffer");
			vt.Load(189, "bgfx_set_image");
			vt.Load(190, "bgfx_dispatch");
			vt.Load(191, "bgfx_dispatch_indirect");
			vt.Load(192, "bgfx_discard");
			vt.Load(193, "bgfx_blit");
			vt.Load(194, "bgfx_get_interface");
		}

		public static void FreeApi()
		{
			vt.Free();
		}
	}
}
