// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Bgfx
{
	/// <summary>
	/// Texture info.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "bgfx_texture_info_s")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct BgfxTextureInfo
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "format")]
		[NativeName(NativeNameType.Type, "bgfx_texture_format_t")]
		public BgfxTextureFormat Format;

		/// <summary>
		/// Texture format.                          <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "storageSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint StorageSize;

		/// <summary>
		/// Total amount of bytes required to store texture. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "width")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort Width;

		/// <summary>
		/// Texture width.                           <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "height")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort Height;

		/// <summary>
		/// Texture height.                          <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "depth")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort Depth;

		/// <summary>
		/// Texture depth.                           <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "numLayers")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort NumLayers;

		/// <summary>
		/// Number of layers in texture array.       <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "numMips")]
		[NativeName(NativeNameType.Type, "uint8_t")]
		public byte NumMips;

		/// <summary>
		/// Number of MIP maps.                      <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "bitsPerPixel")]
		[NativeName(NativeNameType.Type, "uint8_t")]
		public byte BitsPerPixel;

		/// <summary>
		/// Format bits per pixel.                   <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "cubeMap")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte CubeMap;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe BgfxTextureInfo(BgfxTextureFormat format = default, uint storageSize = default, ushort width = default, ushort height = default, ushort depth = default, ushort numLayers = default, byte numMips = default, byte bitsPerPixel = default, bool cubeMap = default)
		{
			Format = format;
			StorageSize = storageSize;
			Width = width;
			Height = height;
			Depth = depth;
			NumLayers = numLayers;
			NumMips = numMips;
			BitsPerPixel = bitsPerPixel;
			CubeMap = cubeMap ? (byte)1 : (byte)0;
		}


	}

}
