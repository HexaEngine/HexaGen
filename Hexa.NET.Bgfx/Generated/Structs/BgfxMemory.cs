// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Bgfx
{
	/// <summary>
	/// Memory must be obtained by calling `bgfx::alloc`, `bgfx::copy`, or `bgfx::makeRef`.<br/>
	/// <br/>
	/// <summary>
	/// To be documented.
	/// </summary>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "bgfx_memory_s")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct BgfxMemory
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "data")]
		[NativeName(NativeNameType.Type, "uint8_t*")]
		public unsafe byte* Data;

		/// <summary>
		/// Pointer to data.                         <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "size")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint Size;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe BgfxMemory(byte* data = default, uint size = default)
		{
			Data = data;
			Size = size;
		}


	}

}
