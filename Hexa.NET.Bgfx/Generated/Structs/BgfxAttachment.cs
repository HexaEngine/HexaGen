// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Bgfx
{
	/// <summary>
	/// Frame buffer texture attachment info.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "bgfx_attachment_s")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct BgfxAttachment
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "access")]
		[NativeName(NativeNameType.Type, "bgfx_access_t")]
		public BgfxAccess Access;

		/// <summary>
		/// Attachment access. See `Access::Enum`.   <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "handle")]
		[NativeName(NativeNameType.Type, "bgfx_texture_handle_t")]
		public BgfxTextureHandle Handle;

		/// <summary>
		/// Render target texture handle.            <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mip")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort Mip;

		/// <summary>
		/// Mip level.                               <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "layer")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort Layer;

		/// <summary>
		/// Cubemap side or depth layer/slice to use. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "numLayers")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort NumLayers;

		/// <summary>
		/// Number of texture layer/slice(s) in array to use. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "resolve")]
		[NativeName(NativeNameType.Type, "uint8_t")]
		public byte Resolve;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe BgfxAttachment(BgfxAccess access = default, BgfxTextureHandle handle = default, ushort mip = default, ushort layer = default, ushort numLayers = default, byte resolve = default)
		{
			Access = access;
			Handle = handle;
			Mip = mip;
			Layer = layer;
			NumLayers = numLayers;
			Resolve = resolve;
		}


	}

}
