// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Bgfx
{
	/// <summary>
	/// Configurable runtime limits parameters.<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "bgfx_init_limits_s")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct BgfxInitLimits
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[NativeName(NativeNameType.Field, "maxEncoders")]
		[NativeName(NativeNameType.Type, "uint16_t")]
		public ushort MaxEncoders;

		/// <summary>
		/// Maximum number of encoder threads.       <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "minResourceCbSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint MinResourceCbSize;

		/// <summary>
		/// Minimum resource command buffer size.    <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "transientVbSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint TransientVbSize;

		/// <summary>
		/// Maximum transient vertex buffer size.    <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "transientIbSize")]
		[NativeName(NativeNameType.Type, "uint32_t")]
		public uint TransientIbSize;


		/// <summary>
		/// To be documented.
		/// </summary>
		public unsafe BgfxInitLimits(ushort maxEncoders = default, uint minResourceCbSize = default, uint transientVbSize = default, uint transientIbSize = default)
		{
			MaxEncoders = maxEncoders;
			MinResourceCbSize = minResourceCbSize;
			TransientVbSize = transientVbSize;
			TransientIbSize = transientIbSize;
		}


	}

}
